<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpKernel\KernelInterface" namespace="Symfony\Component\HttpKernel" name="KernelInterface" abstract="false" final="false" start="25" end="175">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-kernel" file="KernelInterface.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-kernel/KernelInterface.php" size="4837" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="525f022aefd7e5691e3f86f54e97ffec13bc437b" relative="vendor/symfony/http-kernel/KernelInterface.php"/>
  <docblock>
    <description compact="The Kernel is the heart of the Symfony system.">It manages an environment made of bundles.</description>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <extends full="Symfony\Component\HttpKernel\HttpKernelInterface" namespace="Symfony\Component\HttpKernel" name="HttpKernelInterface"/>
  <extends full="Serializable" namespace="" name="Serializable"/>
  <method name="registerBundles" start="32" end="32" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of bundles to register."/>
      <return description="An array of bundle instances." type="array" of="object">
        <type full="Symfony\Component\HttpKernel\BundleInterface" namespace="Symfony\Component\HttpKernel" name="BundleInterface"/>
      </return>
    </docblock>
  </method>
  <method name="registerContainerConfiguration" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Loads the container configuration."/>
      <param description="A LoaderInterface instance" type="object" variable="$loader">
        <type full="Symfony\Component\Config\Loader\LoaderInterface" namespace="Symfony\Component\Config\Loader" name="LoaderInterface"/>
      </param>
    </docblock>
    <parameter name="loader" byreference="false" type="object">
      <type full="Symfony\Component\Config\Loader\LoaderInterface" namespace="Symfony\Component\Config\Loader" name="LoaderInterface"/>
    </parameter>
  </method>
  <method name="boot" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Boots the current kernel."/>
    </docblock>
  </method>
  <method name="shutdown" start="51" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Shutdowns the kernel.">This method is mainly useful when doing functional testing.</description>
    </docblock>
  </method>
  <method name="getBundles" start="58" end="58" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the registered bundle instances."/>
      <return description="An array of registered bundle instances" type="array" of="object">
        <type full="Symfony\Component\HttpKernel\BundleInterface" namespace="Symfony\Component\HttpKernel" name="BundleInterface"/>
      </return>
    </docblock>
  </method>
  <method name="isClassInActiveBundle" start="69" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if a given class name belongs to an active bundle."/>
      <param description="A class name" type="string" variable="$class"/>
      <return description="true if the class belongs to an active bundle, false otherwise" type="object">
        <type full="Symfony\Component\HttpKernel\bool" namespace="Symfony\Component\HttpKernel" name="bool"/>
      </return>
      <deprecated value="since version 2.6, to be removed in 3.0."/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="getBundle" start="81" end="81" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a bundle and optionally its descendants by its name."/>
      <param description="Bundle name" type="string" variable="$name"/>
      <param description="Whether to return the first bundle only or together with its descendants" type="object" variable="$first">
        <type full="Symfony\Component\HttpKernel\bool" namespace="Symfony\Component\HttpKernel" name="bool"/>
      </param>
      <return description="A BundleInterface instance or an array of BundleInterface instances if $first is false" type="array" of="object">
        <type full="Symfony\Component\HttpKernel\BundleInterface|BundleInterface" namespace="Symfony\Component\HttpKernel" name="BundleInterface|BundleInterface"/>
      </return>
      <throws description="when the bundle is not enabled" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="first" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="locateResource" start="111" end="111" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the file path for a given resource.">A Resource can be a file or a directory.

The resource name must follow the following pattern:

    "@BundleName/path/to/a/file.something"

where BundleName is the name of the bundle
and the remaining part is the relative path in the bundle.

If $dir is passed, and the first segment of the path is "Resources",
this method will look for a file named:

    $dir/&lt;BundleName&gt;/path/without/Resources

before looking in the bundle resource folder.</description>
      <param description="A resource name to locate" type="string" variable="$name"/>
      <param description="A directory where to look for the resource first" type="string" variable="$dir"/>
      <param description="Whether to return the first path or paths for all matching bundles" type="object" variable="$first">
        <type full="Symfony\Component\HttpKernel\bool" namespace="Symfony\Component\HttpKernel" name="bool"/>
      </param>
      <return description="The absolute path of the resource or an array if $first is false" type="object">
        <type full="Symfony\Component\HttpKernel\string|array" namespace="Symfony\Component\HttpKernel" name="string|array"/>
      </return>
      <throws description="if the file cannot be found or the name is not valid" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <throws description="if the name contains invalid/unsafe characters" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="dir" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="first" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="getName" start="118" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the name of the kernel."/>
      <return description="The kernel name" type="string"/>
    </docblock>
  </method>
  <method name="getEnvironment" start="125" end="125" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the environment."/>
      <return description="The current environment" type="string"/>
    </docblock>
  </method>
  <method name="isDebug" start="132" end="132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if debug mode is enabled."/>
      <return description="true if debug mode is enabled, false otherwise" type="object">
        <type full="Symfony\Component\HttpKernel\bool" namespace="Symfony\Component\HttpKernel" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="getRootDir" start="139" end="139" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the application root dir."/>
      <return description="The application root dir" type="string"/>
    </docblock>
  </method>
  <method name="getContainer" start="146" end="146" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the current container."/>
      <return description="A ContainerInterface instance" type="object">
        <type full="Symfony\Component\DependencyInjection\ContainerInterface" namespace="Symfony\Component\DependencyInjection" name="ContainerInterface"/>
      </return>
    </docblock>
  </method>
  <method name="getStartTime" start="153" end="153" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the request start time (not available if debug is disabled)."/>
      <return description="The request start timestamp" type="int"/>
    </docblock>
  </method>
  <method name="getCacheDir" start="160" end="160" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the cache directory."/>
      <return description="The cache directory" type="string"/>
    </docblock>
  </method>
  <method name="getLogDir" start="167" end="167" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the log directory."/>
      <return description="The log directory" type="string"/>
    </docblock>
  </method>
  <method name="getCharset" start="174" end="174" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the charset of the application."/>
      <return description="The charset" type="string"/>
    </docblock>
  </method>
</interface>
