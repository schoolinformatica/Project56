<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="PhpParser\NodeVisitor" namespace="PhpParser" name="NodeVisitor" abstract="false" final="false" start="5" end="60">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nikic/php-parser/lib/PhpParser" file="NodeVisitor.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nikic/php-parser/lib/PhpParser/NodeVisitor.php" size="1498" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="81c27be560a17c58e88f47b93937e68e5c054989" relative="vendor/nikic/php-parser/lib/PhpParser/NodeVisitor.php"/>
  <method name="beforeTraverse" start="18" end="18" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called once before traversal.">Return value semantics:
 * null:      $nodes stays as-is
 * otherwise: $nodes is set to the return value</description>
      <param description="Array of nodes" type="array" variable="$nodes" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Array of nodes" type="array" of="object">
        <type full="PhpParser\null|Node" namespace="PhpParser" name="null|Node"/>
      </return>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
  </method>
  <method name="enterNode" start="31" end="31" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called when entering a node.">Return value semantics:
 * null:      $node stays as-is
 * otherwise: $node is set to the return value</description>
      <param description="Node" type="object" variable="$node">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Node" type="object">
        <type full="PhpParser\null|Node" namespace="PhpParser" name="null|Node"/>
      </return>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
  </method>
  <method name="leaveNode" start="46" end="46" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called when leaving a node.">Return value semantics:
 * null:      $node stays as-is
 * false:     $node is removed from the parent array
 * array:     The return value is merged into the parent array (at the position of the $node)
 * otherwise: $node is set to the return value</description>
      <param description="Node" type="object" variable="$node">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Node" type="array" of="object">
        <type full="PhpParser\null|Node|false|Node" namespace="PhpParser" name="null|Node|false|Node"/>
      </return>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
  </method>
  <method name="afterTraverse" start="59" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called once after traversal.">Return value semantics:
 * null:      $nodes stays as-is
 * otherwise: $nodes is set to the return value</description>
      <param description="Array of nodes" type="array" variable="$nodes" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Array of nodes" type="array" of="object">
        <type full="PhpParser\null|Node" namespace="PhpParser" name="null|Node"/>
      </return>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
  </method>
</interface>
