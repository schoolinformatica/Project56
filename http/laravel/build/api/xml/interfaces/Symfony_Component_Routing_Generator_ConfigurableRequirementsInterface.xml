<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Routing\Generator\ConfigurableRequirementsInterface" namespace="Symfony\Component\Routing\Generator" name="ConfigurableRequirementsInterface" abstract="false" final="false" start="38" end="55">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/routing/Generator" file="ConfigurableRequirementsInterface.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/routing/Generator/ConfigurableRequirementsInterface.php" size="2260" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="4d023d74e614420debe62bed34e3da0462a0d85c" relative="vendor/symfony/routing/Generator/ConfigurableRequirementsInterface.php"/>
  <docblock>
    <description compact="ConfigurableRequirementsInterface must be implemented by URL generators that can be configured whether an exception should be generated when the parameters do not match the requirements. It is also possible to disable the requirements check for URL generation completely.">The possible configurations and use-cases:
- setStrictRequirements(true): Throw an exception for mismatching requirements. This
  is mostly useful in development environment.
- setStrictRequirements(false): Don't throw an exception but return null as URL for
  mismatching requirements and log the problem. Useful when you cannot control all
  params because they come from third party libs but don't want to have a 404 in
  production environment. It should log the mismatch so one can review it.
- setStrictRequirements(null): Return the URL with the given parameters without
  checking the requirements at all. When generating a URL you should either trust
  your params or you validated them beforehand because otherwise it would break your
  link anyway. So in production environment you should know that params always pass
  the requirements. Thus this option allows to disable the check on URL generation for
  performance reasons (saving a preg_match for each requirement every time a URL is
  generated).</description>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
    <author value="Tobias Schultze &lt;http://tobion.de&gt;"/>
  </docblock>
  <method name="setStrictRequirements" start="46" end="46" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Enables or disables the exception on incorrect parameters.">Passing null will deactivate the requirements check completely.</description>
      <param type="object" variable="$enabled">
        <type full="Symfony\Component\Routing\Generator\bool|null" namespace="Symfony\Component\Routing\Generator" name="bool|null"/>
      </param>
    </docblock>
    <parameter name="enabled" byreference="false" type="{unknown}"/>
  </method>
  <method name="isStrictRequirements" start="54" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns whether to throw an exception on incorrect parameters.">Null means the requirements check is deactivated completely.</description>
      <return type="object">
        <type full="Symfony\Component\Routing\Generator\bool|null" namespace="Symfony\Component\Routing\Generator" name="bool|null"/>
      </return>
    </docblock>
  </method>
</interface>
