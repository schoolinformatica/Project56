<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Swift_InputByteStream" namespace="" name="Swift_InputByteStream" abstract="false" final="false" start="19" end="75">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/swiftmailer/swiftmailer/lib/classes/Swift" file="InputByteStream.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/swiftmailer/swiftmailer/lib/classes/Swift/InputByteStream.php" size="1997" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="76ff645069467d51bfeabcdf72dbbede8d431258" relative="vendor/swiftmailer/swiftmailer/lib/classes/Swift/InputByteStream.php"/>
  <docblock>
    <description compact="An abstract means of writing data.">Classes implementing this interface may use a subsystem which requires less
memory than working with large strings of data.</description>
    <author value="Chris Corbyn"/>
  </docblock>
  <method name="write" start="37" end="37" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Writes $bytes to the end of the stream.">Writing may not happen immediately if the stream chooses to buffer.  If
you want to write these bytes with immediate effect, call <link xmlns="http://xml.phpdox.net/src" value="commit()"/>after calling write().
This method returns the sequence ID of the write (i.e. 1 for first, 2 for
second, etc etc).
</description>
      <param type="string" variable="$bytes"/>
      <throws type="object">
        <type full="Swift_IoException" namespace="" name="Swift_IoException"/>
      </throws>
      <return type="int"/>
    </docblock>
    <parameter name="bytes" byreference="false" type="{unknown}"/>
  </method>
  <method name="commit" start="45" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="For any bytes that are currently buffered inside the stream, force them off the buffer."/>
      <throws type="object">
        <type full="Swift_IoException" namespace="" name="Swift_IoException"/>
      </throws>
    </docblock>
  </method>
  <method name="bind" start="55" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Attach $is to this stream.">The stream acts as an observer, receiving all data that is written.
All <link xmlns="http://xml.phpdox.net/src" value="write()"/> and <link xmlns="http://xml.phpdox.net/src" value="flushBuffers()"/> operations will be mirrored.
</description>
      <param type="object" variable="$is">
        <type full="Swift_InputByteStream" namespace="" name="Swift_InputByteStream"/>
      </param>
    </docblock>
    <parameter name="is" byreference="false" type="object">
      <type full="Swift_InputByteStream" namespace="" name="Swift_InputByteStream"/>
    </parameter>
  </method>
  <method name="unbind" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove an already bound stream.">If $is is not bound, no errors will be raised.
If the stream currently has any buffered data it will be written to $is
before unbinding occurs.</description>
      <param type="object" variable="$is">
        <type full="Swift_InputByteStream" namespace="" name="Swift_InputByteStream"/>
      </param>
    </docblock>
    <parameter name="is" byreference="false" type="object">
      <type full="Swift_InputByteStream" namespace="" name="Swift_InputByteStream"/>
    </parameter>
  </method>
  <method name="flushBuffers" start="74" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Flush the contents of the stream (empty it) and set the internal pointer to the beginning."/>
      <throws type="object">
        <type full="Swift_IoException" namespace="" name="Swift_IoException"/>
      </throws>
    </docblock>
  </method>
</interface>
