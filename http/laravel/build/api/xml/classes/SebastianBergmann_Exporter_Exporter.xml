<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SebastianBergmann\Exporter\Exporter" namespace="SebastianBergmann\Exporter" name="Exporter" abstract="false" final="false" start="26" end="296">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/sebastian/exporter/src" file="Exporter.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/sebastian/exporter/src/Exporter.php" size="8795" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="e6a66b8ea388dd095413110473ec70b08fbd76b3" relative="vendor/sebastian/exporter/src/Exporter.php"/>
  <docblock>
    <description compact="A nifty utility for visualizing PHP variables.">&lt;code&gt;
&lt;?php
use SebastianBergmann\Exporter\Exporter;

$exporter = new Exporter;
print $exporter-&gt;export(new Exception);
&lt;/code&gt;</description>
  </docblock>
  <method name="export" start="45" end="48" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Exports a value as a string">The output of this method is similar to the output of print_r(), but
improved in various aspects:

 - NULL is rendered as "null" (instead of "")
 - TRUE is rendered as "true" (instead of "1")
 - FALSE is rendered as "false" (instead of "")
 - Strings are always quoted with single quotes
 - Carriage returns and newlines are normalized to \n
 - Recursion and repeated rendering is treated properly</description>
      <param type="mixed" variable="$value"/>
      <param description="The indentation level of the 2nd+ line" type="int" variable="$indentation"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="indentation" byreference="false" type="integer" default="0"/>
  </method>
  <method name="shortenedRecursiveExport" start="55" end="86" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="mixed" variable="$data"/>
      <param type="object" variable="$context">
        <type full="SebastianBergmann\RecursionContext\Context" namespace="SebastianBergmann\RecursionContext" name="Context"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="data" byreference="true" type="{unknown}"/>
    <parameter name="context" byreference="false" type="{unknown}" default="" constant="null">
      <type full="SebastianBergmann\RecursionContext\Context" namespace="SebastianBergmann\RecursionContext" name="Context"/>
    </parameter>
  </method>
  <method name="shortenedExport" start="102" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Exports a value into a single-line string">The output of this method is similar to the output of
SebastianBergmann\Exporter\Exporter::export. This method guarantees
thought that the result contains now newlines.

Newlines are replaced by the visible string '\n'. Contents of arrays
and objects (if any) are replaced by '...'.</description>
      <param type="mixed" variable="$value"/>
      <return type="string"/>
      <see value="SebastianBergmann\Exporter\Exporter::export"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="toArray" start="139" end="189" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Converts an object to an array containing all of its private, protected and public properties."/>
      <param type="mixed" variable="$value"/>
      <return type="array"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Some internal classes like SplObjectStorage don't work with the" line="164"/>
      <comment value="above (fast) mechanism nor with reflection in Zend." line="165"/>
      <comment value="Format the output similarly to print_r() in this case" line="166"/>
    </inline>
  </method>
  <method name="recursiveExport" start="200" end="295" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Recursive implementation of export"/>
      <param description="The value to export" type="mixed" variable="$value"/>
      <param description="The indentation level of the 2nd+ line" type="int" variable="$indentation"/>
      <param description="Previously processed objects" type="object" variable="$processed">
        <type full="\SebastianBergmann\RecursionContext\Context" namespace="\SebastianBergmann\RecursionContext" name="Context"/>
      </param>
      <return type="string"/>
      <see value="SebastianBergmann\Exporter\Exporter::export"/>
    </docblock>
    <parameter name="value" byreference="true" type="{unknown}"/>
    <parameter name="indentation" byreference="false" type="{unknown}"/>
    <parameter name="processed" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
</class>
