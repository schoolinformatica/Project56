<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="phpDocumentor\Reflection\DocBlockTest" namespace="phpDocumentor\Reflection" name="DocBlockTest" abstract="false" final="false" start="27" end="337">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection" file="DocBlockTest.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlockTest.php" size="9716" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="4b7fdfff438870e583eafb158b5181e2fdc92ff9" relative="vendor/phpdocumentor/reflection-docblock/tests/phpDocumentor/Reflection/DocBlockTest.php"/>
  <docblock>
    <description compact="Test class for phpDocumentor\Reflection\DocBlock"/>
    <author value="Mike van Riel &lt;mike.vanriel@naenius.com&gt;"/>
    <copyright value="2010-2011 Mike van Riel / Naenius. (http://www.naenius.com)"/>
    <license name="http://www.opensource.org/licenses/mit-license.php MIT"/>
    <link value="http://phpdoc.org"/>
  </docblock>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <method name="testConstruct" start="34" end="70" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="\phpDocumentor\Reflection\DocBlock"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testConstructWithTagsOnly" start="77" end="92" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="\phpDocumentor\Reflection\DocBlock::splitDocBlock"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testIfStartOfTemplateIsDiscovered" start="97" end="113" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="\phpDocumentor\Reflection\DocBlock::isTemplateStart"/>
    </docblock>
  </method>
  <method name="testIfEndOfTemplateIsDiscovered" start="118" end="127" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="\phpDocumentor\Reflection\DocBlock::isTemplateEnd"/>
    </docblock>
  </method>
  <method name="testConstructOneLiner" start="134" end="144" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="\phpDocumentor\Reflection\DocBlock::cleanInput"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testConstructFromReflector" start="151" end="165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="\phpDocumentor\Reflection\DocBlock::__construct"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testExceptionOnInvalidObject" start="172" end="175" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testDotSeperation" start="177" end="196" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testInvalidTagBlock" start="204" end="222" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="\phpDocumentor\Reflection\DocBlock::parseTags"/>
      <expectedexception value="\LogicException"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testTagCaseSensitivity" start="224" end="261" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetTagsByNameZeroAndOneMatch" start="269" end="274" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <depends value="testConstructFromReflector"/>
      <covers value="\phpDocumentor\Reflection\DocBlock::getTagsByName"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testParseMultilineTag" start="282" end="292" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <depends value="testConstructWithTagsOnly"/>
      <covers value="\phpDocumentor\Reflection\DocBlock::parseTags"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testParseMultilineTagWithLineBreaks" start="300" end="315" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <depends value="testConstructWithTagsOnly"/>
      <covers value="\phpDocumentor\Reflection\DocBlock::parseTags"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="testGetTagsByNameMultipleMatch" start="323" end="336" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <depends value="testConstructWithTagsOnly"/>
      <covers value="\phpDocumentor\Reflection\DocBlock::getTagsByName"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
  </method>
</class>
