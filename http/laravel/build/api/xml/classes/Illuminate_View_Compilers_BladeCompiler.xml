<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\View\Compilers\BladeCompiler" namespace="Illuminate\View\Compilers" name="BladeCompiler" abstract="false" final="false" start="8" end="889">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/View/Compilers" file="BladeCompiler.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/View/Compilers/BladeCompiler.php" size="21382" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="01f286e6782bb88b97765e4ba4fc14e84036c254" relative="vendor/laravel/framework/src/Illuminate/View/Compilers/BladeCompiler.php"/>
  <extends full="Illuminate\View\Compilers\Compiler" namespace="Illuminate\View\Compilers" name="Compiler"/>
  <implements full="Illuminate\View\Compilers\CompilerInterface" namespace="Illuminate\View\Compilers" name="CompilerInterface"/>
  <member name="extensions" type="array" default="" visibility="protected" line="15">
    <docblock>
      <description compact="All of the registered extensions."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="customDirectives" type="array" default="" visibility="protected" line="24">
    <docblock>
      <description compact="All custom &quot;directive&quot; handlers.">This was implemented as a more usable "extend" in 5.1.</description>
      <var type="array"/>
    </docblock>
  </member>
  <member name="path" visibility="protected" line="31">
    <docblock>
      <description compact="The file currently being compiled."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="compilers" type="array" default="" visibility="protected" line="38">
    <docblock>
      <description compact="All of the available compiler functions."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="rawTags" type="array" default="" visibility="protected" line="50">
    <docblock>
      <description compact="Array of opening and closing tags for raw echos."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="contentTags" type="array" default="" visibility="protected" line="57">
    <docblock>
      <description compact="Array of opening and closing tags for regular echos."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="escapedTags" type="array" default="" visibility="protected" line="64">
    <docblock>
      <description compact="Array of opening and closing tags for escaped echos."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="echoFormat" type="string" default="'e(%s)'" visibility="protected" line="71">
    <docblock>
      <description compact="The &quot;regular&quot; / legacy echo string format."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="footer" type="array" default="" visibility="protected" line="78">
    <docblock>
      <description compact="Array of footer lines to be added to template."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="forelseCounter" type="integer" default="0" visibility="protected" line="85">
    <docblock>
      <description compact="Counter to keep track of nested forelse statements."/>
      <var type="int"/>
    </docblock>
  </member>
  <method name="compile" start="93" end="104" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compile the view at the given path."/>
      <param type="string" variable="$path"/>
      <return type="object">
        <type full="Illuminate\View\Compilers\void" namespace="Illuminate\View\Compilers" name="void"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getPath" start="111" end="114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the path currently being compiled."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setPath" start="122" end="125" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the path currently being compiled."/>
      <param type="string" variable="$path"/>
      <return type="object">
        <type full="Illuminate\View\Compilers\void" namespace="Illuminate\View\Compilers" name="void"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileString" start="133" end="155" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compile the given Blade template contents."/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Here we will loop through all of the tokens returned by the Zend lexer and" line="139"/>
      <comment value="parse each one into the corresponding valid PHP. We will then have this" line="140"/>
      <comment value="template as the correctly rendered PHP that can be rendered natively." line="141"/>
      <comment value="If there are any footer lines that need to get added to a template we will" line="146"/>
      <comment value="add them here at the end of the template. This gets used mainly for the" line="147"/>
      <comment value="template inheritance via the extends keyword that should be appended." line="148"/>
    </inline>
  </method>
  <method name="parseToken" start="163" end="174" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Parse the tokens from the template."/>
      <param type="array" variable="$token"/>
      <return type="string"/>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileExtensions" start="182" end="189" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Execute the user defined extensions."/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileComments" start="197" end="202" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile Blade comments into valid PHP."/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEchos" start="210" end="217" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile Blade echos into valid PHP."/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="getEchoMethods" start="224" end="258" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the echo methods in the proper order for compilation."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="compileStatements" start="266" end="279" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile Blade statements that start with &quot;@&quot;."/>
      <param type="string" variable="$value"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileRawEchos" start="287" end="298" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the &quot;raw&quot; echo statements."/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileRegularEchos" start="306" end="319" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the &quot;regular&quot; echo statements."/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEscapedEchos" start="327" end="338" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the escaped echo statements."/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEchoDefaults" start="346" end="349" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compile the default values for the echo statement."/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEach" start="357" end="360" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the each statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileInject" start="368" end="373" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the inject statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileYield" start="381" end="384" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the yield statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileShow" start="392" end="395" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the show statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileSection" start="403" end="406" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the section statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileAppend" start="414" end="417" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the append statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndsection" start="425" end="428" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end-section statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileStop" start="436" end="439" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the stop statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileOverwrite" start="447" end="450" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the overwrite statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileUnless" start="458" end="461" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the unless statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndunless" start="469" end="472" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end unless statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileLang" start="480" end="483" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the lang statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileChoice" start="491" end="494" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the choice statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileElse" start="502" end="505" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the else statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileFor" start="513" end="516" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the for statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileForeach" start="524" end="527" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the foreach statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileForelse" start="535" end="540" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the forelse statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileCan" start="548" end="551" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the can statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileCannot" start="559" end="562" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the cannot statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileIf" start="570" end="573" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the if statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileElseif" start="581" end="584" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the else-if statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEmpty" start="592" end="597" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the forelse statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileWhile" start="605" end="608" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the while statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndwhile" start="616" end="619" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end-while statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndfor" start="627" end="630" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end-for statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndforeach" start="638" end="641" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end-for-each statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndcan" start="649" end="652" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end-can statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndcannot" start="660" end="663" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end-cannot statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndif" start="671" end="674" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end-if statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndforelse" start="682" end="685" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the end-for-else statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileExtends" start="693" end="704" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the extends statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileInclude" start="712" end="719" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the include statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileStack" start="727" end="730" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the stack statements into the content."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compilePush" start="738" end="741" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the push statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="compileEndpush" start="749" end="752" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Compile the endpush statements into valid PHP."/>
      <param type="string" variable="$expression"/>
      <return type="string"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="getExtensions" start="759" end="762" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the extensions used by the compiler."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="extend" start="770" end="773" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register a custom Blade compiler."/>
      <param type="object" variable="$compiler">
        <type full="Illuminate\View\Compilers\callable" namespace="Illuminate\View\Compilers" name="callable"/>
      </param>
      <return type="object">
        <type full="Illuminate\View\Compilers\void" namespace="Illuminate\View\Compilers" name="void"/>
      </return>
    </docblock>
    <parameter name="compiler" byreference="false" type="object">
      <type full="Illuminate\View\Compilers\callable" namespace="Illuminate\View\Compilers" name="callable"/>
    </parameter>
  </method>
  <method name="directive" start="782" end="785" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register a handler for custom directives."/>
      <param type="string" variable="$name"/>
      <param type="object" variable="$handler">
        <type full="Illuminate\View\Compilers\callable" namespace="Illuminate\View\Compilers" name="callable"/>
      </param>
      <return type="object">
        <type full="Illuminate\View\Compilers\void" namespace="Illuminate\View\Compilers" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="handler" byreference="false" type="object">
      <type full="Illuminate\View\Compilers\callable" namespace="Illuminate\View\Compilers" name="callable"/>
    </parameter>
  </method>
  <method name="getCustomDirectives" start="792" end="795" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the list of custom directives."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getRawTags" start="802" end="805" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the raw tags used by the compiler."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setRawTags" start="814" end="817" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the raw tags used for the compiler."/>
      <param type="string" variable="$openTag"/>
      <param type="string" variable="$closeTag"/>
      <return type="object">
        <type full="Illuminate\View\Compilers\void" namespace="Illuminate\View\Compilers" name="void"/>
      </return>
    </docblock>
    <parameter name="openTag" byreference="false" type="{unknown}"/>
    <parameter name="closeTag" byreference="false" type="{unknown}"/>
  </method>
  <method name="setContentTags" start="827" end="832" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the content tags used for the compiler."/>
      <param type="string" variable="$openTag"/>
      <param type="string" variable="$closeTag"/>
      <param type="object" variable="$escaped">
        <type full="Illuminate\View\Compilers\bool" namespace="Illuminate\View\Compilers" name="bool"/>
      </param>
      <return type="object">
        <type full="Illuminate\View\Compilers\void" namespace="Illuminate\View\Compilers" name="void"/>
      </return>
    </docblock>
    <parameter name="openTag" byreference="false" type="{unknown}"/>
    <parameter name="closeTag" byreference="false" type="{unknown}"/>
    <parameter name="escaped" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="setEscapedContentTags" start="841" end="844" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the escaped content tags used for the compiler."/>
      <param type="string" variable="$openTag"/>
      <param type="string" variable="$closeTag"/>
      <return type="object">
        <type full="Illuminate\View\Compilers\void" namespace="Illuminate\View\Compilers" name="void"/>
      </return>
    </docblock>
    <parameter name="openTag" byreference="false" type="{unknown}"/>
    <parameter name="closeTag" byreference="false" type="{unknown}"/>
  </method>
  <method name="getContentTags" start="851" end="854" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the content tags used for the compiler."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getEscapedContentTags" start="861" end="864" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the escaped content tags used for the compiler."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getTags" start="872" end="877" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Gets the tags used for the compiler."/>
      <param type="object" variable="$escaped">
        <type full="Illuminate\View\Compilers\bool" namespace="Illuminate\View\Compilers" name="bool"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="escaped" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="setEchoFormat" start="885" end="888" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the echo format to be used by the compiler."/>
      <param type="string" variable="$format"/>
      <return type="object">
        <type full="Illuminate\View\Compilers\void" namespace="Illuminate\View\Compilers" name="void"/>
      </return>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}"/>
  </method>
</class>
