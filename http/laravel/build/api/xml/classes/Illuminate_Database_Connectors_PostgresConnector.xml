<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Database\Connectors\PostgresConnector" namespace="Illuminate\Database\Connectors" name="PostgresConnector" abstract="false" final="false" start="7" end="117">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Connectors" file="PostgresConnector.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Connectors/PostgresConnector.php" size="3824" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="92270643fb590400ceeedc806708aabc76b77efb" relative="vendor/laravel/framework/src/Illuminate/Database/Connectors/PostgresConnector.php"/>
  <extends full="Illuminate\Database\Connectors\Connector" namespace="Illuminate\Database\Connectors" name="Connector"/>
  <implements full="Illuminate\Database\Connectors\ConnectorInterface" namespace="Illuminate\Database\Connectors" name="ConnectorInterface"/>
  <member name="options" type="array" default="" visibility="protected" line="14">
    <docblock>
      <description compact="The default PDO connection options."/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="connect" start="27" end="70" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Establish a database connection."/>
      <param type="array" variable="$config"/>
      <return type="object">
        <type full="\PDO" namespace="" name="PDO"/>
      </return>
    </docblock>
    <parameter name="config" byreference="false" type="array"/>
    <inline>
      <comment value="First we'll create the basic DSN and connection instance connecting to the" line="29"/>
      <comment value="using the configuration option specified by the developer. We will also" line="30"/>
      <comment value="set the default character set on the connections to UTF-8 by default." line="31"/>
      <comment value="Next, we will check to see if a timezone has been specified in this config" line="42"/>
      <comment value="and if it has we will issue a statement to modify the timezone with the" line="43"/>
      <comment value="database. Setting this DB timezone is an optional configuration item." line="44"/>
      <comment value="Unlike MySQL, Postgres allows the concept of &quot;schema&quot; and a default schema" line="51"/>
      <comment value="may have been specified on the connections. If that is the case we will" line="52"/>
      <comment value="set the default schema search paths to the specified database schema." line="53"/>
      <comment value="Postgres allows an application_name to be set by the user and this name is" line="60"/>
      <comment value="used to when monitoring the application with pg_stat_activity. So we'll" line="61"/>
      <comment value="determine if the option has been specified and run a statement if so." line="62"/>
    </inline>
  </method>
  <method name="getDsn" start="78" end="101" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Create a DSN string from a configuration."/>
      <param type="array" variable="$config"/>
      <return type="string"/>
    </docblock>
    <parameter name="config" byreference="false" type="array"/>
    <inline>
      <comment value="First we will create the basic DSN setup as well as the port if it is in" line="80"/>
      <comment value="in the configuration options. This will give us the basic DSN we will" line="81"/>
      <comment value="need to establish the PDO connections and return them back for use." line="82"/>
      <comment value="If a port was specified, we will add it to this Postgres DSN connections" line="89"/>
      <comment value="format. Once we have done that we are ready to return this connection" line="90"/>
      <comment value="string back out for usage, as this has been fully constructed here." line="91"/>
    </inline>
  </method>
  <method name="formatSchema" start="109" end="116" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Format the schema for the DSN."/>
      <param type="object" variable="$schema">
        <type full="Illuminate\Database\Connectors\array|string" namespace="Illuminate\Database\Connectors" name="array|string"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="schema" byreference="false" type="{unknown}"/>
  </method>
</class>
