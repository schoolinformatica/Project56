<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Hamcrest\Core\CombinableMatcher" namespace="Hamcrest\Core" name="CombinableMatcher" abstract="false" final="false" start="12" end="78">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/Core" file="CombinableMatcher.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/Core/CombinableMatcher.php" size="1781" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="9c6d0995c09820c9ff0e9a106eebbabf1f9f8477" relative="vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/Core/CombinableMatcher.php"/>
  <extends full="Hamcrest\BaseMatcher" namespace="Hamcrest" name="BaseMatcher"/>
  <member name="_matcher" visibility="private" line="15"/>
  <constructor name="__construct" start="17" end="20" abstract="false" final="false" static="false" visibility="public">
    <parameter name="matcher" byreference="false" type="object">
      <type full="Hamcrest\Matcher" namespace="Hamcrest" name="Matcher"/>
    </parameter>
  </constructor>
  <method name="matches" start="22" end="25" abstract="false" final="false" static="false" visibility="public">
    <parameter name="item" byreference="false" type="{unknown}"/>
  </method>
  <method name="describeTo" start="27" end="30" abstract="false" final="false" static="false" visibility="public">
    <parameter name="description" byreference="false" type="object">
      <type full="Hamcrest\Description" namespace="Hamcrest" name="Description"/>
    </parameter>
  </method>
  <method name="andAlso" start="33" end="36" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Diversion from Hamcrest-Java... Logical &quot;and&quot; not permitted"/>
    </docblock>
    <parameter name="other" byreference="false" type="object">
      <type full="Hamcrest\Matcher" namespace="Hamcrest" name="Matcher"/>
    </parameter>
  </method>
  <method name="orElse" start="39" end="42" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Diversion from Hamcrest-Java... Logical &quot;or&quot; not permitted"/>
    </docblock>
    <parameter name="other" byreference="false" type="object">
      <type full="Hamcrest\Matcher" namespace="Hamcrest" name="Matcher"/>
    </parameter>
  </method>
  <method name="both" start="53" end="56" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="This is useful for fluently combining matchers that must both pass.">For example:
&lt;pre&gt;
  assertThat($string, both(containsString("a"))-&gt;andAlso(containsString("b")));
&lt;/pre&gt;</description>
      <factory/>
    </docblock>
    <parameter name="matcher" byreference="false" type="object">
      <type full="Hamcrest\Matcher" namespace="Hamcrest" name="Matcher"/>
    </parameter>
  </method>
  <method name="either" start="67" end="70" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="This is useful for fluently combining matchers where either may pass, for example: &lt;pre&gt;   assertThat($string, either(containsString(&quot;a&quot;))-&gt;orElse(containsString(&quot;b&quot;))); &lt;/pre&gt;"/>
      <factory/>
    </docblock>
    <parameter name="matcher" byreference="false" type="object">
      <type full="Hamcrest\Matcher" namespace="Hamcrest" name="Matcher"/>
    </parameter>
  </method>
  <method name="_templatedListWith" start="74" end="77" abstract="false" final="false" static="false" visibility="private">
    <parameter name="other" byreference="false" type="object">
      <type full="Hamcrest\Matcher" namespace="Hamcrest" name="Matcher"/>
    </parameter>
  </method>
</class>
