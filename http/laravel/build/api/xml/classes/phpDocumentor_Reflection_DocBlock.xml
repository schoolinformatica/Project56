<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="phpDocumentor\Reflection\DocBlock" namespace="phpDocumentor\Reflection" name="DocBlock" abstract="false" final="false" start="26" end="468">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpdocumentor/reflection-docblock/src/phpDocumentor/Reflection" file="DocBlock.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpdocumentor/reflection-docblock/src/phpDocumentor/Reflection/DocBlock.php" size="13923" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="ffea5db6c58938369b160f70708a34810988b8e4" relative="vendor/phpdocumentor/reflection-docblock/src/phpDocumentor/Reflection/DocBlock.php"/>
  <docblock>
    <description compact="Parses the DocBlock for any structure."/>
    <author value="Mike van Riel &lt;mike.vanriel@naenius.com&gt;"/>
    <license name="http://www.opensource.org/licenses/mit-license.php MIT"/>
    <link value="http://phpdoc.org"/>
  </docblock>
  <implements full="Reflector" namespace="" name="Reflector"/>
  <member name="short_description" type="string" default="''" visibility="protected" line="29">
    <docblock>
      <description compact="@var string The opening line for this docblock."/>
    </docblock>
  </member>
  <member name="long_description" type="{unknown}" default="" constant="null" visibility="protected" line="35">
    <docblock>
      <description/>
      <var description="The actual" type="object">description for this docblock.<type full="phpDocumentor\Reflection\DocBlock\Description" namespace="phpDocumentor\Reflection\DocBlock" name="Description"/></var>
    </docblock>
  </member>
  <member name="tags" type="array" default="" visibility="protected" line="41">
    <docblock>
      <description/>
      <var description="An array containing all" type="array" of="object">the tags in this docblock; except inline.<type full="phpDocumentor\Reflection\Tag" namespace="phpDocumentor\Reflection" name="Tag"/></var>
    </docblock>
  </member>
  <member name="context" type="{unknown}" default="" constant="null" visibility="protected" line="44">
    <docblock>
      <description compact="@var Context Information about the context of this DocBlock."/>
    </docblock>
  </member>
  <member name="location" type="{unknown}" default="" constant="null" visibility="protected" line="47">
    <docblock>
      <description compact="@var Location Information about the location of this DocBlock."/>
    </docblock>
  </member>
  <member name="isTemplateStart" type="boolean" default="false" visibility="protected" line="50">
    <docblock>
      <description compact="@var bool Is this DocBlock (the start of) a template?"/>
    </docblock>
  </member>
  <member name="isTemplateEnd" type="boolean" default="false" visibility="protected" line="53">
    <docblock>
      <description compact="@var bool Does this DocBlock signify the end of a DocBlock template?"/>
    </docblock>
  </member>
  <constructor name="__construct" start="72" end="99" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Parses the given docblock and populates the member fields.">The constructor may also receive namespace information such as the
current namespace and aliases. This information is used by some tags
(e.g. @return, @param, etc.) to turn a relative Type into a FQCN.</description>
      <param description="A docblock comment (including" type="object" variable="$docblock">asterisks) or reflector supporting the getDocComment method.<type full="\Reflector|string" namespace="" name="Reflector|string"/></param>
      <param description="The context in which the DocBlock" type="object" variable="$context">occurs.<type full="phpDocumentor\Reflection\DocBlock\Context" namespace="phpDocumentor\Reflection\DocBlock" name="Context"/></param>
      <param description="The location within the file that this" type="object" variable="$location">DocBlock occurs in.<type full="phpDocumentor\Reflection\DocBlock\Location" namespace="phpDocumentor\Reflection\DocBlock" name="Location"/></param>
      <throws description="if the given argument does not have the" type="object">getDocComment method.<type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/></throws>
    </docblock>
    <parameter name="docblock" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="{unknown}" default="" constant="null">
      <type full="phpDocumentor\Reflection\DocBlock\Context" namespace="phpDocumentor\Reflection\DocBlock" name="Context"/>
    </parameter>
    <parameter name="location" byreference="false" type="{unknown}" default="" constant="null">
      <type full="phpDocumentor\Reflection\DocBlock\Location" namespace="phpDocumentor\Reflection\DocBlock" name="Location"/>
    </parameter>
  </constructor>
  <method name="cleanInput" start="108" end="127" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Strips the asterisks from the DocBlock comment."/>
      <param description="String containing the comment text." type="string" variable="$comment"/>
      <return type="string"/>
    </docblock>
    <parameter name="comment" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="reg ex above is not able to remove */ from a single line docblock" line="118"/>
      <comment value="normalize strings" line="123"/>
    </inline>
  </method>
  <method name="splitDocBlock" start="139" end="211" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Splits the DocBlock into a template marker, summary, description and block of tags."/>
      <param description="Comment to split into the sub-parts." type="string" variable="$comment"/>
      <author value="Richard van Velzen (@_richardJ) Special thanks to Richard for the regex responsible for the split."/>
      <author value="Mike van Riel &lt;me@mikevanriel.com&gt; for extending the regex with template marker support."/>
      <return description="containing the template marker (if any), summary, description and a string containing the tags." type="array" of="object">
        <type full="phpDocumentor\Reflection\string" namespace="phpDocumentor\Reflection" name="string"/>
      </return>
    </docblock>
    <parameter name="comment" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Performance improvement cheat: if the first character is an @ then only tags are in this DocBlock. This" line="141"/>
      <comment value="method does not split tags so we return this verbatim as the fourth result (tags). This saves us the" line="142"/>
      <comment value="performance impact of running a regular expression" line="143"/>
      <comment value="clears all extra horizontal whitespace from the line endings to prevent parsing issues" line="148"/>
      <comment value="Splits the docblock into a template marker, short description, long description and tags section" line="151"/>
      <comment xmlns="http://xml.phpdox.net/src" value="- The template marker is empty, #@+ or #@- if the DocBlock starts with either of those (a newline may" line="152"/>
      <comment xmlns="http://xml.phpdox.net/src" value="occur after it and will be stripped)." line="153"/>
      <comment xmlns="http://xml.phpdox.net/src" value="- The short description is started from the first character until a dot is encountered followed by a" line="154"/>
      <comment xmlns="http://xml.phpdox.net/src" value="newline OR two consecutive newlines (horizontal whitespace is taken into account to consider spacing" line="155"/>
      <comment xmlns="http://xml.phpdox.net/src" value="errors). This is optional." line="156"/>
      <comment xmlns="http://xml.phpdox.net/src" value="- The long description, any character until a new line is encountered followed by an @ and word" line="157"/>
      <comment xmlns="http://xml.phpdox.net/src" value="characters (a tag). This is optional." line="158"/>
      <comment xmlns="http://xml.phpdox.net/src" value="- Tags; the remaining characters" line="159"/>
      <comment xmlns="http://xml.phpdox.net/src" value="Big thanks to RichardJ for contributing this Regular Expression" line="160"/>
    </inline>
  </method>
  <method name="parseTags" start="220" end="246" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Creates the tag objects."/>
      <param description="Tag block to parse." type="string" variable="$tags"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\void" namespace="phpDocumentor\Reflection" name="void"/>
      </return>
    </docblock>
    <parameter name="tags" byreference="false" type="{unknown}"/>
  </method>
  <method name="getText" start="256" end="266" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the text portion of the doc block.">Gets the text portion (short and long description combined) of the doc
block.</description>
      <return description="The text portion of the doc block." type="string"/>
    </docblock>
  </method>
  <method name="setText" start="278" end="284" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the text portion of the doc block.">Sets the text portion (short and long description combined) of the doc
block.</description>
      <param description="The new text portion of the doc block." type="string" variable="$docblock"/>
      <return description="This doc block." type="object">
        <type full="phpDocumentor\Reflection\$this" namespace="phpDocumentor\Reflection" name="$this"/>
      </return>
    </docblock>
    <parameter name="comment" byreference="false" type="{unknown}"/>
  </method>
  <method name="getShortDescription" start="290" end="293" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the opening line or also known as short description."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getLongDescription" start="300" end="303" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the full description or also known as long description."/>
      <return type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Description" namespace="phpDocumentor\Reflection\DocBlock" name="Description"/>
      </return>
    </docblock>
  </method>
  <method name="isTemplateStart" start="326" end="329" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns whether this DocBlock is the start of a Template section.">A Docblock may serve as template for a series of subsequent DocBlocks. This is indicated by a special marker
(`#@+`) that is appended directly after the opening `/**` of a DocBlock.

An example of such an opening is:

```
/**#@+
 * My DocBlock
 * /
```

The description and tags (not the summary!) are copied onto all subsequent DocBlocks and also applied to all
elements that follow until another DocBlock is found that contains the closing marker (`#@-`).</description>
      <see value="self::isTemplateEnd() for the check whether a closing marker was provided."/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="isTemplateEnd" start="338" end="341" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns whether this DocBlock is the end of a Template section."/>
      <see value="self::isTemplateStart() for a more complete description of the Docblock Template functionality."/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="getContext" start="348" end="351" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the current context."/>
      <return type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Context" namespace="phpDocumentor\Reflection\DocBlock" name="Context"/>
      </return>
    </docblock>
  </method>
  <method name="getLocation" start="358" end="361" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the current location."/>
      <return type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Location" namespace="phpDocumentor\Reflection\DocBlock" name="Location"/>
      </return>
    </docblock>
  </method>
  <method name="getTags" start="368" end="371" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the tags for this DocBlock."/>
      <return type="array" of="object">
        <type full="phpDocumentor\Reflection\Tag" namespace="phpDocumentor\Reflection" name="Tag"/>
      </return>
    </docblock>
  </method>
  <method name="getTagsByName" start="381" end="395" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of tags matching the given name. If no tags are found an empty array is returned."/>
      <param description="String to search by." type="string" variable="$name"/>
      <return type="array" of="object">
        <type full="phpDocumentor\Reflection\Tag" namespace="phpDocumentor\Reflection" name="Tag"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasTag" start="404" end="414" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if a tag of a certain type is present in this DocBlock."/>
      <param description="Tag name to check for." type="string" variable="$name"/>
      <return type="object">
        <type full="phpDocumentor\Reflection\bool" namespace="phpDocumentor\Reflection" name="bool"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="appendTag" start="425" end="440" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Appends a tag at the end of the list of tags."/>
      <param description="The tag to add." type="object" variable="$tag">
        <type full="phpDocumentor\Reflection\DocBlock\Tag" namespace="phpDocumentor\Reflection\DocBlock" name="Tag"/>
      </param>
      <return description="The newly added tag." type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Tag" namespace="phpDocumentor\Reflection\DocBlock" name="Tag"/>
      </return>
      <throws description="When the tag belongs to a different DocBlock." type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <parameter name="tag" byreference="false" type="object">
      <type full="phpDocumentor\Reflection\DocBlock\Tag" namespace="phpDocumentor\Reflection\DocBlock" name="Tag"/>
    </parameter>
  </method>
  <method name="export" start="452" end="455" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Builds a string representation of this object."/>
      <todo value="determine the exact format as used by PHP Reflection and">implement it.</todo>
      <return type="string"/>
      <codecoverageignore value="Not yet implemented"/>
    </docblock>
  </method>
  <method name="__toString" start="464" end="467" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the exported information (we should use the export static method BUT this throws an exception at this point)."/>
      <return type="string"/>
      <codecoverageignore value="Not yet implemented"/>
    </docblock>
  </method>
</class>
