<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="phpDocumentor\Reflection\DocBlock\Type\Collection" namespace="phpDocumentor\Reflection\DocBlock\Type" name="Collection" abstract="false" final="false" start="25" end="221">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpdocumentor/reflection-docblock/src/phpDocumentor/Reflection/DocBlock/Type" file="Collection.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpdocumentor/reflection-docblock/src/phpDocumentor/Reflection/DocBlock/Type/Collection.php" size="6799" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="0a37f9bd18e4444c6c6ec6abcd09153f4abb519f" relative="vendor/phpdocumentor/reflection-docblock/src/phpDocumentor/Reflection/DocBlock/Type/Collection.php"/>
  <docblock>
    <description compact="Collection"/>
    <author value="Mike van Riel &lt;mike.vanriel@naenius.com&gt;"/>
    <copyright value="2010-2011 Mike van Riel / Naenius (http://www.naenius.com)"/>
    <license name="http://www.opensource.org/licenses/mit-license.php MIT"/>
    <link value="http://phpdoc.org"/>
  </docblock>
  <extends full="ArrayObject" namespace="" name="ArrayObject"/>
  <constant type="string" name="OPERATOR_OR" value="'|'">
    <docblock>
      <description compact="@var string Definition of the OR operator for types"/>
    </docblock>
  </constant>
  <constant type="string" name="OPERATOR_ARRAY" value="'[]'">
    <docblock>
      <description compact="@var string Definition of the ARRAY operator for types"/>
    </docblock>
  </constant>
  <constant type="string" name="OPERATOR_NAMESPACE" value="'\\'">
    <docblock>
      <description compact="@var string Definition of the NAMESPACE operator in PHP"/>
    </docblock>
  </constant>
  <member name="keywords" type="array" default="" visibility="protected" line="37">
    <docblock>
      <description compact="@var string[] List of recognized keywords"/>
    </docblock>
  </member>
  <member name="context" type="{unknown}" default="" constant="null" visibility="protected" line="51">
    <docblock>
      <description compact="Current invoking location.">This is used to prepend to type with a relative location.
May also be 'default' or 'global', in which case they are ignored.</description>
      <var type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Context" namespace="phpDocumentor\Reflection\DocBlock" name="Context"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="61" end="70" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers the namespace and aliases; uses that to add and expand the given types."/>
      <param description="Array containing a list of types to add to this" type="array" variable="$types" of="object">container.<type full="phpDocumentor\Reflection\DocBlock\Type\string" namespace="phpDocumentor\Reflection\DocBlock\Type" name="string"/></param>
      <param description="The current invoking location." type="object" variable="$location">
        <type full="phpDocumentor\Reflection\DocBlock\Context" namespace="phpDocumentor\Reflection\DocBlock" name="Context"/>
      </param>
    </docblock>
    <parameter name="types" byreference="false" type="array" default=""/>
    <parameter name="context" byreference="false" type="{unknown}" default="" constant="null">
      <type full="phpDocumentor\Reflection\DocBlock\Context" namespace="phpDocumentor\Reflection\DocBlock" name="Context"/>
    </parameter>
  </constructor>
  <method name="getContext" start="77" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the current invoking location."/>
      <return type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Context" namespace="phpDocumentor\Reflection\DocBlock" name="Context"/>
      </return>
    </docblock>
  </method>
  <method name="add" start="99" end="116" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a new type to the collection and expands it if it contains a relative namespace.">If a class in the type contains a relative namespace than this collection
will try to expand that into a FQCN.</description>
      <param description="A 'Type' as defined in the phpDocumentor" type="string" variable="$type">documentation.</param>
      <throws description="if a non-string argument is passed." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <see value="http://phpdoc.org/docs/latest/for-users/types.html for the">definition of a type.</see>
      <return type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Type\void" namespace="phpDocumentor\Reflection\DocBlock\Type" name="void"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="separate the type by the OR operator" line="108"/>
    </inline>
  </method>
  <method name="__toString" start="124" end="127" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a string representation of the collection."/>
      <return description="The resolved types across the collection, separated with" type="string">{@link self::OPERATOR_OR}.</return>
    </docblock>
  </method>
  <method name="expand" start="147" end="177" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Analyzes the given type and returns the FQCN variant.">When a type is provided this method checks whether it is not a keyword or
Fully Qualified Class Name. If so it will use the given namespace and
aliases to expand the type to a FQCN representation.

This method only works as expected if the namespace and aliases are set;
no dynamic reflection is being performed here.</description>
      <param description="The relative or absolute type." type="string" variable="$type"/>
      <uses value="getNamespace to determine with what to prefix the type name."/>
      <uses value="getNamespaceAliases to check whether the first part of the relative">type name should not be replaced with another namespace.</uses>
      <return type="string"/>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="isTypeAnArray" start="187" end="190" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Detects whether the given type represents an array."/>
      <param description="A relative or absolute type as defined in the" type="string" variable="$type">phpDocumentor documentation.</param>
      <return type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Type\bool" namespace="phpDocumentor\Reflection\DocBlock\Type" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="isTypeAKeyword" start="200" end="203" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Detects whether the given type represents a PHPDoc keyword."/>
      <param description="A relative or absolute type as defined in the" type="string" variable="$type">phpDocumentor documentation.</param>
      <return type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Type\bool" namespace="phpDocumentor\Reflection\DocBlock\Type" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="isRelativeType" start="216" end="220" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Detects whether the given type represents a relative or absolute path.">This method will detect keywords as being absolute; even though they are
not preceeded by a namespace separator.</description>
      <param description="A relative or absolute type as defined in the" type="string" variable="$type">phpDocumentor documentation.</param>
      <return type="object">
        <type full="phpDocumentor\Reflection\DocBlock\Type\bool" namespace="phpDocumentor\Reflection\DocBlock\Type" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
</class>
