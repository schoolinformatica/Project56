<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Database\Eloquent\Relations\MorphToMany" namespace="Illuminate\Database\Eloquent\Relations" name="MorphToMany" abstract="false" final="false" start="9" end="160">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations" file="MorphToMany.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/MorphToMany.php" size="4111" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="6805e18aa6751ba3f8bdb389d08c7fb1f9c03ecc" relative="vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/MorphToMany.php"/>
  <extends full="Illuminate\Database\Eloquent\Relations\BelongsToMany" namespace="Illuminate\Database\Eloquent\Relations" name="BelongsToMany"/>
  <member name="morphType" visibility="protected" line="16">
    <docblock>
      <description compact="The type of the polymorphic relation."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="morphClass" visibility="protected" line="23">
    <docblock>
      <description compact="The class name of the morph type constraint."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="inverse" visibility="protected" line="32">
    <docblock>
      <description compact="Indicates if we are connecting the inverse of the relation.">This primarily affects the morphClass constraint.</description>
      <var type="object">
        <type full="Illuminate\Database\Eloquent\Relations\bool" namespace="Illuminate\Database\Eloquent\Relations" name="bool"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="47" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new morph to many relationship instance."/>
      <param type="object" variable="$query">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <param type="object" variable="$parent">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </param>
      <param type="string" variable="$name"/>
      <param type="string" variable="$table"/>
      <param type="string" variable="$foreignKey"/>
      <param type="string" variable="$otherKey"/>
      <param type="string" variable="$relationName"/>
      <param type="object" variable="$inverse">
        <type full="Illuminate\Database\Eloquent\Relations\bool" namespace="Illuminate\Database\Eloquent\Relations" name="bool"/>
      </param>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
    <parameter name="query" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
    <parameter name="parent" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Model" namespace="Illuminate\Database\Eloquent" name="Model"/>
    </parameter>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="foreignKey" byreference="false" type="{unknown}"/>
    <parameter name="otherKey" byreference="false" type="{unknown}"/>
    <parameter name="relationName" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="inverse" byreference="false" type="boolean" default="false"/>
  </constructor>
  <method name="setWhere" start="61" end="68" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Set the where clause for the relation query."/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\$this" namespace="Illuminate\Database\Eloquent\Relations" name="$this"/>
      </return>
    </docblock>
  </method>
  <method name="getRelationCountQuery" start="77" end="82" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add the constraints for a relationship count query."/>
      <param type="object" variable="$query">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <param type="object" variable="$parent">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </return>
    </docblock>
    <parameter name="query" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
    <parameter name="parent" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
  </method>
  <method name="addEagerConstraints" start="90" end="95" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the constraints for an eager load of the relation."/>
      <param type="array" variable="$models"/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
    <parameter name="models" byreference="false" type="array"/>
  </method>
  <method name="createAttachRecord" start="104" end="109" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Create a new pivot attachment record."/>
      <param type="int" variable="$id"/>
      <param type="object" variable="$timed">
        <type full="Illuminate\Database\Eloquent\Relations\bool" namespace="Illuminate\Database\Eloquent\Relations" name="bool"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="timed" byreference="false" type="{unknown}"/>
  </method>
  <method name="newPivotQuery" start="116" end="121" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Create a new query builder for the pivot table."/>
      <return type="object">
        <type full="\Illuminate\Database\Query\Builder" namespace="\Illuminate\Database\Query" name="Builder"/>
      </return>
    </docblock>
  </method>
  <method name="newPivot" start="130" end="139" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new pivot model instance."/>
      <param type="array" variable="$attributes"/>
      <param type="object" variable="$exists">
        <type full="Illuminate\Database\Eloquent\Relations\bool" namespace="Illuminate\Database\Eloquent\Relations" name="bool"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Relations\Pivot" namespace="\Illuminate\Database\Eloquent\Relations" name="Pivot"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array" default=""/>
    <parameter name="exists" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getMorphType" start="146" end="149" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the foreign key &quot;type&quot; name."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getMorphClass" start="156" end="159" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the class name of the parent model."/>
      <return type="string"/>
    </docblock>
  </method>
</class>
