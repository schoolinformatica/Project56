<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpParser\Node\Expr\Closure" namespace="PhpParser\Node\Expr" name="Closure" abstract="false" final="false" start="9" end="65">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nikic/php-parser/lib/PhpParser/Node/Expr" file="Closure.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nikic/php-parser/lib/PhpParser/Node/Expr/Closure.php" size="2250" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="1a42e2154b970a0a8be9ea9ce77e044611dd1eb0" relative="vendor/nikic/php-parser/lib/PhpParser/Node/Expr/Closure.php"/>
  <extends full="PhpParser\Node\Expr" namespace="PhpParser\Node" name="Expr"/>
  <implements full="PhpParser\Node\FunctionLike" namespace="PhpParser\Node" name="FunctionLike"/>
  <member name="static" visibility="public" line="12">
    <docblock>
      <description compact="@var bool Whether the closure is static"/>
    </docblock>
  </member>
  <member name="byRef" visibility="public" line="14">
    <docblock>
      <description compact="@var bool Whether to return by reference"/>
    </docblock>
  </member>
  <member name="params" visibility="public" line="16">
    <docblock>
      <description compact="@var Node\Param[] Parameters"/>
    </docblock>
  </member>
  <member name="uses" visibility="public" line="18">
    <docblock>
      <description compact="@var ClosureUse[] use()s"/>
    </docblock>
  </member>
  <member name="returnType" visibility="public" line="20">
    <docblock>
      <description compact="@var null|string|Node\Name Return type"/>
    </docblock>
  </member>
  <member name="stmts" visibility="public" line="22">
    <docblock>
      <description compact="@var Node[] Statements"/>
    </docblock>
  </member>
  <constructor name="__construct" start="36" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs a lambda function node."/>
      <param description="Array of the following optional subnodes:" type="array" variable="$subNodes">'static'     =&gt; false  : Whether the closure is static
                         'byRef'      =&gt; false  : Whether to return by reference
                         'params'     =&gt; array(): Parameters
                         'uses'       =&gt; array(): use()s
                         'returnType' =&gt; null   : Return type
                         'stmts'      =&gt; array(): Statements</param>
      <param description="Additional attributes" type="array" variable="$attributes"/>
    </docblock>
    <parameter name="subNodes" byreference="false" type="array" default=""/>
    <parameter name="attributes" byreference="false" type="array" default=""/>
  </constructor>
  <method name="getSubNodeNames" start="46" end="48" abstract="false" final="false" static="false" visibility="public"/>
  <method name="returnsByRef" start="50" end="52" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getParams" start="54" end="56" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getReturnType" start="58" end="60" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getStmts" start="62" end="64" abstract="false" final="false" static="false" visibility="public"/>
</class>
