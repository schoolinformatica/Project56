<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Auth\Passwords\DatabaseTokenRepository" namespace="Illuminate\Auth\Passwords" name="DatabaseTokenRepository" abstract="false" final="false" start="10" end="193">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Auth/Passwords" file="DatabaseTokenRepository.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Auth/Passwords/DatabaseTokenRepository.php" size="4649" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="963cc967a316e60adf0e1a2f66c78335dd8c59eb" relative="vendor/laravel/framework/src/Illuminate/Auth/Passwords/DatabaseTokenRepository.php"/>
  <implements full="Illuminate\Auth\Passwords\TokenRepositoryInterface" namespace="Illuminate\Auth\Passwords" name="TokenRepositoryInterface"/>
  <member name="connection" visibility="protected" line="17">
    <docblock>
      <description compact="The database connection instance."/>
      <var type="object">
        <type full="\Illuminate\Database\ConnectionInterface" namespace="\Illuminate\Database" name="ConnectionInterface"/>
      </var>
    </docblock>
  </member>
  <member name="table" visibility="protected" line="24">
    <docblock>
      <description compact="The token database table."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="hashKey" visibility="protected" line="31">
    <docblock>
      <description compact="The hashing key."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="expires" visibility="protected" line="38">
    <docblock>
      <description compact="The number of seconds a token should last."/>
      <var type="int"/>
    </docblock>
  </member>
  <constructor name="__construct" start="49" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new token repository instance."/>
      <param type="object" variable="$connection">
        <type full="\Illuminate\Database\ConnectionInterface" namespace="\Illuminate\Database" name="ConnectionInterface"/>
      </param>
      <param type="string" variable="$table"/>
      <param type="string" variable="$hashKey"/>
      <param type="int" variable="$expires"/>
      <return type="object">
        <type full="Illuminate\Auth\Passwords\void" namespace="Illuminate\Auth\Passwords" name="void"/>
      </return>
    </docblock>
    <parameter name="connection" byreference="false" type="object">
      <type full="Illuminate\Database\ConnectionInterface" namespace="Illuminate\Database" name="ConnectionInterface"/>
    </parameter>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="hashKey" byreference="false" type="{unknown}"/>
    <parameter name="expires" byreference="false" type="integer" default="60"/>
  </constructor>
  <method name="create" start="63" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new token record."/>
      <param type="object" variable="$user">
        <type full="\Illuminate\Contracts\Auth\CanResetPassword" namespace="\Illuminate\Contracts\Auth" name="CanResetPassword"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="user" byreference="false" type="object">
      <type full="Illuminate\Contracts\Auth\CanResetPassword" namespace="Illuminate\Contracts\Auth" name="CanResetPassword"/>
    </parameter>
    <inline>
      <comment value="We will create a new, random token for the user so that we can e-mail them" line="69"/>
      <comment value="a safe link to the password reset form. Then we will insert a record in" line="70"/>
      <comment value="the database so that we can verify the token within the actual reset." line="71"/>
    </inline>
  </method>
  <method name="deleteExisting" start="85" end="88" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Delete all existing reset tokens from the database."/>
      <param type="object" variable="$user">
        <type full="\Illuminate\Contracts\Auth\CanResetPassword" namespace="\Illuminate\Contracts\Auth" name="CanResetPassword"/>
      </param>
      <return type="int"/>
    </docblock>
    <parameter name="user" byreference="false" type="object">
      <type full="Illuminate\Contracts\Auth\CanResetPassword" namespace="Illuminate\Contracts\Auth" name="CanResetPassword"/>
    </parameter>
  </method>
  <method name="getPayload" start="97" end="100" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Build the record payload for the table."/>
      <param type="string" variable="$email"/>
      <param type="string" variable="$token"/>
      <return type="array"/>
    </docblock>
    <parameter name="email" byreference="false" type="{unknown}"/>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="exists" start="109" end="116" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if a token record exists and is valid."/>
      <param type="object" variable="$user">
        <type full="\Illuminate\Contracts\Auth\CanResetPassword" namespace="\Illuminate\Contracts\Auth" name="CanResetPassword"/>
      </param>
      <param type="string" variable="$token"/>
      <return type="object">
        <type full="Illuminate\Auth\Passwords\bool" namespace="Illuminate\Auth\Passwords" name="bool"/>
      </return>
    </docblock>
    <parameter name="user" byreference="false" type="object">
      <type full="Illuminate\Contracts\Auth\CanResetPassword" namespace="Illuminate\Contracts\Auth" name="CanResetPassword"/>
    </parameter>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="tokenExpired" start="124" end="129" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the token has expired."/>
      <param type="array" variable="$token"/>
      <return type="object">
        <type full="Illuminate\Auth\Passwords\bool" namespace="Illuminate\Auth\Passwords" name="bool"/>
      </return>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCurrentTime" start="136" end="139" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the current UNIX timestamp."/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="delete" start="147" end="150" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Delete a token record by token."/>
      <param type="string" variable="$token"/>
      <return type="object">
        <type full="Illuminate\Auth\Passwords\void" namespace="Illuminate\Auth\Passwords" name="void"/>
      </return>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="deleteExpired" start="157" end="162" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Delete expired tokens."/>
      <return type="object">
        <type full="Illuminate\Auth\Passwords\void" namespace="Illuminate\Auth\Passwords" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="createNewToken" start="169" end="172" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new token for the user."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getTable" start="179" end="182" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Begin a new database query against the table."/>
      <return type="object">
        <type full="\Illuminate\Database\Query\Builder" namespace="\Illuminate\Database\Query" name="Builder"/>
      </return>
    </docblock>
  </method>
  <method name="getConnection" start="189" end="192" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the database connection instance."/>
      <return type="object">
        <type full="\Illuminate\Database\ConnectionInterface" namespace="\Illuminate\Database" name="ConnectionInterface"/>
      </return>
    </docblock>
  </method>
</class>
