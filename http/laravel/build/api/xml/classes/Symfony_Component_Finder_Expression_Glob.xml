<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Finder\Expression\Glob" namespace="Symfony\Component\Finder\Expression" name="Glob" abstract="false" final="false" start="19" end="109">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/finder/Expression" file="Glob.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/finder/Expression/Glob.php" size="1984" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="0d47d7b8b4262ac0bad3370769d3dd0e67fa7fe5" relative="vendor/symfony/finder/Expression/Glob.php"/>
  <docblock>
    <description/>
    <author value="Jean-FranÃ§ois Simon &lt;contact@jfsimon.fr&gt;"/>
  </docblock>
  <implements full="Symfony\Component\Finder\Expression\ValueInterface" namespace="Symfony\Component\Finder\Expression" name="ValueInterface"/>
  <member name="pattern" visibility="private" line="24">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="29" end="32" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$pattern"/>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="render" start="37" end="40" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="renderPattern" start="45" end="48" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="getType" start="53" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="isCaseSensitive" start="61" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="prepend" start="69" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="expr" byreference="false" type="{unknown}"/>
  </method>
  <method name="append" start="79" end="84" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="expr" byreference="false" type="{unknown}"/>
  </method>
  <method name="isExpandable" start="91" end="95" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Tests if glob is expandable (&quot;*.{a,b}&quot; syntax)."/>
      <return type="object">
        <type full="Symfony\Component\Finder\Expression\bool" namespace="Symfony\Component\Finder\Expression" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="toRegex" start="103" end="108" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$strictLeadingDot">
        <type full="Symfony\Component\Finder\Expression\bool" namespace="Symfony\Component\Finder\Expression" name="bool"/>
      </param>
      <param type="object" variable="$strictWildcardSlash">
        <type full="Symfony\Component\Finder\Expression\bool" namespace="Symfony\Component\Finder\Expression" name="bool"/>
      </param>
      <return type="object">
        <type full="Symfony\Component\Finder\Expression\Regex" namespace="Symfony\Component\Finder\Expression" name="Regex"/>
      </return>
    </docblock>
    <parameter name="strictLeadingDot" byreference="false" type="boolean" default="true"/>
    <parameter name="strictWildcardSlash" byreference="false" type="boolean" default="true"/>
  </method>
</class>
