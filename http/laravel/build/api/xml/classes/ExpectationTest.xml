<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ExpectationTest" namespace="" name="ExpectationTest" abstract="false" final="false" start="24" end="1945">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mockery/mockery/tests/Mockery" file="ExpectationTest.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mockery/mockery/tests/Mockery/ExpectationTest.php" size="69626" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="0d6199dd9640de8b84b009156795d2d91536ebe2" relative="vendor/mockery/mockery/tests/Mockery/ExpectationTest.php"/>
  <extends full="Mockery\Adapter\Phpunit\MockeryTestCase" namespace="Mockery\Adapter\Phpunit" name="MockeryTestCase"/>
  <method name="setup" start="27" end="31" abstract="false" final="false" static="false" visibility="public"/>
  <method name="teardown" start="33" end="37" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsNullWhenNoArgs" start="39" end="43" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsNullWhenSingleArg" start="45" end="49" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsNullWhenManyArgs" start="51" end="55" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsNullIfNullIsReturnValue" start="57" end="61" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsNullForMockedExistingClassIfAndreturnnullCalled" start="63" end="68" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsNullForMockedExistingClassIfNullIsReturnValue" start="70" end="75" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsSameValueForAllIfNoArgsExpectationAndNoneGiven" start="77" end="81" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetsPublicPropertyWhenRequested" start="83" end="90" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetsPublicPropertyWhenRequestedUsingAlias" start="92" end="99" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetsPublicPropertiesWhenRequested" start="101" end="112" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetsPublicPropertiesWhenRequestedUsingAlias" start="114" end="125" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetsPublicPropertiesWhenRequestedMoreTimesThanSetValues" start="127" end="138" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetsPublicPropertiesWhenRequestedMoreTimesThanSetValuesUsingAlias" start="140" end="151" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetsPublicPropertiesWhenRequestedMoreTimesThanSetValuesWithDirectSet" start="153" end="165" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetsPublicPropertiesWhenRequestedMoreTimesThanSetValuesWithDirectSetUsingAlias" start="167" end="179" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsSameValueForAllIfNoArgsExpectationAndSomeGiven" start="181" end="185" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsValueFromSequenceSequentially" start="187" end="192" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsValueFromSequenceSequentiallyAndRepeatedlyReturnsFinalValueOnExtraCalls" start="194" end="201" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsValueFromSequenceSequentiallyAndRepeatedlyReturnsFinalValueOnExtraCallsWithManyAndReturnCalls" start="203" end="210" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsValueOfClosure" start="212" end="216" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsUndefined" start="218" end="222" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnsValuesSetAsArray" start="224" end="230" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testThrowsException" start="235" end="239" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="OutOfBoundsException"/>
    </docblock>
  </method>
  <method name="testThrowsExceptionBasedOnArgs" start="244" end="248" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="OutOfBoundsException"/>
    </docblock>
  </method>
  <method name="testThrowsExceptionBasedOnArgsWithMessage" start="250" end="258" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testThrowsExceptionSequentially" start="263" end="271" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="OutOfBoundsException"/>
    </docblock>
  </method>
  <method name="testAndThrowExceptions" start="273" end="293" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testAndThrowExceptionsCatchNonExceptionArgument" start="299" end="304" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="Mockery\Exception"/>
      <expectedexceptionmessage value="You must pass an array of exception objects to andThrowExceptions"/>
    </docblock>
  </method>
  <method name="testMultipleExpectationsWithReturns" start="306" end="312" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testExpectsNoArguments" start="314" end="318" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testExpectsNoArgumentsThrowsExceptionIfAnyPassed" start="323" end="327" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testExpectsArgumentsArray" start="329" end="333" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testExpectsArgumentsArrayThrowsExceptionIfPassedEmptyArray" start="338" end="342" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testExpectsArgumentsArrayThrowsExceptionIfNoArgumentsPassed" start="347" end="351" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testExpectsArgumentsArrayThrowsExceptionIfPassedWrongArguments" start="356" end="360" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testExpectsStringArgumentExceptionMessageDifferentiatesBetweenNullAndEmptyString" start="366" end="370" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
      <expectedexceptionmessageregexp value="/foo\(NULL\)/"/>
    </docblock>
  </method>
  <method name="testExpectsAnyArguments" start="372" end="378" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testExpectsArgumentMatchingRegularExpression" start="380" end="384" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testExpectsArgumentMatchingObjectType" start="386" end="390" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testThrowsExceptionOnNoArgumentMatch" start="395" end="399" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testNeverCalled" start="401" end="405" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldNotReceive" start="407" end="411" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldNotReceiveThrowsExceptionIfMethodCalled" start="416" end="421" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception\InvalidCountException"/>
    </docblock>
  </method>
  <method name="testShouldNotReceiveWithArgumentThrowsExceptionIfMethodCalled" start="426" end="431" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception\InvalidCountException"/>
    </docblock>
  </method>
  <method name="testNeverCalledThrowsExceptionOnCall" start="436" end="441" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCalledOnce" start="443" end="448" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCalledOnceThrowsExceptionIfNotCalled" start="453" end="457" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCalledOnceThrowsExceptionIfCalledTwice" start="462" end="468" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCalledTwice" start="470" end="476" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCalledTwiceThrowsExceptionIfNotCalled" start="481" end="485" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCalledOnceThrowsExceptionIfCalledThreeTimes" start="490" end="497" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCalledZeroOrMoreTimesAtZeroCalls" start="499" end="503" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCalledZeroOrMoreTimesAtThreeCalls" start="505" end="512" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testTimesCountCalls" start="514" end="522" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testTimesCountCallThrowsExceptionOnTooFewCalls" start="527" end="532" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testTimesCountCallThrowsExceptionOnTooManyCalls" start="537" end="544" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCalledAtLeastOnceAtExactlyOneCall" start="546" end="551" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCalledAtLeastOnceAtExactlyThreeCalls" start="553" end="560" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCalledAtLeastThrowsExceptionOnTooFewCalls" start="565" end="570" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCalledAtMostOnceAtExactlyOneCall" start="572" end="577" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCalledAtMostAtExactlyThreeCalls" start="579" end="586" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCalledAtLeastThrowsExceptionOnTooManyCalls" start="591" end="598" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testExactCountersOverrideAnyPriorSetNonExactCounters" start="603" end="609" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testComboOfLeastAndMostCallsWithOneCall" start="611" end="616" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testComboOfLeastAndMostCallsWithTwoCalls" start="618" end="624" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testComboOfLeastAndMostCallsThrowsExceptionAtTooFewCalls" start="629" end="633" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testComboOfLeastAndMostCallsThrowsExceptionAtTooManyCalls" start="638" end="645" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCallCountingOnlyAppliesToMatchedExpectations" start="647" end="657" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCallCountingThrowsExceptionOnAnyMismatch" start="662" end="673" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testOrderedCallsWithoutError" start="675" end="682" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOrderedCallsWithOutOfOrderError" start="687" end="694" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testDifferentArgumentsAndOrderingsPassWithoutException" start="696" end="703" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDifferentArgumentsAndOrderingsThrowExceptionWhenInWrongOrder" start="708" end="715" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testUnorderedCallsIgnoredForOrdering" start="717" end="728" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOrderingOfDefaultGrouping" start="730" end="737" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOrderingOfDefaultGroupingThrowsExceptionOnWrongOrder" start="742" end="749" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testOrderingUsingNumberedGroups" start="751" end="763" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOrderingUsingNamedGroups" start="765" end="777" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGroupedUngroupedOrderingDoNotOverlap" start="782" end="789" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="2A"/>
    </docblock>
  </method>
  <method name="testGroupedOrderingThrowsExceptionWhenCallsDisordered" start="794" end="801" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testExpectationMatchingWithNoArgsOrderings" start="803" end="812" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testExpectationMatchingWithAnyArgsOrderings" start="814" end="823" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testEnsuresOrderingIsNotCrossMockByDefault" start="825" end="832" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testEnsuresOrderingIsCrossMockWhenGloballyFlagSet" start="837" end="844" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testExpectationCastToStringFormatting" start="846" end="850" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLongExpectationCastToStringFormatting" start="852" end="856" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMultipleExpectationCastToStringFormatting" start="858" end="862" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGroupedOrderingWithLimitsAllowsMultipleReturnValues" start="864" end="876" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testExpectationsCanBeMarkedAsDefaults" start="878" end="883" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDefaultExpectationsValidatedInCorrectOrder" start="885" end="892" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDefaultExpectationsAreReplacedByLaterConcreteExpectations" start="894" end="901" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDefaultExpectationsCanBeChangedByLaterExpectations" start="903" end="914" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDefaultExpectationsCanBeOrdered" start="919" end="926" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testDefaultExpectationsCanBeOrderedAndReplaced" start="928" end="937" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testByDefaultOperatesFromMockConstruction" start="939" end="948" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testByDefaultOnAMockDoesSquatWithoutExpectations" start="950" end="954" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDefaultExpectationsCanBeOverridden" start="956" end="962" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testByDefaultPreventedFromSettingDefaultWhenDefaultingExpectationWasReplaced" start="967" end="972" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testAnyConstraintMatchesAnyArg" start="978" end="984" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Argument Constraint Tests"/>
    </docblock>
  </method>
  <method name="testAnyConstraintNonMatchingCase" start="986" end="994" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testArrayConstraintMatchesArgument" start="996" end="1001" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testArrayConstraintNonMatchingCase" start="1003" end="1011" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testArrayConstraintThrowsExceptionWhenConstraintUnmatched" start="1016" end="1021" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testBoolConstraintMatchesArgument" start="1023" end="1028" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testBoolConstraintNonMatchingCase" start="1030" end="1038" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testBoolConstraintThrowsExceptionWhenConstraintUnmatched" start="1043" end="1048" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testCallableConstraintMatchesArgument" start="1050" end="1055" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCallableConstraintNonMatchingCase" start="1057" end="1065" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCallableConstraintThrowsExceptionWhenConstraintUnmatched" start="1070" end="1075" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testDoubleConstraintMatchesArgument" start="1077" end="1082" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDoubleConstraintNonMatchingCase" start="1084" end="1092" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDoubleConstraintThrowsExceptionWhenConstraintUnmatched" start="1097" end="1102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testFloatConstraintMatchesArgument" start="1104" end="1109" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testFloatConstraintNonMatchingCase" start="1111" end="1119" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testFloatConstraintThrowsExceptionWhenConstraintUnmatched" start="1124" end="1129" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testIntConstraintMatchesArgument" start="1131" end="1136" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testIntConstraintNonMatchingCase" start="1138" end="1146" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testIntConstraintThrowsExceptionWhenConstraintUnmatched" start="1151" end="1156" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testLongConstraintMatchesArgument" start="1158" end="1163" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLongConstraintNonMatchingCase" start="1165" end="1173" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testLongConstraintThrowsExceptionWhenConstraintUnmatched" start="1178" end="1183" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testNullConstraintMatchesArgument" start="1185" end="1190" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNullConstraintNonMatchingCase" start="1192" end="1200" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNullConstraintThrowsExceptionWhenConstraintUnmatched" start="1205" end="1210" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testNumericConstraintMatchesArgument" start="1212" end="1217" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNumericConstraintNonMatchingCase" start="1219" end="1227" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNumericConstraintThrowsExceptionWhenConstraintUnmatched" start="1232" end="1237" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testObjectConstraintMatchesArgument" start="1239" end="1244" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testObjectConstraintNonMatchingCase" start="1246" end="1254" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testObjectConstraintThrowsExceptionWhenConstraintUnmatched" start="1259" end="1264" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testRealConstraintMatchesArgument" start="1266" end="1271" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testRealConstraintNonMatchingCase" start="1273" end="1281" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testRealConstraintThrowsExceptionWhenConstraintUnmatched" start="1286" end="1291" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testResourceConstraintMatchesArgument" start="1293" end="1299" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testResourceConstraintNonMatchingCase" start="1301" end="1309" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testResourceConstraintThrowsExceptionWhenConstraintUnmatched" start="1314" end="1319" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testScalarConstraintMatchesArgument" start="1321" end="1326" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testScalarConstraintNonMatchingCase" start="1328" end="1336" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testScalarConstraintThrowsExceptionWhenConstraintUnmatched" start="1341" end="1346" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testStringConstraintMatchesArgument" start="1348" end="1353" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testStringConstraintNonMatchingCase" start="1355" end="1363" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testStringConstraintThrowsExceptionWhenConstraintUnmatched" start="1368" end="1373" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testClassConstraintMatchesArgument" start="1375" end="1380" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClassConstraintNonMatchingCase" start="1382" end="1390" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClassConstraintThrowsExceptionWhenConstraintUnmatched" start="1395" end="1400" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testDucktypeConstraintMatchesArgument" start="1402" end="1407" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDucktypeConstraintNonMatchingCase" start="1409" end="1417" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDucktypeConstraintThrowsExceptionWhenConstraintUnmatched" start="1422" end="1427" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testArrayContentConstraintMatchesArgument" start="1429" end="1434" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testArrayContentConstraintNonMatchingCase" start="1436" end="1444" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testArrayContentConstraintThrowsExceptionWhenConstraintUnmatched" start="1449" end="1454" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testContainsConstraintMatchesArgument" start="1456" end="1461" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testContainsConstraintNonMatchingCase" start="1463" end="1471" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testContainsConstraintThrowsExceptionWhenConstraintUnmatched" start="1476" end="1481" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testHasKeyConstraintMatchesArgument" start="1483" end="1488" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testHasKeyConstraintNonMatchingCase" start="1490" end="1498" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testHasKeyConstraintThrowsExceptionWhenConstraintUnmatched" start="1503" end="1508" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testHasValueConstraintMatchesArgument" start="1510" end="1515" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testHasValueConstraintNonMatchingCase" start="1517" end="1525" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testHasValueConstraintThrowsExceptionWhenConstraintUnmatched" start="1530" end="1535" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testOnConstraintMatchesArgument_ClosureEvaluatesToTrue" start="1537" end="1543" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOnConstraintThrowsExceptionWhenConstraintUnmatched_ClosureEvaluatesToFalse" start="1548" end="1554" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testMustBeConstraintMatchesArgument" start="1556" end="1561" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMustBeConstraintNonMatchingCase" start="1563" end="1571" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMustBeConstraintThrowsExceptionWhenConstraintUnmatched" start="1576" end="1581" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testMustBeConstraintMatchesObjectArgumentWithEqualsComparisonNotIdentical" start="1583" end="1592" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMustBeConstraintNonMatchingCaseWithObject" start="1594" end="1604" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMustBeConstraintThrowsExceptionWhenConstraintUnmatchedWithObject" start="1609" end="1618" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testMatchPrecedenceBasedOnExpectedCallsFavouringExplicitMatch" start="1620" end="1626" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMatchPrecedenceBasedOnExpectedCallsFavouringAnyMatch" start="1628" end="1634" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnNullIfIgnoreMissingMethodsSet" start="1636" end="1640" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnUndefinedIfIgnoreMissingMethodsSet" start="1642" end="1646" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testReturnAsUndefinedAllowsForInfiniteSelfReturningChain" start="1648" end="1652" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldIgnoreMissingFluentInterface" start="1654" end="1657" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldIgnoreMissingAsUndefinedFluentInterface" start="1659" end="1662" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldIgnoreMissingAsDefinedProxiesToUndefinedAllowingToString" start="1664" end="1669" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldIgnoreMissingDefaultReturnValue" start="1671" end="1675" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldIgnoreMissingDefaultSelfAndReturnsSelf" start="1678" end="1682" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="@issue #253"/>
    </docblock>
  </method>
  <method name="testToStringMagicMethodCanBeMocked" start="1684" end="1688" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOptionalMockRetrieval" start="1690" end="1694" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNotConstraintMatchesArgument" start="1696" end="1701" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNotConstraintNonMatchingCase" start="1703" end="1711" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNotConstraintThrowsExceptionWhenConstraintUnmatched" start="1716" end="1721" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testAnyOfConstraintMatchesArgument" start="1723" end="1729" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testAnyOfConstraintNonMatchingCase" start="1731" end="1739" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testAnyOfConstraintThrowsExceptionWhenConstraintUnmatched" start="1744" end="1749" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testNotAnyOfConstraintMatchesArgument" start="1751" end="1756" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNotAnyOfConstraintNonMatchingCase" start="1758" end="1766" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNotAnyOfConstraintThrowsExceptionWhenConstraintUnmatched" start="1771" end="1776" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testGlobalConfigMayForbidMockingNonExistentMethodsOnClasses" start="1781" end="1786" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testGlobalConfigMayForbidMockingNonExistentMethodsOnAutoDeclaredClasses" start="1792" end="1797" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
      <expectedexceptionmessage value="Mockery's configuration currently forbids mocking"/>
    </docblock>
  </method>
  <method name="testGlobalConfigMayForbidMockingNonExistentMethodsOnObjects" start="1802" end="1807" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testAnExampleWithSomeExpectationAmends" start="1809" end="1825" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testAnExampleWithSomeExpectationAmendsOnCallCounts" start="1827" end="1844" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testAnExampleWithSomeExpectationAmendsOnCallCounts_PHPUnitTest" start="1846" end="1863" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockedMethodsCallableFromWithinOriginalClass" start="1865" end="1870" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingDemeterChainsPassesMockeryExpectationToCompositeExpectation" start="1875" end="1881" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue #20"/>
    </docblock>
  </method>
  <method name="testMockingDemeterChainsPassesMockeryExpectationToCompositeExpectationWithArgs" start="1886" end="1892" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue #20 - with args in demeter chain"/>
    </docblock>
  </method>
  <method name="testPassthruEnsuresRealMethodCalledForReturnValues" start="1894" end="1900" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldIgnoreMissingExpectationBasedOnArgs" start="1902" end="1909" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testShouldDeferMissingExpectationBasedOnArgs" start="1911" end="1930" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanReturnSelf" start="1932" end="1936" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testExpectationCanBeOverridden" start="1938" end="1944" abstract="false" final="false" static="false" visibility="public"/>
</class>
