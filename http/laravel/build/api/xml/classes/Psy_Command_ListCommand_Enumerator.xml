<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Psy\Command\ListCommand\Enumerator" namespace="Psy\Command\ListCommand" name="Enumerator" abstract="true" final="false" start="22" end="146">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/psy/psysh/src/Psy/Command/ListCommand" file="Enumerator.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/psy/psysh/src/Psy/Command/ListCommand/Enumerator.php" size="3941" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="f3d30e762d15472e0736cd718d38a715dee7794b" relative="vendor/psy/psysh/src/Psy/Command/ListCommand/Enumerator.php"/>
  <docblock>
    <description compact="Abstract Enumerator class."/>
  </docblock>
  <constant type="string" name="IS_PUBLIC" value="'public'"/>
  <constant type="string" name="IS_PROTECTED" value="'protected'"/>
  <constant type="string" name="IS_PRIVATE" value="'private'"/>
  <constant type="string" name="IS_GLOBAL" value="'global'"/>
  <constant type="string" name="IS_CONSTANT" value="'const'"/>
  <constant type="string" name="IS_CLASS" value="'class'"/>
  <constant type="string" name="IS_FUNCTION" value="'function'"/>
  <member name="presenter" visibility="private" line="33"/>
  <member name="filter" type="boolean" default="false" visibility="private" line="35"/>
  <member name="invertFilter" type="boolean" default="false" visibility="private" line="36"/>
  <member name="pattern" visibility="private" line="37"/>
  <constructor name="__construct" start="44" end="47" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Enumerator constructor."/>
      <param type="object" variable="$presenter">
        <type full="Psy\VarDumper\Presenter" namespace="Psy\VarDumper" name="Presenter"/>
      </param>
    </docblock>
    <parameter name="presenter" byreference="false" type="object">
      <type full="Psy\VarDumper\Presenter" namespace="Psy\VarDumper" name="Presenter"/>
    </parameter>
  </constructor>
  <method name="enumerate" start="58" end="63" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return a list of categorized things with the given input options and target."/>
      <param type="object" variable="$input">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </param>
      <param type="object" variable="$reflector">
        <type full="Psy\Command\ListCommand\Reflector" namespace="Psy\Command\ListCommand" name="Reflector"/>
      </param>
      <param type="mixed" variable="$target"/>
      <return type="array"/>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="reflector" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Reflector" namespace="" name="Reflector"/>
    </parameter>
    <parameter name="target" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="listItems" start="86" end="86" abstract="true" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Enumerate specific items with the given input options and target.">Implementing classes should return an array of arrays:

    [
        'Constants' =&gt; [
            'FOO' =&gt; [
                'name'  =&gt; 'FOO',
                'style' =&gt; 'public',
                'value' =&gt; '123',
            ],
        ],
    ]</description>
      <param type="object" variable="$input">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </param>
      <param type="object" variable="$reflector">
        <type full="Psy\Command\ListCommand\Reflector" namespace="Psy\Command\ListCommand" name="Reflector"/>
      </param>
      <param type="mixed" variable="$target"/>
      <return type="array"/>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="reflector" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Reflector" namespace="" name="Reflector"/>
    </parameter>
    <parameter name="target" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="presentRef" start="88" end="91" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="showItem" start="93" end="96" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="setFilter" start="98" end="117" abstract="false" final="false" static="false" visibility="private">
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
  </method>
  <method name="validateRegex" start="126" end="135" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Validate that $pattern is a valid regular expression."/>
      <param type="string" variable="$pattern"/>
      <return type="object">
        <type full="Psy\Command\ListCommand\bool" namespace="Psy\Command\ListCommand" name="bool"/>
      </return>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </method>
  <method name="presentSignature" start="137" end="145" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="target" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="This might get weird if the signature is actually for a reflector. Hrm." line="139"/>
    </inline>
  </method>
</class>
