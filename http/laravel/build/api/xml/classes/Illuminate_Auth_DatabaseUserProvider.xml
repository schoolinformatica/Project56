<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Auth\DatabaseUserProvider" namespace="Illuminate\Auth" name="DatabaseUserProvider" abstract="false" final="false" start="11" end="146">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Auth" file="DatabaseUserProvider.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Auth/DatabaseUserProvider.php" size="4138" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="3e8a25fd491c49873d021ceb9400e9bdcd33ff1f" relative="vendor/laravel/framework/src/Illuminate/Auth/DatabaseUserProvider.php"/>
  <implements full="Illuminate\Contracts\Auth\UserProvider" namespace="Illuminate\Contracts\Auth" name="UserProvider"/>
  <member name="conn" visibility="protected" line="18">
    <docblock>
      <description compact="The active database connection."/>
      <var type="object">
        <type full="\Illuminate\Database\ConnectionInterface" namespace="\Illuminate\Database" name="ConnectionInterface"/>
      </var>
    </docblock>
  </member>
  <member name="hasher" visibility="protected" line="25">
    <docblock>
      <description compact="The hasher implementation."/>
      <var type="object">
        <type full="\Illuminate\Contracts\Hashing\Hasher" namespace="\Illuminate\Contracts\Hashing" name="Hasher"/>
      </var>
    </docblock>
  </member>
  <member name="table" visibility="protected" line="32">
    <docblock>
      <description compact="The table containing the users."/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="42" end="47" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new database user provider."/>
      <param type="object" variable="$conn">
        <type full="\Illuminate\Database\ConnectionInterface" namespace="\Illuminate\Database" name="ConnectionInterface"/>
      </param>
      <param type="object" variable="$hasher">
        <type full="\Illuminate\Contracts\Hashing\Hasher" namespace="\Illuminate\Contracts\Hashing" name="Hasher"/>
      </param>
      <param type="string" variable="$table"/>
      <return type="object">
        <type full="Illuminate\Auth\void" namespace="Illuminate\Auth" name="void"/>
      </return>
    </docblock>
    <parameter name="conn" byreference="false" type="object">
      <type full="Illuminate\Database\ConnectionInterface" namespace="Illuminate\Database" name="ConnectionInterface"/>
    </parameter>
    <parameter name="hasher" byreference="false" type="object">
      <type full="Illuminate\Contracts\Hashing\Hasher" namespace="Illuminate\Contracts\Hashing" name="Hasher"/>
    </parameter>
    <parameter name="table" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="retrieveById" start="55" end="60" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieve a user by their unique identifier."/>
      <param type="mixed" variable="$identifier"/>
      <return type="object">
        <type full="\Illuminate\Contracts\Auth\Authenticatable|null" namespace="\Illuminate\Contracts\Auth" name="Authenticatable|null"/>
      </return>
    </docblock>
    <parameter name="identifier" byreference="false" type="{unknown}"/>
  </method>
  <method name="retrieveByToken" start="69" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieve a user by their unique identifier and &quot;remember me&quot; token."/>
      <param type="mixed" variable="$identifier"/>
      <param type="string" variable="$token"/>
      <return type="object">
        <type full="\Illuminate\Contracts\Auth\Authenticatable|null" namespace="\Illuminate\Contracts\Auth" name="Authenticatable|null"/>
      </return>
    </docblock>
    <parameter name="identifier" byreference="false" type="{unknown}"/>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="updateRememberToken" start="86" end="91" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Update the &quot;remember me&quot; token for the given user in storage."/>
      <param type="object" variable="$user">
        <type full="\Illuminate\Contracts\Auth\Authenticatable" namespace="\Illuminate\Contracts\Auth" name="Authenticatable"/>
      </param>
      <param type="string" variable="$token"/>
      <return type="object">
        <type full="Illuminate\Auth\void" namespace="Illuminate\Auth" name="void"/>
      </return>
    </docblock>
    <parameter name="user" byreference="false" type="object">
      <type full="Illuminate\Contracts\Auth\Authenticatable" namespace="Illuminate\Contracts\Auth" name="Authenticatable"/>
    </parameter>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="retrieveByCredentials" start="99" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieve a user by the given credentials."/>
      <param type="array" variable="$credentials"/>
      <return type="object">
        <type full="\Illuminate\Contracts\Auth\Authenticatable|null" namespace="\Illuminate\Contracts\Auth" name="Authenticatable|null"/>
      </return>
    </docblock>
    <parameter name="credentials" byreference="false" type="array"/>
    <inline>
      <comment value="First we will add each credential element to the query as a where clause." line="101"/>
      <comment value="Then we can execute the query and, if we found a user, return it in a" line="102"/>
      <comment value="generic &quot;user&quot; object that will be utilized by the Guard instances." line="103"/>
      <comment value="Now we are ready to execute the query to see if we have an user matching" line="112"/>
      <comment value="the given credentials. If not, we will just return nulls and indicate" line="113"/>
      <comment value="that there are no matching users for these given credential arrays." line="114"/>
    </inline>
  </method>
  <method name="getGenericUser" start="126" end="131" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the generic user."/>
      <param type="mixed" variable="$user"/>
      <return type="object">
        <type full="\Illuminate\Auth\GenericUser|null" namespace="\Illuminate\Auth" name="GenericUser|null"/>
      </return>
    </docblock>
    <parameter name="user" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateCredentials" start="140" end="145" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Validate a user against the given credentials."/>
      <param type="object" variable="$user">
        <type full="\Illuminate\Contracts\Auth\Authenticatable" namespace="\Illuminate\Contracts\Auth" name="Authenticatable"/>
      </param>
      <param type="array" variable="$credentials"/>
      <return type="object">
        <type full="Illuminate\Auth\bool" namespace="Illuminate\Auth" name="bool"/>
      </return>
    </docblock>
    <parameter name="user" byreference="false" type="object">
      <type full="Illuminate\Contracts\Auth\Authenticatable" namespace="Illuminate\Contracts\Auth" name="Authenticatable"/>
    </parameter>
    <parameter name="credentials" byreference="false" type="array"/>
  </method>
</class>
