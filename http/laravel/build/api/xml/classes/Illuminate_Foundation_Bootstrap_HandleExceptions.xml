<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Foundation\Bootstrap\HandleExceptions" namespace="Illuminate\Foundation\Bootstrap" name="HandleExceptions" abstract="false" final="false" start="12" end="156">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Bootstrap" file="HandleExceptions.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Bootstrap/HandleExceptions.php" size="4037" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="583d58a1ef3534d4b94531e1f54dd9e9f2537894" relative="vendor/laravel/framework/src/Illuminate/Foundation/Bootstrap/HandleExceptions.php"/>
  <member name="app" visibility="protected" line="19">
    <docblock>
      <description compact="The application instance."/>
      <var type="object">
        <type full="\Illuminate\Contracts\Foundation\Application" namespace="\Illuminate\Contracts\Foundation" name="Application"/>
      </var>
    </docblock>
  </member>
  <method name="bootstrap" start="27" end="42" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Bootstrap the given application."/>
      <param type="object" variable="$app">
        <type full="\Illuminate\Contracts\Foundation\Application" namespace="\Illuminate\Contracts\Foundation" name="Application"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Bootstrap\void" namespace="Illuminate\Foundation\Bootstrap" name="void"/>
      </return>
    </docblock>
    <parameter name="app" byreference="false" type="object">
      <type full="Illuminate\Contracts\Foundation\Application" namespace="Illuminate\Contracts\Foundation" name="Application"/>
    </parameter>
  </method>
  <method name="handleError" start="56" end="61" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Convert a PHP error to an ErrorException."/>
      <param type="int" variable="$level"/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$file"/>
      <param type="int" variable="$line"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Illuminate\Foundation\Bootstrap\void" namespace="Illuminate\Foundation\Bootstrap" name="void"/>
      </return>
      <throws type="object">
        <type full="\ErrorException" namespace="" name="ErrorException"/>
      </throws>
    </docblock>
    <parameter name="level" byreference="false" type="{unknown}"/>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="file" byreference="false" type="string" default="''"/>
    <parameter name="line" byreference="false" type="integer" default="0"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
  <method name="handleException" start="73" end="86" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Handle an uncaught exception from the application.">Note: Most exceptions can be handled via the try / catch block in
the HTTP and Console kernels. But, fatal error exceptions must
be handled differently since they are not normal exceptions.</description>
      <param type="object" variable="$e">
        <type full="\Throwable" namespace="" name="Throwable"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Bootstrap\void" namespace="Illuminate\Foundation\Bootstrap" name="void"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="{unknown}"/>
  </method>
  <method name="renderForConsole" start="94" end="97" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Render an exception to the console."/>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Bootstrap\void" namespace="Illuminate\Foundation\Bootstrap" name="void"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="{unknown}"/>
  </method>
  <method name="renderHttpResponse" start="105" end="108" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Render an exception as an HTTP response and send it."/>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Bootstrap\void" namespace="Illuminate\Foundation\Bootstrap" name="void"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="{unknown}"/>
  </method>
  <method name="handleShutdown" start="115" end="120" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Handle the PHP shutdown event."/>
      <return type="object">
        <type full="Illuminate\Foundation\Bootstrap\void" namespace="Illuminate\Foundation\Bootstrap" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="fatalExceptionFromError" start="129" end="134" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Create a new fatal exception instance from an error array."/>
      <param type="array" variable="$error"/>
      <param type="object" variable="$traceOffset">
        <type full="Illuminate\Foundation\Bootstrap\int|null" namespace="Illuminate\Foundation\Bootstrap" name="int|null"/>
      </param>
      <return type="object">
        <type full="\Symfony\Component\Debug\Exception\FatalErrorException" namespace="\Symfony\Component\Debug\Exception" name="FatalErrorException"/>
      </return>
    </docblock>
    <parameter name="error" byreference="false" type="array"/>
    <parameter name="traceOffset" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="isFatal" start="142" end="145" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the error type is fatal."/>
      <param type="int" variable="$type"/>
      <return type="object">
        <type full="Illuminate\Foundation\Bootstrap\bool" namespace="Illuminate\Foundation\Bootstrap" name="bool"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="getExceptionHandler" start="152" end="155" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get an instance of the exception handler."/>
      <return type="object">
        <type full="\Illuminate\Contracts\Debug\ExceptionHandler" namespace="\Illuminate\Contracts\Debug" name="ExceptionHandler"/>
      </return>
    </docblock>
  </method>
</class>
