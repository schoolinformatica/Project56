<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\DomCrawler\Tests\FormTest" namespace="Symfony\Component\DomCrawler\Tests" name="FormTest" abstract="false" final="false" start="18" end="973">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/dom-crawler/Tests" file="FormTest.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/dom-crawler/Tests/FormTest.php" size="43548" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="81157a2db5cd0bb7243287193f5aadc677d38989" relative="vendor/symfony/dom-crawler/Tests/FormTest.php"/>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <method name="setUpBeforeClass" start="20" end="24" abstract="false" final="false" static="true" visibility="public">
    <inline>
      <comment value="Ensure that the private helper class FormFieldRegistry is loaded" line="22"/>
    </inline>
  </method>
  <method name="testConstructorThrowsExceptionIfTheNodeHasNoFormAncestor" start="26" end="63" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testConstructorThrowsExceptionIfNoRelatedForm" start="70" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="__construct() should throw \\LogicException if the form attribute is invalid."/>
      <expectedexception value="\LogicException"/>
    </docblock>
  </method>
  <method name="testConstructorLoadsOnlyFieldsOfTheRightForm" start="89" end="101" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testConstructorHandlesFormAttribute" start="103" end="119" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="Tests if submit buttons are correctly assigned to forms" line="110"/>
    </inline>
  </method>
  <method name="testConstructorHandlesFormValues" start="121" end="147" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="Tests if form values are correctly assigned to forms" line="131"/>
    </inline>
  </method>
  <method name="testMultiValuedFields" start="149" end="182" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testConstructor" start="187" end="201" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <dataprovider value="provideInitializeValues"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="form" byreference="false" type="{unknown}"/>
    <parameter name="values" byreference="false" type="{unknown}"/>
  </method>
  <method name="provideInitializeValues" start="203" end="283" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetFormNode" start="285" end="293" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetFormNodeFromNamedForm" start="295" end="303" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetMethod" start="305" end="321" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetSetValue" start="323" end="346" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetValueOnMultiValuedFieldsWithMalformedName" start="348" end="358" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testDisableValidation" start="360" end="378" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOffsetUnset" start="380" end="385" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testOffsetExists" start="387" end="393" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetValues" start="395" end="408" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSetValues" start="410" end="415" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMultiselectSetValues" start="417" end="422" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetPhpValues" start="424" end="437" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetFiles" start="439" end="458" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetPhpFiles" start="460" end="470" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetUri" start="475" end="481" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <dataprovider value="provideGetUriValues"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="form" byreference="false" type="{unknown}"/>
    <parameter name="values" byreference="false" type="{unknown}"/>
    <parameter name="uri" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="testGetBaseUri" start="483" end="491" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetUriWithAnchor" start="493" end="498" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetUriActionAbsolute" start="500" end="519" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="The action URI haven't the same domain Host have an another domain as Host" line="513"/>
    </inline>
  </method>
  <method name="testGetUriAbsolute" start="521" end="528" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetUriWithOnlyQueryString" start="530" end="534" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetUriWithoutAction" start="536" end="540" abstract="false" final="false" static="false" visibility="public"/>
  <method name="provideGetUriValues" start="542" end="621" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testHas" start="623" end="629" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testRemove" start="631" end="636" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGet" start="638" end="650" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testAll" start="652" end="659" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSubmitWithoutAFormButton" start="661" end="675" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testTypeAttributeIsCaseInsensitive" start="677" end="682" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testFormFieldRegistryAddThrowAnExceptionWhenTheNameIsMalformed" start="687" end="691" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFormFieldRegistryRemoveThrowAnExceptionWhenTheNameIsMalformed" start="696" end="700" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFormFieldRegistryGetThrowAnExceptionWhenTheNameIsMalformed" start="705" end="709" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFormFieldRegistryGetThrowAnExceptionWhenTheFieldDoesNotExist" start="714" end="718" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFormFieldRegistrySetThrowAnExceptionWhenTheNameIsMalformed" start="723" end="727" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFormFieldRegistrySetThrowAnExceptionWhenTheFieldDoesNotExist" start="732" end="736" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
    </docblock>
  </method>
  <method name="testFormFieldRegistryHasReturnsTrueWhenTheFQNExists" start="738" end="747" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testFormRegistryFieldsCanBeRemoved" start="749" end="755" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testFormRegistrySupportsMultivaluedFields" start="757" end="770" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testFormRegistrySetValues" start="772" end="808" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testFormRegistrySetValueOnCompoundField" start="814" end="820" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
      <expectedexceptionmessage value="Cannot set value on a compound field &quot;foo[bar]&quot;."/>
    </docblock>
  </method>
  <method name="testFormRegistrySetArrayOnNotCompoundField" start="826" end="832" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
      <expectedexceptionmessage value="Unreachable field &quot;0&quot;"/>
    </docblock>
  </method>
  <method name="testDifferentFieldTypesWithSameName" start="834" end="854" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getFormFieldMock" start="856" end="878" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="createForm" start="880" end="893" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="form" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="currentUri" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="createTestHtml5Form" start="895" end="930" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="createTestMultipleForm" start="932" end="956" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="testgetPhpValuesWithEmptyTextarea" start="958" end="972" abstract="false" final="false" static="false" visibility="public"/>
</class>
