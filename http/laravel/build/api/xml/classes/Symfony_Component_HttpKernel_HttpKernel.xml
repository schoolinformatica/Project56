<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpKernel\HttpKernel" namespace="Symfony\Component\HttpKernel" name="HttpKernel" abstract="false" final="false" start="34" end="285">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-kernel" file="HttpKernel.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-kernel/HttpKernel.php" size="9731" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="fe95e9f92fa627352f1d232a200ff43e4fcdd330" relative="vendor/symfony/http-kernel/HttpKernel.php"/>
  <docblock>
    <description compact="HttpKernel notifies events to convert a Request object to a Response one."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <implements full="Symfony\Component\HttpKernel\HttpKernelInterface" namespace="Symfony\Component\HttpKernel" name="HttpKernelInterface"/>
  <implements full="Symfony\Component\HttpKernel\TerminableInterface" namespace="Symfony\Component\HttpKernel" name="TerminableInterface"/>
  <member name="dispatcher" visibility="protected" line="36"/>
  <member name="resolver" visibility="protected" line="37"/>
  <member name="requestStack" visibility="protected" line="38"/>
  <constructor name="__construct" start="47" end="52" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="An EventDispatcherInterface instance" type="object" variable="$dispatcher">
        <type full="Symfony\Component\EventDispatcher\EventDispatcherInterface" namespace="Symfony\Component\EventDispatcher" name="EventDispatcherInterface"/>
      </param>
      <param description="A ControllerResolverInterface instance" type="object" variable="$resolver">
        <type full="Symfony\Component\HttpKernel\Controller\ControllerResolverInterface" namespace="Symfony\Component\HttpKernel\Controller" name="ControllerResolverInterface"/>
      </param>
      <param description="A stack for master/sub requests" type="object" variable="$requestStack">
        <type full="Symfony\Component\HttpFoundation\RequestStack" namespace="Symfony\Component\HttpFoundation" name="RequestStack"/>
      </param>
    </docblock>
    <parameter name="dispatcher" byreference="false" type="object">
      <type full="Symfony\Component\EventDispatcher\EventDispatcherInterface" namespace="Symfony\Component\EventDispatcher" name="EventDispatcherInterface"/>
    </parameter>
    <parameter name="resolver" byreference="false" type="object">
      <type full="Symfony\Component\HttpKernel\Controller\ControllerResolverInterface" namespace="Symfony\Component\HttpKernel\Controller" name="ControllerResolverInterface"/>
    </parameter>
    <parameter name="requestStack" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Symfony\Component\HttpFoundation\RequestStack" namespace="Symfony\Component\HttpFoundation" name="RequestStack"/>
    </parameter>
  </constructor>
  <method name="handle" start="57" end="72" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="type" byreference="false" type="{unknown}" default="" constant="HttpKernelInterface::MASTER_REQUEST"/>
    <parameter name="catch" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="terminate" start="77" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="response" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </parameter>
  </method>
  <method name="terminateWithException" start="87" end="99" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <throws description="If the request stack is empty" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
      <internal/>
    </docblock>
    <parameter name="exception" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="handleRaw" start="114" end="162" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Handles a request to convert it to a response.">Exceptions are not caught.</description>
      <param description="A Request instance" type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
      <param description="The type of the request (one of HttpKernelInterface::MASTER_REQUEST or HttpKernelInterface::SUB_REQUEST)" type="int" variable="$type"/>
      <return description="A Response instance" type="object">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </return>
      <throws description="If one of the listener does not behave as expected" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
      <throws description="When controller cannot be found" type="object">
        <type full="Symfony\Component\HttpKernel\Exception\NotFoundHttpException" namespace="Symfony\Component\HttpKernel\Exception" name="NotFoundHttpException"/>
      </throws>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="type" byreference="false" type="{unknown}" default="" constant="self::MASTER_REQUEST"/>
    <inline>
      <comment value="request" line="118"/>
      <comment value="load controller" line="126"/>
      <comment value="controller arguments" line="135"/>
      <comment value="call controller" line="138"/>
      <comment value="view" line="141"/>
    </inline>
  </method>
  <method name="filterResponse" start="175" end="184" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Filters a response object."/>
      <param description="A Response instance" type="object" variable="$response">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </param>
      <param description="An error message in case the response is not a Response object" type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
      <param description="The type of the request (one of HttpKernelInterface::MASTER_REQUEST or HttpKernelInterface::SUB_REQUEST)" type="int" variable="$type"/>
      <return description="The filtered Response instance" type="object">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </return>
      <throws description="if the passed object is not a Response instance" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="response" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </parameter>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="finishRequest" start="196" end="200" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Publishes the finish request event, then pop the request from the stack.">Note that the order of the operations is important here, otherwise
operations such as <link xmlns="http://xml.phpdox.net/src" value="RequestStack::getParentRequest()"/> can lead to
weird results.
</description>
      <param type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
      <param type="int" variable="$type"/>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="handleException" start="213" end="250" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Handles an exception by trying to convert it to a Response."/>
      <param description="An \Exception instance" type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <param description="A Request instance" type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
      <param description="The type of the request" type="int" variable="$type"/>
      <return description="A Response instance" type="object">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </return>
      <throws type="object">
        <type full="\Exception" namespace="" name="Exception"/>
      </throws>
    </docblock>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="a listener might have replaced the exception" line="218"/>
      <comment value="the developer asked for a specific status code" line="229"/>
    </inline>
  </method>
  <method name="varToString" start="252" end="284" abstract="false" final="false" static="false" visibility="private">
    <parameter name="var" byreference="false" type="{unknown}"/>
  </method>
</class>
