<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Console\Helper\ProcessHelper" namespace="Symfony\Component\Console\Helper" name="ProcessHelper" abstract="false" final="false" start="25" end="151">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/console/Helper" file="ProcessHelper.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/console/Helper/ProcessHelper.php" size="5120" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="b3585a3ad9302d645efa4ec9f9608f7f5c56f672" relative="vendor/symfony/console/Helper/ProcessHelper.php"/>
  <docblock>
    <description compact="The ProcessHelper class provides helpers to run external processes."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <extends full="Symfony\Component\Console\Helper\Helper" namespace="Symfony\Component\Console\Helper" name="Helper"/>
  <method name="run" start="39" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs an external process."/>
      <param description="An OutputInterface instance" type="object" variable="$output">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
      <param description="An instance of Process or an array of arguments to escape and run or a command to run" type="object" variable="$cmd">
        <type full="Symfony\Component\Console\Helper\string|array|Process" namespace="Symfony\Component\Console\Helper" name="string|array|Process"/>
      </param>
      <param description="An error message that must be displayed if something went wrong" type="object" variable="$error">
        <type full="Symfony\Component\Console\Helper\string|null" namespace="Symfony\Component\Console\Helper" name="string|null"/>
      </param>
      <param description="A PHP callback to run whenever there is some" type="object" variable="$callback">output available on STDOUT or STDERR<type full="Symfony\Component\Console\Helper\callable|null" namespace="Symfony\Component\Console\Helper" name="callable|null"/></param>
      <param description="The threshold for verbosity" type="int" variable="$verbosity"/>
      <return description="The process that ran" type="object">
        <type full="Symfony\Component\Process\Process" namespace="Symfony\Component\Process" name="Process"/>
      </return>
    </docblock>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <parameter name="cmd" byreference="false" type="{unknown}"/>
    <parameter name="error" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="callback" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="OutputInterface::VERBOSITY_VERY_VERBOSE"/>
  </method>
  <method name="mustRun" start="95" end="104" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs the process.">This is identical to run() except that an exception is thrown if the process
exits with a non-zero exit code.</description>
      <param description="An OutputInterface instance" type="object" variable="$output">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
      <param description="An instance of Process or a command to run" type="object" variable="$cmd">
        <type full="Symfony\Component\Console\Helper\string|Process" namespace="Symfony\Component\Console\Helper" name="string|Process"/>
      </param>
      <param description="An error message that must be displayed if something went wrong" type="object" variable="$error">
        <type full="Symfony\Component\Console\Helper\string|null" namespace="Symfony\Component\Console\Helper" name="string|null"/>
      </param>
      <param description="A PHP callback to run whenever there is some" type="object" variable="$callback">output available on STDOUT or STDERR<type full="Symfony\Component\Console\Helper\callable|null" namespace="Symfony\Component\Console\Helper" name="callable|null"/></param>
      <return description="The process that ran" type="object">
        <type full="Symfony\Component\Process\Process" namespace="Symfony\Component\Process" name="Process"/>
      </return>
      <throws type="object">
        <type full="Symfony\Component\Process\Exception\ProcessFailedException" namespace="Symfony\Component\Process\Exception" name="ProcessFailedException"/>
      </throws>
      <see value="run()"/>
    </docblock>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <parameter name="cmd" byreference="false" type="{unknown}"/>
    <parameter name="error" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="callback" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="wrapCallback" start="115" end="132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Wraps a Process callback to add debugging output."/>
      <param description="An OutputInterface interface" type="object" variable="$output">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
      <param description="The Process" type="object" variable="$process">
        <type full="Symfony\Component\Process\Process" namespace="Symfony\Component\Process" name="Process"/>
      </param>
      <param description="A PHP callable" type="object" variable="$callback">
        <type full="Symfony\Component\Console\Helper\callable|null" namespace="Symfony\Component\Console\Helper" name="callable|null"/>
      </param>
      <return type="object">
        <type full="Symfony\Component\Console\Helper\callable" namespace="Symfony\Component\Console\Helper" name="callable"/>
      </return>
    </docblock>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <parameter name="process" byreference="false" type="object">
      <type full="Symfony\Component\Process\Process" namespace="Symfony\Component\Process" name="Process"/>
    </parameter>
    <parameter name="callback" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="escapeString" start="139" end="142" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This method is public for PHP 5.3 compatibility, it should be private."/>
      <internal/>
    </docblock>
    <parameter name="str" byreference="false" type="{unknown}"/>
  </method>
  <method name="getName" start="147" end="150" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
</class>
