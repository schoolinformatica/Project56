<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHP_CodeCoverage_Report_Node_Iterator" namespace="" name="PHP_CodeCoverage_Report_Node_Iterator" abstract="false" final="false" start="16" end="105">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/php-code-coverage/src/CodeCoverage/Report/Node" file="Iterator.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/php-code-coverage/src/CodeCoverage/Report/Node/Iterator.php" size="2178" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="53efd8818713bc4bf6550bbe3d0afac1713aad2c" relative="vendor/phpunit/php-code-coverage/src/CodeCoverage/Report/Node/Iterator.php"/>
  <docblock>
    <description compact="Recursive iterator for PHP_CodeCoverage_Report_Node object graphs."/>
    <since value="Class available since Release 1.1.0"/>
  </docblock>
  <implements full="RecursiveIterator" namespace="" name="RecursiveIterator"/>
  <member name="position" visibility="protected" line="21">
    <docblock>
      <description/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="nodes" visibility="protected" line="26">
    <docblock>
      <description/>
      <var type="array" of="object">
        <type full="PHP_CodeCoverage_Report_Node" namespace="" name="PHP_CodeCoverage_Report_Node"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="33" end="36" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param type="object" variable="$node">
        <type full="PHP_CodeCoverage_Report_Node_Directory" namespace="" name="PHP_CodeCoverage_Report_Node_Directory"/>
      </param>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="PHP_CodeCoverage_Report_Node_Directory" namespace="" name="PHP_CodeCoverage_Report_Node_Directory"/>
    </parameter>
  </constructor>
  <method name="rewind" start="41" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Rewinds the Iterator to the first element."/>
    </docblock>
  </method>
  <method name="valid" start="51" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if there is a current element after calls to rewind() or next()."/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="key" start="61" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the key of the current element."/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="current" start="71" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the current element."/>
      <return type="object">
        <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
      </return>
    </docblock>
  </method>
  <method name="next" start="79" end="82" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Moves forward to next element."/>
    </docblock>
  </method>
  <method name="getChildren" start="89" end="94" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the sub iterator for the current element."/>
      <return type="object">
        <type full="PHP_CodeCoverage_Report_Node_Iterator" namespace="" name="PHP_CodeCoverage_Report_Node_Iterator"/>
      </return>
    </docblock>
  </method>
  <method name="hasChildren" start="101" end="104" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks whether the current element has children."/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
  </method>
</class>
