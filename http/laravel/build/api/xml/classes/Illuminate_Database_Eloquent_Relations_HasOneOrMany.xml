<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Database\Eloquent\Relations\HasOneOrMany" namespace="Illuminate\Database\Eloquent\Relations" name="HasOneOrMany" abstract="true" final="false" start="10" end="403">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations" file="HasOneOrMany.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php" size="11162" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="945f33efae15cb8915d3ff3e6e87b8bc639e77d1" relative="vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php"/>
  <extends full="Illuminate\Database\Eloquent\Relations\Relation" namespace="Illuminate\Database\Eloquent\Relations" name="Relation"/>
  <member name="foreignKey" visibility="protected" line="17">
    <docblock>
      <description compact="The foreign key of the parent model."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="localKey" visibility="protected" line="24">
    <docblock>
      <description compact="The local key of the parent model."/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="35" end="41" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new has one or many relationship instance."/>
      <param type="object" variable="$query">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <param type="object" variable="$parent">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </param>
      <param type="string" variable="$foreignKey"/>
      <param type="string" variable="$localKey"/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
    <parameter name="query" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
    <parameter name="parent" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Model" namespace="Illuminate\Database\Eloquent" name="Model"/>
    </parameter>
    <parameter name="foreignKey" byreference="false" type="{unknown}"/>
    <parameter name="localKey" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="addConstraints" start="48" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the base constraints on the relation query."/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="getRelationCountQuery" start="64" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add the constraints for a relationship count query."/>
      <param type="object" variable="$query">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <param type="object" variable="$parent">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </return>
    </docblock>
    <parameter name="query" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
    <parameter name="parent" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
  </method>
  <method name="getRelationCountQueryForSelfRelation" start="80" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add the constraints for a relationship count query on the same table."/>
      <param type="object" variable="$query">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <param type="object" variable="$parent">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </return>
    </docblock>
    <parameter name="query" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
    <parameter name="parent" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
  </method>
  <method name="getRelationCountHash" start="96" end="99" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a relationship join table hash."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="addEagerConstraints" start="107" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the constraints for an eager load of the relation."/>
      <param type="array" variable="$models"/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
    <parameter name="models" byreference="false" type="array"/>
  </method>
  <method name="matchOne" start="120" end="123" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Match the eagerly loaded results to their single parents."/>
      <param type="array" variable="$models"/>
      <param type="object" variable="$results">
        <type full="\Illuminate\Database\Eloquent\Collection" namespace="\Illuminate\Database\Eloquent" name="Collection"/>
      </param>
      <param type="string" variable="$relation"/>
      <return type="array"/>
    </docblock>
    <parameter name="models" byreference="false" type="array"/>
    <parameter name="results" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Collection" namespace="Illuminate\Database\Eloquent" name="Collection"/>
    </parameter>
    <parameter name="relation" byreference="false" type="{unknown}"/>
  </method>
  <method name="matchMany" start="133" end="136" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Match the eagerly loaded results to their many parents."/>
      <param type="array" variable="$models"/>
      <param type="object" variable="$results">
        <type full="\Illuminate\Database\Eloquent\Collection" namespace="\Illuminate\Database\Eloquent" name="Collection"/>
      </param>
      <param type="string" variable="$relation"/>
      <return type="array"/>
    </docblock>
    <parameter name="models" byreference="false" type="array"/>
    <parameter name="results" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Collection" namespace="Illuminate\Database\Eloquent" name="Collection"/>
    </parameter>
    <parameter name="relation" byreference="false" type="{unknown}"/>
  </method>
  <method name="matchOneOrMany" start="147" end="165" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Match the eagerly loaded results to their many parents."/>
      <param type="array" variable="$models"/>
      <param type="object" variable="$results">
        <type full="\Illuminate\Database\Eloquent\Collection" namespace="\Illuminate\Database\Eloquent" name="Collection"/>
      </param>
      <param type="string" variable="$relation"/>
      <param type="string" variable="$type"/>
      <return type="array"/>
    </docblock>
    <parameter name="models" byreference="false" type="array"/>
    <parameter name="results" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Collection" namespace="Illuminate\Database\Eloquent" name="Collection"/>
    </parameter>
    <parameter name="relation" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Once we have the dictionary we can simply spin through the parent models to" line="151"/>
      <comment value="link them up with their children using the keyed dictionary to make the" line="152"/>
      <comment value="matching very convenient and easy work. Then we'll just return them." line="153"/>
    </inline>
  </method>
  <method name="getRelationValue" start="175" end="180" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the value of a relationship by one or many type."/>
      <param type="array" variable="$dictionary"/>
      <param type="string" variable="$key"/>
      <param type="string" variable="$type"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="dictionary" byreference="false" type="array"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="buildDictionary" start="188" end="202" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Build model dictionary keyed by the relation's foreign key."/>
      <param type="object" variable="$results">
        <type full="\Illuminate\Database\Eloquent\Collection" namespace="\Illuminate\Database\Eloquent" name="Collection"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="results" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Collection" namespace="Illuminate\Database\Eloquent" name="Collection"/>
    </parameter>
    <inline>
      <comment value="First we will create a dictionary of models keyed by the foreign key of the" line="194"/>
      <comment value="relationship as this will allow us to quickly access all of the related" line="195"/>
      <comment value="models without having to do nested looping which will be quite slow." line="196"/>
    </inline>
  </method>
  <method name="save" start="210" end="215" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Attach a model instance to the parent model."/>
      <param type="object" variable="$model">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="model" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Model" namespace="Illuminate\Database\Eloquent" name="Model"/>
    </parameter>
  </method>
  <method name="saveMany" start="223" end="230" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Attach a collection of models to the parent instance."/>
      <param type="object" variable="$models">
        <type full="\Illuminate\Database\Eloquent\Collection|array" namespace="\Illuminate\Database\Eloquent" name="Collection|array"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Collection|array" namespace="\Illuminate\Database\Eloquent" name="Collection|array"/>
      </return>
    </docblock>
    <parameter name="models" byreference="false" type="{unknown}"/>
  </method>
  <method name="findOrNew" start="239" end="248" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Find a model by its primary key or return new instance of the related model."/>
      <param type="mixed" variable="$id"/>
      <param type="array" variable="$columns"/>
      <return type="object">
        <type full="\Illuminate\Support\Collection|\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Support\Collection|\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="columns" byreference="false" type="array" default=""/>
  </method>
  <method name="firstOrNew" start="256" end="265" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the first related model record matching the attributes or instantiate it."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="firstOrCreate" start="273" end="280" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the first related record matching the attributes or create it."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="updateOrCreate" start="289" end="298" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create or update a related record matching the attributes, and fill it with values."/>
      <param type="array" variable="$attributes"/>
      <param type="array" variable="$values"/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
    <parameter name="values" byreference="false" type="array" default=""/>
  </method>
  <method name="create" start="306" end="318" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new instance of the related model."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
    <inline>
      <comment value="Here we will set the raw attributes to avoid hitting the &quot;fill&quot; method so" line="308"/>
      <comment value="that we do not have to worry about a mass accessor rules blocking sets" line="309"/>
      <comment value="on the models. Otherwise, some of these attributes will not get set." line="310"/>
    </inline>
  </method>
  <method name="createMany" start="326" end="335" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create an array of new instances of the related model."/>
      <param type="array" variable="$records"/>
      <return type="array"/>
    </docblock>
    <parameter name="records" byreference="false" type="array"/>
  </method>
  <method name="update" start="343" end="350" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Perform an update on all the related models."/>
      <param type="array" variable="$attributes"/>
      <return type="int"/>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="getHasCompareKey" start="357" end="360" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the key for comparing against the parent key in &quot;has&quot; query."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getForeignKey" start="367" end="370" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the foreign key for the relationship."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getPlainForeignKey" start="377" end="382" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the plain foreign key."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getParentKey" start="389" end="392" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the key value of the parent's local key."/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="getQualifiedParentKeyName" start="399" end="402" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the fully qualified parent key name."/>
      <return type="string"/>
    </docblock>
  </method>
</class>
