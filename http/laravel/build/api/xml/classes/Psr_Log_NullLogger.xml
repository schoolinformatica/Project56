<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Psr\Log\NullLogger" namespace="Psr\Log" name="NullLogger" abstract="false" final="false" start="13" end="27">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/psr/log/Psr/Log" file="NullLogger.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/psr/log/Psr/Log/NullLogger.php" size="641" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="b6e7c878832614c574e641cbadf1b053e11042ba" relative="vendor/psr/log/Psr/Log/NullLogger.php"/>
  <docblock>
    <description compact="This Logger can be used to avoid conditional log calls">Logging should always be optional, and if no logger is provided to your
library creating a NullLogger instance to have something to throw logs at
is a good way to avoid littering your code with `if ($this-&gt;logger) { }`
blocks.</description>
  </docblock>
  <extends full="Psr\Log\AbstractLogger" namespace="Psr\Log" name="AbstractLogger"/>
  <method name="log" start="23" end="26" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Logs with an arbitrary level."/>
      <param type="mixed" variable="$level"/>
      <param type="string" variable="$message"/>
      <param type="array" variable="$context"/>
      <return type="object">
        <type full="Psr\Log\null" namespace="Psr\Log" name="null"/>
      </return>
    </docblock>
    <parameter name="level" byreference="false" type="{unknown}"/>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="array" default=""/>
  </method>
</class>
