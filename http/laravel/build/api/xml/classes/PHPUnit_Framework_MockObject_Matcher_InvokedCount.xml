<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Framework_MockObject_Matcher_InvokedCount" namespace="" name="PHPUnit_Framework_MockObject_Matcher_InvokedCount" abstract="false" final="false" start="21" end="109">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher" file="InvokedCount.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/InvokedCount.php" size="2976" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="fda5763851e98abcef8ec026e9f8263c21c70f20" relative="vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/InvokedCount.php"/>
  <docblock>
    <description compact="Invocation matcher which checks if a method has been invoked a certain amount of times.">If the number of invocations exceeds the value it will immediately throw an
exception,
If the number is less it will later be checked in verify() and also throw an
exception.</description>
    <since value="Class available since Release 1.0.0"/>
  </docblock>
  <extends full="PHPUnit_Framework_MockObject_Matcher_InvokedRecorder" namespace="" name="PHPUnit_Framework_MockObject_Matcher_InvokedRecorder"/>
  <member name="expectedCount" visibility="protected" line="26">
    <docblock>
      <description/>
      <var type="int"/>
    </docblock>
  </member>
  <constructor name="__construct" start="31" end="34" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="int" variable="$expectedCount"/>
    </docblock>
    <parameter name="expectedCount" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="isNever" start="39" end="42" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="toString" start="47" end="50" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="invoked" start="56" end="86" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$invocation">
        <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
      </param>
      <throws type="object">
        <type full="PHPUnit_Framework_ExpectationFailedException" namespace="" name="PHPUnit_Framework_ExpectationFailedException"/>
      </throws>
    </docblock>
    <parameter name="invocation" byreference="false" type="object">
      <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
    </parameter>
  </method>
  <method name="verify" start="94" end="108" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Verifies that the current expectation is valid. If everything is OK the code should just return, if not it must throw an exception."/>
      <throws type="object">
        <type full="PHPUnit_Framework_ExpectationFailedException" namespace="" name="PHPUnit_Framework_ExpectationFailedException"/>
      </throws>
    </docblock>
  </method>
</class>
