<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpParser\PrettyPrinterAbstract" namespace="PhpParser" name="PrettyPrinterAbstract" abstract="true" final="false" start="8" end="282">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nikic/php-parser/lib/PhpParser" file="PrettyPrinterAbstract.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nikic/php-parser/lib/PhpParser/PrettyPrinterAbstract.php" size="10680" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="a7919eda8183aac618ddf8d6a14748801c284379" relative="vendor/nikic/php-parser/lib/PhpParser/PrettyPrinterAbstract.php"/>
  <member name="precedenceMap" type="array" default="" visibility="protected" line="10"/>
  <member name="noIndentToken" visibility="protected" line="77"/>
  <member name="canUseSemicolonNamespaces" visibility="protected" line="78"/>
  <member name="options" visibility="protected" line="79"/>
  <constructor name="__construct" start="89" end="94" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a pretty printer instance using the given options.">Supported options:
 * bool $shortArraySyntax = false: Whether to use [] instead of array()</description>
      <param description="Dictionary of formatting options" type="array" variable="$options"/>
    </docblock>
    <parameter name="options" byreference="false" type="array" default=""/>
  </constructor>
  <method name="prettyPrint" start="103" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pretty prints an array of statements."/>
      <param description="Array of statements" type="array" variable="$stmts" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Pretty printed statements" type="string"/>
    </docblock>
    <parameter name="stmts" byreference="false" type="array"/>
  </method>
  <method name="prettyPrintExpr" start="116" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pretty prints an expression."/>
      <param description="Expression node" type="object" variable="$node">
        <type full="PhpParser\Node\Expr" namespace="PhpParser\Node" name="Expr"/>
      </param>
      <return description="Pretty printed node" type="string"/>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node\Expr" namespace="PhpParser\Node" name="Expr"/>
    </parameter>
  </method>
  <method name="prettyPrintFile" start="127" end="138" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pretty prints a file of statements (includes the opening &lt;?php tag if it is required)."/>
      <param description="Array of statements" type="array" variable="$stmts" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Pretty printed statements" type="string"/>
    </docblock>
    <parameter name="stmts" byreference="false" type="array"/>
  </method>
  <method name="preprocessNodes" start="145" end="153" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Preprocesses the top-level nodes to initialize pretty printer state."/>
      <param description="Array of nodes" type="array" variable="$nodes" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
    <inline>
      <comment value="We can use semicolon-namespaces unless there is a global namespace declaration" line="146"/>
    </inline>
  </method>
  <method name="pStmts" start="163" end="177" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Pretty prints an array of nodes (statements) and indents them optionally."/>
      <param description="Array of nodes" type="array" variable="$nodes" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <param description="Whether to indent the printed nodes" type="object" variable="$indent">
        <type full="PhpParser\bool" namespace="PhpParser" name="bool"/>
      </param>
      <return description="Pretty printed statements" type="string"/>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
    <parameter name="indent" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="p" start="186" end="188" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Pretty prints a node."/>
      <param description="Node to be pretty printed" type="object" variable="$node">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Pretty printed node" type="string"/>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
  </method>
  <method name="pInfixOp" start="190" end="196" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="leftNode" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
    <parameter name="operatorString" byreference="false" type="{unknown}"/>
    <parameter name="rightNode" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
  </method>
  <method name="pPrefixOp" start="198" end="201" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="operatorString" byreference="false" type="{unknown}"/>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
  </method>
  <method name="pPostfixOp" start="203" end="206" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
    <parameter name="operatorString" byreference="false" type="{unknown}"/>
  </method>
  <method name="pPrec" start="220" end="232" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Prints an expression node with the least amount of parentheses necessary to preserve the meaning."/>
      <param description="Node to pretty print" type="object" variable="$node">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <param description="Precedence of the parent operator" type="int" variable="$parentPrecedence"/>
      <param description="Associativity of parent operator" type="int" variable="$parentAssociativity">(-1 is left, 0 is nonassoc, 1 is right)</param>
      <param description="Position of the node relative to the operator" type="int" variable="$childPosition">(-1 is left, 1 is right)</param>
      <return description="The pretty printed node" type="string"/>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
    </parameter>
    <parameter name="parentPrecedence" byreference="false" type="{unknown}"/>
    <parameter name="parentAssociativity" byreference="false" type="{unknown}"/>
    <parameter name="childPosition" byreference="false" type="{unknown}"/>
  </method>
  <method name="pImplode" start="242" end="249" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Pretty prints an array of nodes and implodes the printed values."/>
      <param description="Array of Nodes to be printed" type="array" variable="$nodes" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <param description="Character to implode with" type="string" variable="$glue"/>
      <return description="Imploded pretty printed nodes" type="string"/>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
    <parameter name="glue" byreference="false" type="string" default="''"/>
  </method>
  <method name="pCommaSeparated" start="258" end="260" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Pretty prints an array of nodes and implodes the printed values with commas."/>
      <param description="Array of Nodes to be printed" type="array" variable="$nodes" of="object">
        <type full="PhpParser\Node" namespace="PhpParser" name="Node"/>
      </param>
      <return description="Comma separated pretty printed nodes" type="string"/>
    </docblock>
    <parameter name="nodes" byreference="false" type="array"/>
  </method>
  <method name="pNoIndent" start="269" end="271" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Signals the pretty printer that a string shall not be indented."/>
      <param description="Not to be indented string" type="string" variable="$string"/>
      <return description="String marked with $this-&gt;noIndentToken's." type="mixed"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
  </method>
  <method name="pComments" start="273" end="281" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="comments" byreference="false" type="array"/>
  </method>
</class>
