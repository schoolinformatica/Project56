<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpFoundation\ResponseHeaderBag" namespace="Symfony\Component\HttpFoundation" name="ResponseHeaderBag" abstract="false" final="false" start="19" end="304">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation" file="ResponseHeaderBag.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation/ResponseHeaderBag.php" size="8766" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="785055999924c2182396429853c9be151130dd46" relative="vendor/symfony/http-foundation/ResponseHeaderBag.php"/>
  <docblock>
    <description compact="ResponseHeaderBag is a container for Response HTTP headers."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <extends full="Symfony\Component\HttpFoundation\HeaderBag" namespace="Symfony\Component\HttpFoundation" name="HeaderBag"/>
  <constant type="string" name="COOKIES_FLAT" value="'flat'"/>
  <constant type="string" name="COOKIES_ARRAY" value="'array'"/>
  <constant type="string" name="DISPOSITION_ATTACHMENT" value="'attachment'"/>
  <constant type="string" name="DISPOSITION_INLINE" value="'inline'"/>
  <member name="computedCacheControl" type="array" default="" visibility="protected" line="30">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="cookies" type="array" default="" visibility="protected" line="35">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="headerNames" type="array" default="" visibility="protected" line="40">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="47" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="An array of HTTP headers" type="array" variable="$headers"/>
    </docblock>
    <parameter name="headers" byreference="false" type="array" default=""/>
  </constructor>
  <method name="__toString" start="59" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="allPreserveCase" start="76" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the headers, with original capitalizations."/>
      <return description="An array of headers" type="array"/>
    </docblock>
  </method>
  <method name="replace" start="84" end="93" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="headers" byreference="false" type="array" default=""/>
  </method>
  <method name="set" start="98" end="112" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="values" byreference="false" type="{unknown}"/>
    <parameter name="replace" byreference="false" type="boolean" default="true"/>
    <inline>
      <comment value="ensure the cache-control header has sensible defaults" line="105"/>
    </inline>
  </method>
  <method name="remove" start="117" end="127" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasCacheControlDirective" start="132" end="135" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCacheControlDirective" start="140" end="143" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="setCookie" start="150" end="153" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a cookie."/>
      <param type="object" variable="$cookie">
        <type full="Symfony\Component\HttpFoundation\Cookie" namespace="Symfony\Component\HttpFoundation" name="Cookie"/>
      </param>
    </docblock>
    <parameter name="cookie" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Cookie" namespace="Symfony\Component\HttpFoundation" name="Cookie"/>
    </parameter>
  </method>
  <method name="removeCookie" start="162" end="177" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a cookie from the array, but does not unset it in the browser."/>
      <param type="string" variable="$name"/>
      <param type="string" variable="$path"/>
      <param type="string" variable="$domain"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="string" default="'/'"/>
    <parameter name="domain" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getCookies" start="188" end="208" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array with all cookies."/>
      <param type="string" variable="$format"/>
      <throws description="When the $format is invalid" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <return type="array"/>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="self::COOKIES_FLAT"/>
  </method>
  <method name="clearCookie" start="219" end="222" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clears a cookie in the browser."/>
      <param type="string" variable="$name"/>
      <param type="string" variable="$path"/>
      <param type="string" variable="$domain"/>
      <param type="object" variable="$secure">
        <type full="Symfony\Component\HttpFoundation\bool" namespace="Symfony\Component\HttpFoundation" name="bool"/>
      </param>
      <param type="object" variable="$httpOnly">
        <type full="Symfony\Component\HttpFoundation\bool" namespace="Symfony\Component\HttpFoundation" name="bool"/>
      </param>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="string" default="'/'"/>
    <parameter name="domain" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="secure" byreference="false" type="boolean" default="false"/>
    <parameter name="httpOnly" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="makeDisposition" start="239" end="271" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Generates a HTTP Content-Disposition field-value."/>
      <param description="One of &quot;inline&quot; or &quot;attachment&quot;" type="string" variable="$disposition"/>
      <param description="A unicode string" type="string" variable="$filename"/>
      <param description="A string containing only ASCII characters that" type="string" variable="$filenameFallback">is semantically equivalent to $filename. If the filename is already ASCII,
                                it can be omitted, or just copied from $filename</param>
      <return description="A string suitable for use as a Content-Disposition field-value." type="string"/>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <see value="RFC 6266"/>
    </docblock>
    <parameter name="disposition" byreference="false" type="{unknown}"/>
    <parameter name="filename" byreference="false" type="{unknown}"/>
    <parameter name="filenameFallback" byreference="false" type="string" default="''"/>
    <inline>
      <comment value="filenameFallback is not ASCII." line="249"/>
      <comment value="percent characters aren't safe in fallback." line="254"/>
      <comment value="path separators aren't allowed in either." line="259"/>
    </inline>
  </method>
  <method name="computeCacheControlValue" start="281" end="303" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns the calculated value of the cache-control header.">This considers several other headers and calculates or modifies the
cache-control header to a sensible, conservative value.</description>
      <return type="string"/>
    </docblock>
    <inline>
      <comment value="public if s-maxage is defined, private otherwise" line="297"/>
    </inline>
  </method>
</class>
