<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpFoundation\RequestStack" namespace="Symfony\Component\HttpFoundation" name="RequestStack" abstract="false" final="false" start="19" end="103">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation" file="RequestStack.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation/RequestStack.php" size="2358" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="c9221623d9269f650d251ea12657220653c3a975" relative="vendor/symfony/http-foundation/RequestStack.php"/>
  <docblock>
    <description compact="Request stack that controls the lifecycle of requests."/>
    <author value="Benjamin Eberlei &lt;kontakt@beberlei.de&gt;"/>
  </docblock>
  <member name="requests" type="array" default="" visibility="private" line="24">
    <docblock>
      <description/>
      <var type="array" of="object">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </var>
    </docblock>
  </member>
  <method name="push" start="32" end="35" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pushes a Request on the stack.">This method should generally not be called directly as the stack
management should be taken care of by the application itself.</description>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
  </method>
  <method name="pop" start="47" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pops the current request from the stack.">This operation lets the current request go out of scope.

This method should generally not be called directly as the stack
management should be taken care of by the application itself.</description>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\Request|null" namespace="Symfony\Component\HttpFoundation" name="Request|null"/>
      </return>
    </docblock>
  </method>
  <method name="getCurrentRequest" start="59" end="62" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\Request|null" namespace="Symfony\Component\HttpFoundation" name="Request|null"/>
      </return>
    </docblock>
  </method>
  <method name="getMasterRequest" start="73" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the master Request.">Be warned that making your code aware of the master request
might make it un-compatible with other features of your framework
like ESI support.</description>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\Request|null" namespace="Symfony\Component\HttpFoundation" name="Request|null"/>
      </return>
    </docblock>
  </method>
  <method name="getParentRequest" start="93" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the parent request of the current.">Be warned that making your code aware of the parent request
might make it un-compatible with other features of your framework
like ESI support.

If current Request is the master request, it returns null.</description>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\Request|null" namespace="Symfony\Component\HttpFoundation" name="Request|null"/>
      </return>
    </docblock>
  </method>
</class>
