<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpParser\Node\Scalar\LNumber" namespace="PhpParser\Node\Scalar" name="LNumber" abstract="false" final="false" start="7" end="61">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nikic/php-parser/lib/PhpParser/Node/Scalar" file="LNumber.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/LNumber.php" size="1463" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="ec8a0c13f845724085f0034fd626d85b7c77066a" relative="vendor/nikic/php-parser/lib/PhpParser/Node/Scalar/LNumber.php"/>
  <extends full="PhpParser\Node\Scalar" namespace="PhpParser\Node" name="Scalar"/>
  <member name="value" visibility="public" line="10">
    <docblock>
      <description compact="@var int Number value"/>
    </docblock>
  </member>
  <constructor name="__construct" start="18" end="21" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs an integer number scalar node."/>
      <param description="Value of the number" type="int" variable="$value"/>
      <param description="Additional attributes" type="array" variable="$attributes"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="attributes" byreference="false" type="array" default=""/>
  </constructor>
  <method name="getSubNodeNames" start="23" end="25" abstract="false" final="false" static="false" visibility="public"/>
  <method name="parse" start="36" end="60" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <internal/>
      <param description="A string number" type="string" variable="$str"/>
      <return description="The parsed number" type="int"/>
    </docblock>
    <parameter name="str" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="handle plain 0 specially" line="37"/>
      <comment value="if first char is 0 (and number isn't 0) it's a special syntax" line="42"/>
      <comment value="dec" line="58"/>
    </inline>
  </method>
</class>
