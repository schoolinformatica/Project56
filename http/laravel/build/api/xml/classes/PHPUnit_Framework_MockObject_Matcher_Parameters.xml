<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Framework_MockObject_Matcher_Parameters" namespace="" name="PHPUnit_Framework_MockObject_Matcher_Parameters" abstract="false" final="false" start="20" end="127">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher" file="Parameters.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/Parameters.php" size="4010" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="f780c80d35027c1974eb935a8ff4fc9a9e6382f8" relative="vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/Parameters.php"/>
  <docblock>
    <description compact="Invocation matcher which looks for specific parameters in the invocations.">Checks the parameters of all incoming invocations, the parameter list is
checked against the defined constraints in $parameters. If the constraint
is met it will return true in matches().</description>
    <since value="Class available since Release 1.0.0"/>
  </docblock>
  <extends full="PHPUnit_Framework_MockObject_Matcher_StatelessInvocation" namespace="" name="PHPUnit_Framework_MockObject_Matcher_StatelessInvocation"/>
  <member name="parameters" type="array" default="" visibility="protected" line="25">
    <docblock>
      <description/>
      <var type="array" of="object">
        <type full="PHPUnit_Framework_Constraint" namespace="" name="PHPUnit_Framework_Constraint"/>
      </var>
    </docblock>
  </member>
  <member name="invocation" visibility="protected" line="30">
    <docblock>
      <description/>
      <var type="object">
        <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="35" end="46" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="array" variable="$parameters"/>
    </docblock>
    <parameter name="parameters" byreference="false" type="array"/>
  </constructor>
  <method name="toString" start="51" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="matches" start="70" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$invocation">
        <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
      </param>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="invocation" byreference="false" type="object">
      <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
    </parameter>
  </method>
  <method name="verify" start="88" end="126" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if the invocation $invocation matches the current rules. If it does the matcher will get the invoked() method called which should check if an expectation is met."/>
      <param type="object" variable="$invocation">Object containing information on a mocked or stubbed method which
                                                                 was invoked.<type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/></param>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <throws type="object">
        <type full="PHPUnit_Framework_ExpectationFailedException" namespace="" name="PHPUnit_Framework_ExpectationFailedException"/>
      </throws>
    </docblock>
  </method>
</class>
