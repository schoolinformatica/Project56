<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Database\SqlServerConnection" namespace="Illuminate\Database" name="SqlServerConnection" abstract="false" final="false" start="13" end="95">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database" file="SqlServerConnection.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/SqlServerConnection.php" size="2539" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="d6402ca4fc7e94ce87276b3a29c0da0db0ba19a3" relative="vendor/laravel/framework/src/Illuminate/Database/SqlServerConnection.php"/>
  <extends full="Illuminate\Database\Connection" namespace="Illuminate\Database" name="Connection"/>
  <method name="transaction" start="23" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Execute a Closure within a transaction."/>
      <param type="object" variable="$callback">
        <type full="\Closure" namespace="" name="Closure"/>
      </param>
      <return type="mixed"/>
      <throws type="object">
        <type full="\Throwable" namespace="" name="Throwable"/>
      </throws>
    </docblock>
    <parameter name="callback" byreference="false" type="object">
      <type full="Closure" namespace="" name="Closure"/>
    </parameter>
    <inline>
      <comment value="We'll simply execute the given callback within a try / catch block" line="31"/>
      <comment value="and if we catch any exception we can rollback the transaction" line="32"/>
      <comment value="so that none of the changes are persisted to the database." line="33"/>
    </inline>
  </method>
  <method name="getDefaultQueryGrammar" start="61" end="64" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the default query grammar instance."/>
      <return type="object">
        <type full="\Illuminate\Database\Query\Grammars\SqlServerGrammar" namespace="\Illuminate\Database\Query\Grammars" name="SqlServerGrammar"/>
      </return>
    </docblock>
  </method>
  <method name="getDefaultSchemaGrammar" start="71" end="74" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the default schema grammar instance."/>
      <return type="object">
        <type full="\Illuminate\Database\Schema\Grammars\SqlServerGrammar" namespace="\Illuminate\Database\Schema\Grammars" name="SqlServerGrammar"/>
      </return>
    </docblock>
  </method>
  <method name="getDefaultPostProcessor" start="81" end="84" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the default post processor instance."/>
      <return type="object">
        <type full="\Illuminate\Database\Query\Processors\SqlServerProcessor" namespace="\Illuminate\Database\Query\Processors" name="SqlServerProcessor"/>
      </return>
    </docblock>
  </method>
  <method name="getDoctrineDriver" start="91" end="94" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the Doctrine DBAL driver."/>
      <return type="object">
        <type full="\Doctrine\DBAL\Driver\PDOSqlsrv\Driver" namespace="\Doctrine\DBAL\Driver\PDOSqlsrv" name="Driver"/>
      </return>
    </docblock>
  </method>
</class>
