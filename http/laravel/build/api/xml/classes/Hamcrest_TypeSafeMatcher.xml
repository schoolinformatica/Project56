<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Hamcrest\TypeSafeMatcher" namespace="Hamcrest" name="TypeSafeMatcher" abstract="true" final="false" start="13" end="107">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest" file="TypeSafeMatcher.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/TypeSafeMatcher.php" size="2918" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="2c015235bcff5f3ae371f478a81eb054b8044ce7" relative="vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/TypeSafeMatcher.php"/>
  <docblock>
    <description compact="Convenient base class for Matchers that require a value of a specific type.">This simply checks the type.

While it may seem a useless exercise to have this in PHP, objects cannot
be cast to certain data types such as numerics (or even strings if
__toString() has not be defined).</description>
  </docblock>
  <extends full="Hamcrest\BaseMatcher" namespace="Hamcrest" name="BaseMatcher"/>
  <constant type="integer" name="TYPE_ANY" value="0"/>
  <constant type="integer" name="TYPE_STRING" value="1"/>
  <constant type="integer" name="TYPE_NUMERIC" value="2"/>
  <constant type="integer" name="TYPE_ARRAY" value="3"/>
  <constant type="integer" name="TYPE_OBJECT" value="4"/>
  <constant type="integer" name="TYPE_RESOURCE" value="5"/>
  <constant type="integer" name="TYPE_BOOLEAN" value="6"/>
  <member name="_expectedType" visibility="private" line="30">
    <docblock>
      <description compact="The type that is required for a safe comparison"/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="_expectedSubtype" visibility="private" line="37">
    <docblock>
      <description compact="The subtype (e.g. class for objects) that is required"/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="39" end="43" abstract="false" final="false" static="false" visibility="public">
    <parameter name="expectedType" byreference="false" type="{unknown}"/>
    <parameter name="expectedSubtype" byreference="false" type="{unknown}" default="" constant="null"/>
  </constructor>
  <method name="matches" start="45" end="48" abstract="false" final="true" static="false" visibility="public">
    <parameter name="item" byreference="false" type="{unknown}"/>
  </method>
  <method name="describeMismatch" start="50" end="57" abstract="false" final="true" static="false" visibility="public">
    <parameter name="item" byreference="false" type="{unknown}"/>
    <parameter name="mismatchDescription" byreference="false" type="object">
      <type full="Hamcrest\Description" namespace="Hamcrest" name="Description"/>
    </parameter>
  </method>
  <method name="matchesSafely" start="64" end="64" abstract="true" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="The item will already have been checked for the specific type and subtype."/>
    </docblock>
    <parameter name="item" byreference="false" type="{unknown}"/>
  </method>
  <method name="describeMismatchSafely" start="69" end="69" abstract="true" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="The item will already have been checked for the specific type and subtype."/>
    </docblock>
    <parameter name="item" byreference="false" type="{unknown}"/>
    <parameter name="mismatchDescription" byreference="false" type="object">
      <type full="Hamcrest\Description" namespace="Hamcrest" name="Description"/>
    </parameter>
  </method>
  <method name="_isSafeType" start="73" end="106" abstract="false" final="false" static="false" visibility="private">
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
</class>
