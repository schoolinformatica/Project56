<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Routing\ControllerDispatcher" namespace="Illuminate\Routing" name="ControllerDispatcher" abstract="false" final="false" start="11" end="300">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Routing" file="ControllerDispatcher.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php" size="9545" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="5ff7223d3e4971513477648a930fadd96ece585f" relative="vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php"/>
  <uses full="Illuminate\Routing\RouteDependencyResolverTrait" namespace="Illuminate\Routing" name="RouteDependencyResolverTrait" start="13" end="13"/>
  <member name="router" visibility="protected" line="20">
    <docblock>
      <description compact="The router instance."/>
      <var type="object">
        <type full="\Illuminate\Routing\Router" namespace="\Illuminate\Routing" name="Router"/>
      </var>
    </docblock>
  </member>
  <member name="container" visibility="protected" line="27">
    <docblock>
      <description compact="The IoC container instance."/>
      <var type="object">
        <type full="\Illuminate\Container\Container" namespace="\Illuminate\Container" name="Container"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="36" end="41" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new controller dispatcher instance."/>
      <param type="object" variable="$router">
        <type full="\Illuminate\Routing\Router" namespace="\Illuminate\Routing" name="Router"/>
      </param>
      <param type="object" variable="$container">
        <type full="\Illuminate\Container\Container" namespace="\Illuminate\Container" name="Container"/>
      </param>
      <return type="object">
        <type full="Illuminate\Routing\void" namespace="Illuminate\Routing" name="void"/>
      </return>
    </docblock>
    <parameter name="router" byreference="false" type="object">
      <type full="Illuminate\Routing\Router" namespace="Illuminate\Routing" name="Router"/>
    </parameter>
    <parameter name="container" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Illuminate\Container\Container" namespace="Illuminate\Container" name="Container"/>
    </parameter>
  </constructor>
  <method name="dispatch" start="52" end="73" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Dispatch a request to a given controller and method."/>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="string" variable="$controller"/>
      <param type="string" variable="$method"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="route" byreference="false" type="object">
      <type full="Illuminate\Routing\Route" namespace="Illuminate\Routing" name="Route"/>
    </parameter>
    <parameter name="request" byreference="false" type="object">
      <type full="Illuminate\Http\Request" namespace="Illuminate\Http" name="Request"/>
    </parameter>
    <parameter name="controller" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="First we will make an instance of this controller via the IoC container instance" line="54"/>
      <comment value="so that we can call the methods on it. We will also apply any &quot;after&quot; filters" line="55"/>
      <comment value="to the route so that they will be run by the routers after this processing." line="56"/>
      <comment value="If no before filters returned a response we'll call the method on the controller" line="63"/>
      <comment value="to get the response to be returned to the router. We will then return it back" line="64"/>
      <comment value="out for processing by this router and the after filters can be called then." line="65"/>
    </inline>
  </method>
  <method name="makeController" start="81" end="86" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Make a controller instance via the IoC container."/>
      <param type="string" variable="$controller"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="controller" byreference="false" type="{unknown}"/>
  </method>
  <method name="callWithinStack" start="97" end="115" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Call the given controller instance method."/>
      <param type="object" variable="$instance">
        <type full="\Illuminate\Routing\Controller" namespace="\Illuminate\Routing" name="Controller"/>
      </param>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="string" variable="$method"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="instance" byreference="false" type="{unknown}"/>
    <parameter name="route" byreference="false" type="{unknown}"/>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Here we will make a stack onion instance to execute this request in, which gives" line="104"/>
      <comment value="us the ability to define middlewares on controllers. We will return the given" line="105"/>
      <comment value="response back out so that &quot;after&quot; filters can be run after the middlewares." line="106"/>
    </inline>
  </method>
  <method name="getMiddleware" start="124" end="135" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the middleware for the controller instance."/>
      <param type="object" variable="$instance">
        <type full="\Illuminate\Routing\Controller" namespace="\Illuminate\Routing" name="Controller"/>
      </param>
      <param type="string" variable="$method"/>
      <return type="array"/>
    </docblock>
    <parameter name="instance" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
  </method>
  <method name="methodExcludedByOptions" start="144" end="148" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the given options exclude a particular method."/>
      <param type="string" variable="$method"/>
      <param type="array" variable="$options"/>
      <return type="object">
        <type full="Illuminate\Routing\bool" namespace="Illuminate\Routing" name="bool"/>
      </return>
    </docblock>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array"/>
  </method>
  <method name="call" start="158" end="165" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Call the given controller instance method."/>
      <param type="object" variable="$instance">
        <type full="\Illuminate\Routing\Controller" namespace="\Illuminate\Routing" name="Controller"/>
      </param>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <param type="string" variable="$method"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="instance" byreference="false" type="{unknown}"/>
    <parameter name="route" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
  </method>
  <method name="before" start="176" end="190" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Call the &quot;before&quot; filters for the controller."/>
      <param type="object" variable="$instance">
        <type full="\Illuminate\Routing\Controller" namespace="\Illuminate\Routing" name="Controller"/>
      </param>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="string" variable="$method"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="instance" byreference="false" type="{unknown}"/>
    <parameter name="route" byreference="false" type="{unknown}"/>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
  </method>
  <method name="assignAfter" start="201" end="211" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Apply the applicable after filters to the route."/>
      <param type="object" variable="$instance">
        <type full="\Illuminate\Routing\Controller" namespace="\Illuminate\Routing" name="Controller"/>
      </param>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="string" variable="$method"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="instance" byreference="false" type="{unknown}"/>
    <parameter name="route" byreference="false" type="{unknown}"/>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
  </method>
  <method name="getAssignableAfter" start="219" end="226" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the assignable after filter for the route."/>
      <param type="object" variable="$filter">
        <type full="\Closure|string" namespace="" name="Closure|string"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
  </method>
  <method name="filterApplies" start="236" end="245" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the given filter applies to the request."/>
      <param type="array" variable="$filter"/>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="string" variable="$method"/>
      <return type="object">
        <type full="Illuminate\Routing\bool" namespace="Illuminate\Routing" name="bool"/>
      </return>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
  </method>
  <method name="filterFailsMethod" start="255" end="258" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the filter fails the method constraints."/>
      <param type="array" variable="$filter"/>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="string" variable="$method"/>
      <return type="object">
        <type full="Illuminate\Routing\bool" namespace="Illuminate\Routing" name="bool"/>
      </return>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
  </method>
  <method name="filterFailsOn" start="268" end="284" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the filter fails the &quot;on&quot; constraint."/>
      <param type="array" variable="$filter"/>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="string" variable="$method"/>
      <return type="object">
        <type full="Illuminate\Routing\bool" namespace="Illuminate\Routing" name="bool"/>
      </return>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="If the &quot;on&quot; is a string, we will explode it on the pipe so you can set any" line="276"/>
      <comment value="amount of methods on the filter constraints and it will still work like" line="277"/>
      <comment value="you specified an array. Then we will check if the method is in array." line="278"/>
    </inline>
  </method>
  <method name="callFilter" start="294" end="299" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Call the given controller filter method."/>
      <param type="array" variable="$filter"/>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <return type="mixed"/>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
    <parameter name="route" byreference="false" type="{unknown}"/>
    <parameter name="request" byreference="false" type="{unknown}"/>
  </method>
</class>
