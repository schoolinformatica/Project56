<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Queue\Console\WorkCommand" namespace="Illuminate\Queue\Console" name="WorkCommand" abstract="false" final="false" start="11" end="177">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Queue/Console" file="WorkCommand.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Queue/Console/WorkCommand.php" size="4897" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="b5fc138d52e4d5f3c7bf56b3c363e4c1ecb9a76a" relative="vendor/laravel/framework/src/Illuminate/Queue/Console/WorkCommand.php"/>
  <extends full="Illuminate\Console\Command" namespace="Illuminate\Console" name="Command"/>
  <member name="name" type="string" default="'queue:work'" visibility="protected" line="18">
    <docblock>
      <description compact="The console command name."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="description" type="string" default="'Process the next job on a queue'" visibility="protected" line="25">
    <docblock>
      <description compact="The console command description."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="worker" visibility="protected" line="32">
    <docblock>
      <description compact="The queue worker instance."/>
      <var type="object">
        <type full="\Illuminate\Queue\Worker" namespace="\Illuminate\Queue" name="Worker"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="40" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new queue listen command."/>
      <param type="object" variable="$worker">
        <type full="\Illuminate\Queue\Worker" namespace="\Illuminate\Queue" name="Worker"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\Console\void" namespace="Illuminate\Queue\Console" name="void"/>
      </return>
    </docblock>
    <parameter name="worker" byreference="false" type="object">
      <type full="Illuminate\Queue\Worker" namespace="Illuminate\Queue" name="Worker"/>
    </parameter>
  </constructor>
  <method name="fire" start="52" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Execute the console command."/>
      <return type="object">
        <type full="Illuminate\Queue\Console\void" namespace="Illuminate\Queue\Console" name="void"/>
      </return>
    </docblock>
    <inline>
      <comment value="The memory limit is the amount of memory we will allow the script to occupy" line="62"/>
      <comment value="before killing it and letting a process manager restart it for us, which" line="63"/>
      <comment value="is to protect us against any memory leaks that will be in the scripts." line="64"/>
      <comment value="If a job was fired by the worker, we'll write the output out to the console" line="73"/>
      <comment value="so that the developer can watch live while the queue runs in the console" line="74"/>
      <comment value="window, which will also of get logged if stdout is logged out to disk." line="75"/>
    </inline>
  </method>
  <method name="runWorker" start="91" end="110" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Run the worker instance."/>
      <param type="string" variable="$connection"/>
      <param type="string" variable="$queue"/>
      <param type="int" variable="$delay"/>
      <param type="int" variable="$memory"/>
      <param type="object" variable="$daemon">
        <type full="Illuminate\Queue\Console\bool" namespace="Illuminate\Queue\Console" name="bool"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="connection" byreference="false" type="{unknown}"/>
    <parameter name="queue" byreference="false" type="{unknown}"/>
    <parameter name="delay" byreference="false" type="{unknown}"/>
    <parameter name="memory" byreference="false" type="{unknown}"/>
    <parameter name="daemon" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="writeOutput" start="119" end="126" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Write the status output for the queue worker."/>
      <param type="object" variable="$job">
        <type full="\Illuminate\Contracts\Queue\Job" namespace="\Illuminate\Contracts\Queue" name="Job"/>
      </param>
      <param type="object" variable="$failed">
        <type full="Illuminate\Queue\Console\bool" namespace="Illuminate\Queue\Console" name="bool"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\Console\void" namespace="Illuminate\Queue\Console" name="void"/>
      </return>
    </docblock>
    <parameter name="job" byreference="false" type="object">
      <type full="Illuminate\Contracts\Queue\Job" namespace="Illuminate\Contracts\Queue" name="Job"/>
    </parameter>
    <parameter name="failed" byreference="false" type="{unknown}"/>
  </method>
  <method name="downForMaintenance" start="133" end="140" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the worker should run in maintenance mode."/>
      <return type="object">
        <type full="Illuminate\Queue\Console\bool" namespace="Illuminate\Queue\Console" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="getArguments" start="147" end="152" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the console command arguments."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getOptions" start="159" end="176" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the console command options."/>
      <return type="array"/>
    </docblock>
  </method>
</class>
