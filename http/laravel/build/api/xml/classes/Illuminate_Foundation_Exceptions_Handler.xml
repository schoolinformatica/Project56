<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Foundation\Exceptions\Handler" namespace="Illuminate\Foundation\Exceptions" name="Handler" abstract="false" final="false" start="14" end="179">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions" file="Handler.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php" size="4616" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="d0b983dc997fd5a83a655aa5a3264aa9d6bf9ae9" relative="vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php"/>
  <implements full="Illuminate\Contracts\Debug\ExceptionHandler" namespace="Illuminate\Contracts\Debug" name="ExceptionHandler"/>
  <member name="log" visibility="protected" line="21">
    <docblock>
      <description compact="The log implementation."/>
      <var type="object">
        <type full="\Psr\Log\LoggerInterface" namespace="\Psr\Log" name="LoggerInterface"/>
      </var>
    </docblock>
  </member>
  <member name="dontReport" type="array" default="" visibility="protected" line="28">
    <docblock>
      <description compact="A list of the exception types that should not be reported."/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="36" end="39" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new exception handler instance."/>
      <param type="object" variable="$log">
        <type full="\Psr\Log\LoggerInterface" namespace="\Psr\Log" name="LoggerInterface"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Exceptions\void" namespace="Illuminate\Foundation\Exceptions" name="void"/>
      </return>
    </docblock>
    <parameter name="log" byreference="false" type="object">
      <type full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface"/>
    </parameter>
  </constructor>
  <method name="report" start="47" end="52" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Report or log an exception."/>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Exceptions\void" namespace="Illuminate\Foundation\Exceptions" name="void"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="shouldReport" start="60" end="63" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the exception should be reported."/>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Exceptions\bool" namespace="Illuminate\Foundation\Exceptions" name="bool"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="shouldntReport" start="71" end="80" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the exception is in the &quot;do not report&quot; list."/>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Exceptions\bool" namespace="Illuminate\Foundation\Exceptions" name="bool"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="render" start="89" end="100" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Render an exception into a response."/>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Http\Response" namespace="\Illuminate\Http" name="Response"/>
      </return>
    </docblock>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="toIlluminateResponse" start="109" end="116" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Map exception into an illuminate response."/>
      <param type="object" variable="$response">
        <type full="\Symfony\Component\HttpFoundation\Response" namespace="\Symfony\Component\HttpFoundation" name="Response"/>
      </param>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Http\Response" namespace="\Illuminate\Http" name="Response"/>
      </return>
    </docblock>
    <parameter name="response" byreference="false" type="{unknown}"/>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="renderForConsole" start="125" end="128" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Render an exception to the console."/>
      <param type="object" variable="$output">
        <type full="\Symfony\Component\Console\Output\OutputInterface" namespace="\Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Exceptions\void" namespace="Illuminate\Foundation\Exceptions" name="void"/>
      </return>
    </docblock>
    <parameter name="output" byreference="false" type="{unknown}"/>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="renderHttpException" start="136" end="145" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Render the given HttpException."/>
      <param type="object" variable="$e">
        <type full="\Symfony\Component\HttpKernel\Exception\HttpException" namespace="\Symfony\Component\HttpKernel\Exception" name="HttpException"/>
      </param>
      <return type="object">
        <type full="\Symfony\Component\HttpFoundation\Response" namespace="\Symfony\Component\HttpFoundation" name="Response"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="object">
      <type full="Symfony\Component\HttpKernel\Exception\HttpException" namespace="Symfony\Component\HttpKernel\Exception" name="HttpException"/>
    </parameter>
  </method>
  <method name="convertExceptionToResponse" start="153" end="156" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Convert the given exception into a Response instance."/>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="\Symfony\Component\HttpFoundation\Response" namespace="\Symfony\Component\HttpFoundation" name="Response"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="isUnauthorizedException" start="164" end="167" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the given exception is an access unauthorized exception."/>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Exceptions\bool" namespace="Illuminate\Foundation\Exceptions" name="bool"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="isHttpException" start="175" end="178" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the given exception is an HTTP exception."/>
      <param type="object" variable="$e">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Exceptions\bool" namespace="Illuminate\Foundation\Exceptions" name="bool"/>
      </return>
    </docblock>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
</class>
