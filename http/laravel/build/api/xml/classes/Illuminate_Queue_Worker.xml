<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Queue\Worker" namespace="Illuminate\Queue" name="Worker" abstract="false" final="false" start="14" end="384">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Queue" file="Worker.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Queue/Worker.php" size="10166" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="341aea5fdd51d7f2efc1dcc0081d482adc3441d5" relative="vendor/laravel/framework/src/Illuminate/Queue/Worker.php"/>
  <member name="manager" visibility="protected" line="21">
    <docblock>
      <description compact="The queue manager instance."/>
      <var type="object">
        <type full="\Illuminate\Queue\QueueManager" namespace="\Illuminate\Queue" name="QueueManager"/>
      </var>
    </docblock>
  </member>
  <member name="failer" visibility="protected" line="28">
    <docblock>
      <description compact="The failed job provider implementation."/>
      <var type="object">
        <type full="\Illuminate\Queue\Failed\FailedJobProviderInterface" namespace="\Illuminate\Queue\Failed" name="FailedJobProviderInterface"/>
      </var>
    </docblock>
  </member>
  <member name="events" visibility="protected" line="35">
    <docblock>
      <description compact="The event dispatcher instance."/>
      <var type="object">
        <type full="\Illuminate\Contracts\Events\Dispatcher" namespace="\Illuminate\Contracts\Events" name="Dispatcher"/>
      </var>
    </docblock>
  </member>
  <member name="cache" visibility="protected" line="42">
    <docblock>
      <description compact="The cache repository implementation."/>
      <var type="object">
        <type full="\Illuminate\Contracts\Cache\Repository" namespace="\Illuminate\Contracts\Cache" name="Repository"/>
      </var>
    </docblock>
  </member>
  <member name="exceptions" visibility="protected" line="49">
    <docblock>
      <description compact="The exception handler instance."/>
      <var type="object">
        <type full="\Illuminate\Foundation\Exceptions\Handler" namespace="\Illuminate\Foundation\Exceptions" name="Handler"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="59" end="66" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new queue worker."/>
      <param type="object" variable="$manager">
        <type full="\Illuminate\Queue\QueueManager" namespace="\Illuminate\Queue" name="QueueManager"/>
      </param>
      <param type="object" variable="$failer">
        <type full="\Illuminate\Queue\Failed\FailedJobProviderInterface" namespace="\Illuminate\Queue\Failed" name="FailedJobProviderInterface"/>
      </param>
      <param type="object" variable="$events">
        <type full="\Illuminate\Contracts\Events\Dispatcher" namespace="\Illuminate\Contracts\Events" name="Dispatcher"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="manager" byreference="false" type="object">
      <type full="Illuminate\Queue\QueueManager" namespace="Illuminate\Queue" name="QueueManager"/>
    </parameter>
    <parameter name="failer" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Illuminate\Queue\Failed\FailedJobProviderInterface" namespace="Illuminate\Queue\Failed" name="FailedJobProviderInterface"/>
    </parameter>
    <parameter name="events" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Illuminate\Contracts\Events\Dispatcher" namespace="Illuminate\Contracts\Events" name="Dispatcher"/>
    </parameter>
  </constructor>
  <method name="daemon" start="79" end="96" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Listen to the given queue in a loop."/>
      <param type="string" variable="$connectionName"/>
      <param type="string" variable="$queue"/>
      <param type="int" variable="$delay"/>
      <param type="int" variable="$memory"/>
      <param type="int" variable="$sleep"/>
      <param type="int" variable="$maxTries"/>
      <return type="array"/>
    </docblock>
    <parameter name="connectionName" byreference="false" type="{unknown}"/>
    <parameter name="queue" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="delay" byreference="false" type="integer" default="0"/>
    <parameter name="memory" byreference="false" type="integer" default="128"/>
    <parameter name="sleep" byreference="false" type="integer" default="3"/>
    <parameter name="maxTries" byreference="false" type="integer" default="0"/>
  </method>
  <method name="runNextJobForDaemon" start="108" end="121" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Run the next job for the daemon worker."/>
      <param type="string" variable="$connectionName"/>
      <param type="string" variable="$queue"/>
      <param type="int" variable="$delay"/>
      <param type="int" variable="$sleep"/>
      <param type="int" variable="$maxTries"/>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="connectionName" byreference="false" type="{unknown}"/>
    <parameter name="queue" byreference="false" type="{unknown}"/>
    <parameter name="delay" byreference="false" type="{unknown}"/>
    <parameter name="sleep" byreference="false" type="{unknown}"/>
    <parameter name="maxTries" byreference="false" type="{unknown}"/>
  </method>
  <method name="daemonShouldRun" start="128" end="135" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the daemon should process on this iteration."/>
      <return type="object">
        <type full="Illuminate\Queue\bool" namespace="Illuminate\Queue" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="pop" start="147" end="165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Listen to the given queue."/>
      <param type="string" variable="$connectionName"/>
      <param type="string" variable="$queue"/>
      <param type="int" variable="$delay"/>
      <param type="int" variable="$sleep"/>
      <param type="int" variable="$maxTries"/>
      <return type="array"/>
    </docblock>
    <parameter name="connectionName" byreference="false" type="{unknown}"/>
    <parameter name="queue" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="delay" byreference="false" type="integer" default="0"/>
    <parameter name="sleep" byreference="false" type="integer" default="3"/>
    <parameter name="maxTries" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="If we're able to pull a job off of the stack, we will process it and" line="153"/>
      <comment value="then immediately return back out. If there is no job on the queue" line="154"/>
      <comment value="we will &quot;sleep&quot; the worker for the specified number of seconds." line="155"/>
    </inline>
  </method>
  <method name="getNextJob" start="174" end="185" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the next job from the queue connection."/>
      <param type="object" variable="$connection">
        <type full="\Illuminate\Contracts\Queue\Queue" namespace="\Illuminate\Contracts\Queue" name="Queue"/>
      </param>
      <param type="string" variable="$queue"/>
      <return type="object">
        <type full="\Illuminate\Contracts\Queue\Job|null" namespace="\Illuminate\Contracts\Queue" name="Job|null"/>
      </return>
    </docblock>
    <parameter name="connection" byreference="false" type="{unknown}"/>
    <parameter name="queue" byreference="false" type="{unknown}"/>
  </method>
  <method name="process" start="198" end="229" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Process a given job from the queue."/>
      <param type="string" variable="$connection"/>
      <param type="object" variable="$job">
        <type full="\Illuminate\Contracts\Queue\Job" namespace="\Illuminate\Contracts\Queue" name="Job"/>
      </param>
      <param type="int" variable="$maxTries"/>
      <param type="int" variable="$delay"/>
      <return type="object">
        <type full="Illuminate\Queue\array|null" namespace="Illuminate\Queue" name="array|null"/>
      </return>
      <throws type="object">
        <type full="\Throwable" namespace="" name="Throwable"/>
      </throws>
    </docblock>
    <parameter name="connection" byreference="false" type="{unknown}"/>
    <parameter name="job" byreference="false" type="object">
      <type full="Illuminate\Contracts\Queue\Job" namespace="Illuminate\Contracts\Queue" name="Job"/>
    </parameter>
    <parameter name="maxTries" byreference="false" type="integer" default="0"/>
    <parameter name="delay" byreference="false" type="integer" default="0"/>
  </method>
  <method name="raiseAfterJobEvent" start="238" end="245" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Raise the after queue job event."/>
      <param type="string" variable="$connection"/>
      <param type="object" variable="$job">
        <type full="\Illuminate\Contracts\Queue\Job" namespace="\Illuminate\Contracts\Queue" name="Job"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="connection" byreference="false" type="{unknown}"/>
    <parameter name="job" byreference="false" type="object">
      <type full="Illuminate\Contracts\Queue\Job" namespace="Illuminate\Contracts\Queue" name="Job"/>
    </parameter>
  </method>
  <method name="logFailedJob" start="254" end="267" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Log a failed job into storage."/>
      <param type="string" variable="$connection"/>
      <param type="object" variable="$job">
        <type full="\Illuminate\Contracts\Queue\Job" namespace="\Illuminate\Contracts\Queue" name="Job"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="connection" byreference="false" type="{unknown}"/>
    <parameter name="job" byreference="false" type="object">
      <type full="Illuminate\Contracts\Queue\Job" namespace="Illuminate\Contracts\Queue" name="Job"/>
    </parameter>
  </method>
  <method name="raiseFailedJobEvent" start="276" end="283" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Raise the failed queue job event."/>
      <param type="string" variable="$connection"/>
      <param type="object" variable="$job">
        <type full="\Illuminate\Contracts\Queue\Job" namespace="\Illuminate\Contracts\Queue" name="Job"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="connection" byreference="false" type="{unknown}"/>
    <parameter name="job" byreference="false" type="object">
      <type full="Illuminate\Contracts\Queue\Job" namespace="Illuminate\Contracts\Queue" name="Job"/>
    </parameter>
  </method>
  <method name="memoryExceeded" start="291" end="294" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the memory limit has been exceeded."/>
      <param type="int" variable="$memoryLimit"/>
      <return type="object">
        <type full="Illuminate\Queue\bool" namespace="Illuminate\Queue" name="bool"/>
      </return>
    </docblock>
    <parameter name="memoryLimit" byreference="false" type="{unknown}"/>
  </method>
  <method name="stop" start="301" end="306" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Stop listening and bail out of the script."/>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="sleep" start="314" end="317" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sleep the script for a given number of seconds."/>
      <param type="int" variable="$seconds"/>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="seconds" byreference="false" type="{unknown}"/>
  </method>
  <method name="getTimestampOfLastQueueRestart" start="324" end="329" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the last queue restart timestamp, or null."/>
      <return type="object">
        <type full="Illuminate\Queue\int|null" namespace="Illuminate\Queue" name="int|null"/>
      </return>
    </docblock>
  </method>
  <method name="queueShouldRestart" start="337" end="340" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the queue worker should restart."/>
      <param type="object" variable="$lastRestart">
        <type full="Illuminate\Queue\int|null" namespace="Illuminate\Queue" name="int|null"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\bool" namespace="Illuminate\Queue" name="bool"/>
      </return>
    </docblock>
    <parameter name="lastRestart" byreference="false" type="{unknown}"/>
  </method>
  <method name="setDaemonExceptionHandler" start="348" end="351" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the exception handler to use in Daemon mode."/>
      <param type="object" variable="$handler">
        <type full="\Illuminate\Contracts\Debug\ExceptionHandler" namespace="\Illuminate\Contracts\Debug" name="ExceptionHandler"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="handler" byreference="false" type="object">
      <type full="Illuminate\Contracts\Debug\ExceptionHandler" namespace="Illuminate\Contracts\Debug" name="ExceptionHandler"/>
    </parameter>
  </method>
  <method name="setCache" start="359" end="362" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the cache repository implementation."/>
      <param type="object" variable="$cache">
        <type full="\Illuminate\Contracts\Cache\Repository" namespace="\Illuminate\Contracts\Cache" name="Repository"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="cache" byreference="false" type="object">
      <type full="Illuminate\Contracts\Cache\Repository" namespace="Illuminate\Contracts\Cache" name="Repository"/>
    </parameter>
  </method>
  <method name="getManager" start="369" end="372" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the queue manager instance."/>
      <return type="object">
        <type full="\Illuminate\Queue\QueueManager" namespace="\Illuminate\Queue" name="QueueManager"/>
      </return>
    </docblock>
  </method>
  <method name="setManager" start="380" end="383" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the queue manager instance."/>
      <param type="object" variable="$manager">
        <type full="\Illuminate\Queue\QueueManager" namespace="\Illuminate\Queue" name="QueueManager"/>
      </param>
      <return type="object">
        <type full="Illuminate\Queue\void" namespace="Illuminate\Queue" name="void"/>
      </return>
    </docblock>
    <parameter name="manager" byreference="false" type="object">
      <type full="Illuminate\Queue\QueueManager" namespace="Illuminate\Queue" name="QueueManager"/>
    </parameter>
  </method>
</class>
