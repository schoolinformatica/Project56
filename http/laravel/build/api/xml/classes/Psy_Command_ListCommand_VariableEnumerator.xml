<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Psy\Command\ListCommand\VariableEnumerator" namespace="Psy\Command\ListCommand" name="VariableEnumerator" abstract="false" final="false" start="21" end="129">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/psy/psysh/src/Psy/Command/ListCommand" file="VariableEnumerator.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/psy/psysh/src/Psy/Command/ListCommand/VariableEnumerator.php" size="3319" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="1372ebde7e68a9896d0f570e670f6ed79362bbef" relative="vendor/psy/psysh/src/Psy/Command/ListCommand/VariableEnumerator.php"/>
  <docblock>
    <description compact="Variable Enumerator class."/>
  </docblock>
  <extends full="Psy\Command\ListCommand\Enumerator" namespace="Psy\Command\ListCommand" name="Enumerator"/>
  <member name="specialVars" type="array" default="" visibility="private" line="23"/>
  <member name="context" visibility="private" line="24"/>
  <constructor name="__construct" start="35" end="39" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Variable Enumerator constructor.">Unlike most other enumerators, the Variable Enumerator needs access to
the current scope variables, so we need to pass it a Context instance.</description>
      <param type="object" variable="$presenter">
        <type full="Psy\VarDumper\Presenter" namespace="Psy\VarDumper" name="Presenter"/>
      </param>
      <param type="object" variable="$context">
        <type full="Psy\Context" namespace="Psy" name="Context"/>
      </param>
    </docblock>
    <parameter name="presenter" byreference="false" type="object">
      <type full="Psy\VarDumper\Presenter" namespace="Psy\VarDumper" name="Presenter"/>
    </parameter>
    <parameter name="context" byreference="false" type="object">
      <type full="Psy\Context" namespace="Psy" name="Context"/>
    </parameter>
  </constructor>
  <method name="listItems" start="44" end="66" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="reflector" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Reflector" namespace="" name="Reflector"/>
    </parameter>
    <parameter name="target" byreference="false" type="{unknown}" default="" constant="null"/>
    <inline>
      <comment value="only list variables when no Reflector is present." line="46"/>
      <comment value="only list variables if we are specifically asked" line="51"/>
    </inline>
  </method>
  <method name="getVariables" start="75" end="103" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get scope variables."/>
      <param description="Include special variables (e.g. $_)." type="object" variable="$showAll">
        <type full="Psy\Command\ListCommand\bool" namespace="Psy\Command\ListCommand" name="bool"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="showAll" byreference="false" type="{unknown}"/>
  </method>
  <method name="prepareVariables" start="112" end="128" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Prepare formatted variable array."/>
      <param type="array" variable="$variables"/>
      <return type="array"/>
    </docblock>
    <parameter name="variables" byreference="false" type="array"/>
    <inline>
      <comment value="My kingdom for a generator." line="114"/>
    </inline>
  </method>
</class>
