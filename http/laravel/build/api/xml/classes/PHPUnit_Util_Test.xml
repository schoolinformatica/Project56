<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Util_Test" namespace="" name="PHPUnit_Util_Test" abstract="false" final="false" start="23" end="1084">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Util" file="Test.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Util/Test.php" size="34270" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="4ccee7a0a3aa7b91f6a94d936f24b2d44391b91d" relative="vendor/phpunit/phpunit/src/Util/Test.php"/>
  <docblock>
    <description compact="Test helpers."/>
    <since value="Class available since Release 3.0.0"/>
  </docblock>
  <constant type="string" name="REGEX_DATA_PROVIDER" value="'/@dataProvider\s+([a-zA-Z0-9._:-\\\\x7f-\xff]+)/'"/>
  <constant type="string" name="REGEX_TEST_WITH" value="'/@testWith\s+/'"/>
  <constant type="string" name="REGEX_EXPECTED_EXCEPTION" value="'(@expectedException\s+([:.\w\\\\x7f-\xff]+)(?:[\t ]+(\S*))?(?:[\t ]+(\S*))?\s*$)m'"/>
  <constant type="string" name="REGEX_REQUIRES_VERSION" value="'/@requires\s+(?P&lt;name&gt;PHP(?:Unit)?)\s+(?P&lt;value&gt;[\d\.-]+(dev|(RC|alpha|beta)[\d\.])?)[ \t]*\r?$/m'"/>
  <constant type="string" name="REGEX_REQUIRES_OS" value="'/@requires\s+OS\s+(?P&lt;value&gt;.+?)[ \t]*\r?$/m'"/>
  <constant type="string" name="REGEX_REQUIRES" value="'/@requires\s+(?P&lt;name&gt;function|extension)\s+(?P&lt;value&gt;([^ ]+?))[ \t]*\r?$/m'"/>
  <constant type="integer" name="UNKNOWN" value="1"/>
  <constant type="integer" name="SMALL" value="0"/>
  <constant type="integer" name="MEDIUM" value="1"/>
  <constant type="integer" name="LARGE" value="2"/>
  <member name="annotationCache" type="array" default="" visibility="private" line="37"/>
  <member name="hookMethods" type="array" default="" visibility="private" line="39"/>
  <method name="describe" start="47" end="66" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$test">
        <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
      </param>
      <param type="object" variable="$asString">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="mixed"/>
    </docblock>
    <parameter name="test" byreference="false" type="object">
      <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
    </parameter>
    <parameter name="asString" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="getLinesToBeCovered" start="78" end="90" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="object">
        <type full="array|bool" namespace="" name="array|bool"/>
      </return>
      <throws type="object">
        <type full="PHPUnit_Framework_CodeCoverageException" namespace="" name="PHPUnit_Framework_CodeCoverageException"/>
      </throws>
      <since value="Method available since Release 4.0.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getLinesToBeUsed" start="102" end="105" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns lines of code specified with the @uses annotation."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <since value="Method available since Release 4.0.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getLinesToBeCoveredOrUsed" start="118" end="169" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <param type="string" variable="$mode"/>
      <return type="array"/>
      <throws type="object">
        <type full="PHPUnit_Framework_CodeCoverageException" namespace="" name="PHPUnit_Framework_CodeCoverageException"/>
      </throws>
      <since value="Method available since Release 4.2.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
    <parameter name="mode" byreference="false" type="{unknown}"/>
  </method>
  <method name="getRequirements" start="181" end="215" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the requirements for a test."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <since value="Method available since Release 3.6.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="https://bugs.php.net/bug.php?id=63055" line="201"/>
    </inline>
  </method>
  <method name="getMissingRequirements" start="227" end="269" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the missing requirements for a test."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <since value="Method available since Release 4.3.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getExpectedException" start="281" end="332" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the expected exception for a test."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <since value="Method available since Release 3.3.6"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="parseAnnotationContent" start="345" end="354" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description compact="Parse annotation content to use constant/class constant values">Constants are specified using a starting '@'. For example: @ClassName::CONST_NAME

If the constant is not found the string is used as is to ensure maximum BC.</description>
      <param type="string" variable="$message"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
  </method>
  <method name="getProvidedData" start="369" end="401" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the provided data for a method."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return description="when a data provider is specified and exists" type="object">null           when no data provider is specified<type full="array|Iterator" namespace="" name="array|Iterator"/></return>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
      <since value="Method available since Release 3.2.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDataFromDataProviderAnnotation" start="415" end="453" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description compact="Returns the provided data for a method."/>
      <param type="string" variable="$docComment"/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return description="when a data provider is specified and exists" type="object">null           when no data provider is specified<type full="array|Iterator" namespace="" name="array|Iterator"/></return>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
    </docblock>
    <parameter name="docComment" byreference="false" type="{unknown}"/>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDataFromTestWithAnnotation" start="463" end="485" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param description="full docComment string" type="string" variable="$docComment"/>
      <return description="when @testWith annotation is defined" type="array">null  when @testWith annotation is omitted</return>
      <throws description="when @testWith annotation is defined but cannot be parsed" type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
    </docblock>
    <parameter name="docComment" byreference="false" type="{unknown}"/>
  </method>
  <method name="cleanUpMultiLineAnnotation" start="487" end="495" abstract="false" final="false" static="true" visibility="private">
    <parameter name="docComment" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="removing initial '   * ' for docComment" line="489"/>
    </inline>
  </method>
  <method name="parseTestMethodAnnotations" start="507" end="528" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <throws type="object">
        <type full="ReflectionException" namespace="" name="ReflectionException"/>
      </throws>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="string" default="''"/>
  </method>
  <method name="parseAnnotations" start="537" end="552" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$docblock"/>
      <return type="array"/>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="docblock" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Strip away the docblock header and footer to ease parsing of one line annotations" line="540"/>
    </inline>
  </method>
  <method name="getBackupSettings" start="564" end="578" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the backup settings for a test."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDependencies" start="590" end="611" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the dependencies for a test class or method."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getErrorHandlerSettings" start="623" end="630" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the error handler settings for a test."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getGroups" start="642" end="688" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the groups for a test class or method."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <since value="Method available since Release 3.2.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="string" default="''"/>
  </method>
  <method name="getSize" start="700" end="719" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the size of the test."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="int"/>
      <since value="Method available since Release 3.6.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getTickets" start="731" end="749" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the tickets for a test class or method."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="array"/>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getProcessIsolationSettings" start="761" end="774" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the process isolation settings for a test."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <since value="Method available since Release 3.4.1"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getPreserveGlobalStateSettings" start="786" end="793" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the preserve global state settings for a test."/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getHookMethods" start="802" end="836" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$className"/>
      <return type="array"/>
      <since value="Method available since Release 4.0.8"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
  </method>
  <method name="emptyHookMethodsArray" start="843" end="851" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <return type="array"/>
      <since value="Method available since Release 4.0.9"/>
    </docblock>
  </method>
  <method name="getBooleanAnnotationSetting" start="862" end="888" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$className"/>
      <param type="string" variable="$methodName"/>
      <param type="string" variable="$settingName"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
    <parameter name="settingName" byreference="false" type="{unknown}"/>
  </method>
  <method name="resolveElementToReflectionObjects" start="899" end="1008" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$element"/>
      <return type="array"/>
      <throws type="object">
        <type full="PHPUnit_Framework_InvalidCoversTargetException" namespace="" name="PHPUnit_Framework_InvalidCoversTargetException"/>
      </throws>
      <since value="Method available since Release 4.0.0"/>
    </docblock>
    <parameter name="element" byreference="false" type="{unknown}"/>
  </method>
  <method name="resolveReflectionObjectsToLines" start="1015" end="1035" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="array" variable="$reflectors"/>
      <return type="array"/>
    </docblock>
    <parameter name="reflectors" byreference="false" type="array"/>
  </method>
  <method name="isBeforeClassMethod" start="1044" end="1047" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="object" variable="$method">
        <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
      </param>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <since value="Method available since Release 4.0.8"/>
    </docblock>
    <parameter name="method" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
  </method>
  <method name="isBeforeMethod" start="1056" end="1059" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="object" variable="$method">
        <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
      </param>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <since value="Method available since Release 4.0.8"/>
    </docblock>
    <parameter name="method" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
  </method>
  <method name="isAfterClassMethod" start="1068" end="1071" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="object" variable="$method">
        <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
      </param>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <since value="Method available since Release 4.0.8"/>
    </docblock>
    <parameter name="method" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
  </method>
  <method name="isAfterMethod" start="1080" end="1083" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="object" variable="$method">
        <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
      </param>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
      <since value="Method available since Release 4.0.8"/>
    </docblock>
    <parameter name="method" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
  </method>
</class>
