<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Filesystem\FilesystemAdapter" namespace="Illuminate\Filesystem" name="FilesystemAdapter" abstract="false" final="false" start="14" end="353">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Filesystem" file="FilesystemAdapter.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemAdapter.php" size="8344" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="f58f13ab3533e1a953d2b7340c28e59f7f23db26" relative="vendor/laravel/framework/src/Illuminate/Filesystem/FilesystemAdapter.php"/>
  <implements full="Illuminate\Contracts\Filesystem\Filesystem" namespace="Illuminate\Contracts\Filesystem" name="Filesystem"/>
  <implements full="Illuminate\Contracts\Filesystem\Cloud" namespace="Illuminate\Contracts\Filesystem" name="Cloud"/>
  <member name="driver" visibility="protected" line="21">
    <docblock>
      <description compact="The Flysystem filesystem implementation."/>
      <var type="object">
        <type full="\League\Flysystem\FilesystemInterface" namespace="\League\Flysystem" name="FilesystemInterface"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="29" end="32" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new filesystem adapter instance."/>
      <param type="object" variable="$driver">
        <type full="\League\Flysystem\FilesystemInterface" namespace="\League\Flysystem" name="FilesystemInterface"/>
      </param>
      <return type="object">
        <type full="Illuminate\Filesystem\void" namespace="Illuminate\Filesystem" name="void"/>
      </return>
    </docblock>
    <parameter name="driver" byreference="false" type="object">
      <type full="League\Flysystem\FilesystemInterface" namespace="League\Flysystem" name="FilesystemInterface"/>
    </parameter>
  </constructor>
  <method name="exists" start="40" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if a file exists."/>
      <param type="string" variable="$path"/>
      <return type="object">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="get" start="53" end="60" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the contents of a file."/>
      <param type="string" variable="$path"/>
      <return type="string"/>
      <throws type="object">
        <type full="\Illuminate\Contracts\Filesystem\FileNotFoundException" namespace="\Illuminate\Contracts\Filesystem" name="FileNotFoundException"/>
      </throws>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="put" start="70" end="83" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Write the contents of a file."/>
      <param type="string" variable="$path"/>
      <param type="object" variable="$contents">
        <type full="Illuminate\Filesystem\string|resource" namespace="Illuminate\Filesystem" name="string|resource"/>
      </param>
      <param type="string" variable="$visibility"/>
      <return type="object">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="contents" byreference="false" type="{unknown}"/>
    <parameter name="visibility" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getVisibility" start="91" end="98" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the visibility for the given path."/>
      <param type="string" variable="$path"/>
      <return type="string"/>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="setVisibility" start="107" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the visibility for the given path."/>
      <param type="string" variable="$path"/>
      <param type="string" variable="$visibility"/>
      <return type="object">
        <type full="Illuminate\Filesystem\void" namespace="Illuminate\Filesystem" name="void"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="visibility" byreference="false" type="{unknown}"/>
  </method>
  <method name="prepend" start="119" end="126" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Prepend to a file."/>
      <param type="string" variable="$path"/>
      <param type="string" variable="$data"/>
      <return type="int"/>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="{unknown}"/>
  </method>
  <method name="append" start="135" end="142" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Append to a file."/>
      <param type="string" variable="$path"/>
      <param type="string" variable="$data"/>
      <return type="int"/>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="{unknown}"/>
  </method>
  <method name="delete" start="150" end="159" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Delete the file at a given path."/>
      <param type="object" variable="$paths">
        <type full="Illuminate\Filesystem\string|array" namespace="Illuminate\Filesystem" name="string|array"/>
      </param>
      <return type="object">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </return>
    </docblock>
    <parameter name="paths" byreference="false" type="{unknown}"/>
  </method>
  <method name="copy" start="168" end="171" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Copy a file to a new location."/>
      <param type="string" variable="$from"/>
      <param type="string" variable="$to"/>
      <return type="object">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </return>
    </docblock>
    <parameter name="from" byreference="false" type="{unknown}"/>
    <parameter name="to" byreference="false" type="{unknown}"/>
  </method>
  <method name="move" start="180" end="183" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Move a file to a new location."/>
      <param type="string" variable="$from"/>
      <param type="string" variable="$to"/>
      <return type="object">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </return>
    </docblock>
    <parameter name="from" byreference="false" type="{unknown}"/>
    <parameter name="to" byreference="false" type="{unknown}"/>
  </method>
  <method name="size" start="191" end="194" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the file size of a given file."/>
      <param type="string" variable="$path"/>
      <return type="int"/>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="mimeType" start="202" end="205" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the mime-type of a given file."/>
      <param type="string" variable="$path"/>
      <return type="object">
        <type full="Illuminate\Filesystem\string|false" namespace="Illuminate\Filesystem" name="string|false"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="lastModified" start="213" end="216" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the file's last modification time."/>
      <param type="string" variable="$path"/>
      <return type="int"/>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="files" start="225" end="230" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get an array of all files in a directory."/>
      <param type="object" variable="$directory">
        <type full="Illuminate\Filesystem\string|null" namespace="Illuminate\Filesystem" name="string|null"/>
      </param>
      <param type="object" variable="$recursive">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="directory" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="recursive" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="allFiles" start="238" end="241" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all of the files from the given directory (recursive)."/>
      <param type="object" variable="$directory">
        <type full="Illuminate\Filesystem\string|null" namespace="Illuminate\Filesystem" name="string|null"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="directory" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="directories" start="250" end="255" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all of the directories within a given directory."/>
      <param type="object" variable="$directory">
        <type full="Illuminate\Filesystem\string|null" namespace="Illuminate\Filesystem" name="string|null"/>
      </param>
      <param type="object" variable="$recursive">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="directory" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="recursive" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="allDirectories" start="263" end="266" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all (recursive) of the directories within a given directory."/>
      <param type="object" variable="$directory">
        <type full="Illuminate\Filesystem\string|null" namespace="Illuminate\Filesystem" name="string|null"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="directory" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="makeDirectory" start="274" end="277" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a directory."/>
      <param type="string" variable="$path"/>
      <return type="object">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="deleteDirectory" start="285" end="288" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Recursively delete a directory."/>
      <param type="string" variable="$directory"/>
      <return type="object">
        <type full="Illuminate\Filesystem\bool" namespace="Illuminate\Filesystem" name="bool"/>
      </return>
    </docblock>
    <parameter name="directory" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDriver" start="295" end="298" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the Flysystem driver."/>
      <return type="object">
        <type full="\League\Flysystem\FilesystemInterface" namespace="\League\Flysystem" name="FilesystemInterface"/>
      </return>
    </docblock>
  </method>
  <method name="filterContentsByType" start="307" end="314" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Filter directory contents by type."/>
      <param type="array" variable="$contents"/>
      <param type="string" variable="$type"/>
      <return type="array"/>
    </docblock>
    <parameter name="contents" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="parseVisibility" start="323" end="338" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Parse the given visibility value."/>
      <param type="object" variable="$visibility">
        <type full="Illuminate\Filesystem\string|null" namespace="Illuminate\Filesystem" name="string|null"/>
      </param>
      <return type="object">
        <type full="Illuminate\Filesystem\string|null" namespace="Illuminate\Filesystem" name="string|null"/>
      </return>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="visibility" byreference="false" type="{unknown}"/>
  </method>
  <method name="__call" start="349" end="352" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pass dynamic methods call onto Flysystem."/>
      <param type="string" variable="$method"/>
      <param type="array" variable="$parameters"/>
      <return type="mixed"/>
      <throws type="object">
        <type full="\BadMethodCallException" namespace="" name="BadMethodCallException"/>
      </throws>
    </docblock>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="array"/>
  </method>
</class>
