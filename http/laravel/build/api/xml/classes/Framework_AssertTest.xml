<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Framework_AssertTest" namespace="" name="Framework_AssertTest" abstract="false" final="false" start="14" end="4130">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/tests/Framework" file="AssertTest.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/tests/Framework/AssertTest.php" size="118217" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="c4e5c3a509b29cc0b3d18043c0d59341efc4bb65" relative="vendor/phpunit/phpunit/tests/Framework/AssertTest.php"/>
  <docblock>
    <description/>
    <since value="Class available since Release 2.0.0"/>
  </docblock>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <member name="filesDirectory" visibility="private" line="19">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <method name="setUp" start="21" end="24" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="testFail" start="29" end="38" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::fail"/>
    </docblock>
  </method>
  <method name="testAssertSplObjectStorageContainsObject" start="43" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContains"/>
    </docblock>
  </method>
  <method name="testAssertArrayContainsObject" start="64" end="78" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContains"/>
    </docblock>
  </method>
  <method name="testAssertArrayContainsString" start="83" end="94" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContains"/>
    </docblock>
  </method>
  <method name="testAssertArrayContainsNonObject" start="99" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContains"/>
    </docblock>
  </method>
  <method name="testAssertContainsOnlyInstancesOf" start="115" end="133" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContainsOnlyInstancesOf"/>
    </docblock>
  </method>
  <method name="testAssertArrayHasKeyThrowsExceptionForInvalidFirstArgument" start="139" end="142" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayHasKey"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertArrayHasKeyThrowsExceptionForInvalidSecondArgument" start="148" end="151" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayHasKey"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertArrayHasIntegerKey" start="156" end="167" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayHasKey"/>
    </docblock>
  </method>
  <method name="testAssertArraySubset" start="173" end="197" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArraySubset"/>
      <covers value="PHPUnit_Framework_Constraint_ArraySubset"/>
    </docblock>
  </method>
  <method name="testAssertArraySubsetWithDeepNestedArrays" start="203" end="227" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArraySubset"/>
      <covers value="PHPUnit_Framework_Constraint_ArraySubset"/>
    </docblock>
  </method>
  <method name="testAssertArraySubsetWithNoStrictCheckAndObjects" start="233" end="241" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArraySubset"/>
      <covers value="PHPUnit_Framework_Constraint_ArraySubset"/>
    </docblock>
  </method>
  <method name="testAssertArraySubsetWithStrictCheckAndObjects" start="247" end="262" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArraySubset"/>
      <covers value="PHPUnit_Framework_Constraint_ArraySubset"/>
    </docblock>
  </method>
  <method name="testAssertArraySubsetRaisesExceptionForInvalidArguments" start="271" end="274" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArraySubset"/>
      <covers value="PHPUnit_Framework_Constraint_ArraySubset"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
      <expectedexceptionmessage value="array or ArrayAccess"/>
      <dataprovider value="assertArraySubsetInvalidArgumentProvider"/>
    </docblock>
    <parameter name="partial" byreference="false" type="{unknown}"/>
    <parameter name="subject" byreference="false" type="{unknown}"/>
  </method>
  <method name="assertArraySubsetInvalidArgumentProvider" start="279" end="285" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotHasKeyThrowsExceptionForInvalidFirstArgument" start="291" end="294" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayNotHasKey"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotHasKeyThrowsExceptionForInvalidSecondArgument" start="300" end="303" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayNotHasKey"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotHasIntegerKey" start="308" end="319" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayNotHasKey"/>
    </docblock>
  </method>
  <method name="testAssertArrayHasStringKey" start="324" end="335" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayHasKey"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotHasStringKey" start="340" end="351" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayNotHasKey"/>
    </docblock>
  </method>
  <method name="testAssertArrayHasKeyAcceptsArrayObjectValue" start="356" end="361" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayHasKey"/>
    </docblock>
  </method>
  <method name="testAssertArrayHasKeyProperlyFailsWithArrayObjectValue" start="367" end="372" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayHasKey"/>
      <expectedexception value="PHPUnit_Framework_AssertionFailedError"/>
    </docblock>
  </method>
  <method name="testAssertArrayHasKeyAcceptsArrayAccessValue" start="377" end="382" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayHasKey"/>
    </docblock>
  </method>
  <method name="testAssertArrayHasKeyProperlyFailsWithArrayAccessValue" start="388" end="393" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayHasKey"/>
      <expectedexception value="PHPUnit_Framework_AssertionFailedError"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotHasKeyAcceptsArrayAccessValue" start="398" end="403" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayNotHasKey"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotHasKeyPropertlyFailsWithArrayAccessValue" start="409" end="414" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertArrayNotHasKey"/>
      <expectedexception value="PHPUnit_Framework_AssertionFailedError"/>
    </docblock>
  </method>
  <method name="testAssertContainsThrowsException" start="420" end="423" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContains"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertIteratorContainsObject" start="428" end="441" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContains"/>
    </docblock>
  </method>
  <method name="testAssertIteratorContainsString" start="446" end="457" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContains"/>
    </docblock>
  </method>
  <method name="testAssertStringContainsString" start="462" end="473" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContains"/>
    </docblock>
  </method>
  <method name="testAssertNotContainsThrowsException" start="479" end="482" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContains"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertSplObjectStorageNotContainsObject" start="487" end="503" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContains"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotContainsObject" start="508" end="522" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContains"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotContainsString" start="527" end="538" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContains"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotContainsNonObject" start="543" end="554" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContains"/>
    </docblock>
  </method>
  <method name="testAssertStringNotContainsString" start="559" end="570" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContains"/>
    </docblock>
  </method>
  <method name="testAssertContainsOnlyThrowsException" start="576" end="579" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContainsOnly"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertNotContainsOnlyThrowsException" start="585" end="588" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContainsOnly"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertContainsOnlyInstancesOfThrowsException" start="594" end="597" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContainsOnlyInstancesOf"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertArrayContainsOnlyIntegers" start="602" end="613" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContainsOnly"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotContainsOnlyIntegers" start="618" end="629" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContainsOnly"/>
    </docblock>
  </method>
  <method name="testAssertArrayContainsOnlyStdClass" start="634" end="645" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertContainsOnly"/>
    </docblock>
  </method>
  <method name="testAssertArrayNotContainsOnlyStdClass" start="650" end="661" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotContainsOnly"/>
    </docblock>
  </method>
  <method name="sameValues" start="663" end="692" abstract="false" final="false" static="false" visibility="protected">
    <inline>
      <comment value="cannot use $filesDirectory, because neither setUp() nor" line="666"/>
      <comment value="setUpBeforeClass() are executed before the data providers" line="667"/>
    </inline>
  </method>
  <method name="notEqualValues" start="694" end="835" abstract="false" final="false" static="false" visibility="protected">
    <inline>
      <comment value="cyclic dependencies" line="696"/>
      <comment value="same content, different object" line="715"/>
      <comment value="cannot use $filesDirectory, because neither setUp() nor" line="717"/>
      <comment value="setUpBeforeClass() are executed before the data providers" line="718"/>
    </inline>
  </method>
  <method name="equalValues" start="837" end="947" abstract="false" final="false" static="false" visibility="protected">
    <inline>
      <comment value="cyclic dependencies" line="839"/>
    </inline>
  </method>
  <method name="equalProvider" start="949" end="953" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="same |= equal" line="951"/>
    </inline>
  </method>
  <method name="notEqualProvider" start="955" end="958" abstract="false" final="false" static="false" visibility="public"/>
  <method name="sameProvider" start="960" end="963" abstract="false" final="false" static="false" visibility="public"/>
  <method name="notSameProvider" start="965" end="970" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="not equal |= not same" line="967"/>
      <comment value="equal, ¬same |= not same" line="968"/>
    </inline>
  </method>
  <method name="testAssertEqualsSucceeds" start="976" end="979" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEquals"/>
      <dataprovider value="equalProvider"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
    <parameter name="delta" byreference="false" type="float" default="0.0"/>
    <parameter name="canonicalize" byreference="false" type="boolean" default="false"/>
    <parameter name="ignoreCase" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="testAssertEqualsFails" start="985" end="994" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEquals"/>
      <dataprovider value="notEqualProvider"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
    <parameter name="delta" byreference="false" type="float" default="0.0"/>
    <parameter name="canonicalize" byreference="false" type="boolean" default="false"/>
    <parameter name="ignoreCase" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="testAssertNotEqualsSucceeds" start="1000" end="1003" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotEquals"/>
      <dataprovider value="notEqualProvider"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
    <parameter name="delta" byreference="false" type="float" default="0.0"/>
    <parameter name="canonicalize" byreference="false" type="boolean" default="false"/>
    <parameter name="ignoreCase" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="testAssertNotEqualsFails" start="1009" end="1018" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotEquals"/>
      <dataprovider value="equalProvider"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
    <parameter name="delta" byreference="false" type="float" default="0.0"/>
    <parameter name="canonicalize" byreference="false" type="boolean" default="false"/>
    <parameter name="ignoreCase" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="testAssertSameSucceeds" start="1024" end="1027" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertSame"/>
      <dataprovider value="sameProvider"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
  </method>
  <method name="testAssertSameFails" start="1033" end="1042" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertSame"/>
      <dataprovider value="notSameProvider"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
  </method>
  <method name="testAssertNotSameSucceeds" start="1048" end="1051" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotSame"/>
      <dataprovider value="notSameProvider"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
  </method>
  <method name="testAssertNotSameFails" start="1057" end="1066" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotSame"/>
      <dataprovider value="sameProvider"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
  </method>
  <method name="testAssertXmlFileEqualsXmlFile" start="1071" end="1088" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertXmlFileEqualsXmlFile"/>
    </docblock>
  </method>
  <method name="testAssertXmlFileNotEqualsXmlFile" start="1093" end="1110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertXmlFileNotEqualsXmlFile"/>
    </docblock>
  </method>
  <method name="testAssertXmlStringEqualsXmlFile" start="1115" end="1132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertXmlStringEqualsXmlFile"/>
    </docblock>
  </method>
  <method name="testXmlStringNotEqualsXmlFile" start="1137" end="1154" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertXmlStringNotEqualsXmlFile"/>
    </docblock>
  </method>
  <method name="testAssertXmlStringEqualsXmlString" start="1159" end="1170" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertXmlStringEqualsXmlString"/>
    </docblock>
  </method>
  <method name="testAssertXmlStringEqualsXmlString2" start="1177" end="1180" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
      <covers value="PHPUnit_Framework_Assert::assertXmlStringEqualsXmlString"/>
      <ticket value="1860"/>
    </docblock>
  </method>
  <method name="testAssertXmlStringEqualsXmlString3" start="1186" end="1203" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertXmlStringEqualsXmlString"/>
      <ticket value="1860"/>
    </docblock>
  </method>
  <method name="testAssertXmlStringNotEqualsXmlString" start="1208" end="1219" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertXmlStringNotEqualsXmlString"/>
    </docblock>
  </method>
  <method name="testXMLStructureIsSame" start="1224" end="1235" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEqualXMLStructure"/>
    </docblock>
  </method>
  <method name="testXMLStructureWrongNumberOfAttributes" start="1241" end="1252" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEqualXMLStructure"/>
      <expectedexception value="PHPUnit_Framework_ExpectationFailedException"/>
    </docblock>
  </method>
  <method name="testXMLStructureWrongNumberOfNodes" start="1258" end="1269" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEqualXMLStructure"/>
      <expectedexception value="PHPUnit_Framework_ExpectationFailedException"/>
    </docblock>
  </method>
  <method name="testXMLStructureIsSameButDataIsNot" start="1274" end="1285" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEqualXMLStructure"/>
    </docblock>
  </method>
  <method name="testXMLStructureAttributesAreSameButValuesAreNot" start="1290" end="1301" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEqualXMLStructure"/>
    </docblock>
  </method>
  <method name="testXMLStructureIgnoreTextNodes" start="1306" end="1317" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEqualXMLStructure"/>
    </docblock>
  </method>
  <method name="testAssertStringEqualsNumeric" start="1322" end="1333" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEquals"/>
    </docblock>
  </method>
  <method name="testAssertStringEqualsNumeric2" start="1338" end="1341" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotEquals"/>
    </docblock>
  </method>
  <method name="testAssertFileExistsThrowsException" start="1347" end="1350" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertFileExists"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertFileExists" start="1355" end="1366" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertFileExists"/>
    </docblock>
  </method>
  <method name="testAssertFileNotExistsThrowsException" start="1372" end="1375" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertFileNotExists"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertFileNotExists" start="1380" end="1391" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertFileNotExists"/>
    </docblock>
  </method>
  <method name="testAssertObjectHasAttribute" start="1396" end="1409" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectHasAttribute"/>
    </docblock>
  </method>
  <method name="testAssertObjectNotHasAttribute" start="1414" end="1427" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectNotHasAttribute"/>
    </docblock>
  </method>
  <method name="testAssertNull" start="1432" end="1443" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNull"/>
    </docblock>
  </method>
  <method name="testAssertNotNull" start="1448" end="1459" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotNull"/>
    </docblock>
  </method>
  <method name="testAssertTrue" start="1464" end="1475" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertTrue"/>
    </docblock>
  </method>
  <method name="testAssertNotTrue" start="1480" end="1493" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotTrue"/>
    </docblock>
  </method>
  <method name="testAssertFalse" start="1498" end="1509" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertFalse"/>
    </docblock>
  </method>
  <method name="testAssertNotFalse" start="1514" end="1527" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotFalse"/>
    </docblock>
  </method>
  <method name="testAssertRegExpThrowsException" start="1533" end="1536" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertRegExp"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertRegExpThrowsException2" start="1542" end="1545" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertRegExp"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertNotRegExpThrowsException" start="1551" end="1554" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotRegExp"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertNotRegExpThrowsException2" start="1560" end="1563" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotRegExp"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertRegExp" start="1568" end="1579" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertRegExp"/>
    </docblock>
  </method>
  <method name="testAssertNotRegExp" start="1584" end="1595" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotRegExp"/>
    </docblock>
  </method>
  <method name="testAssertSame" start="1600" end="1616" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertSame"/>
    </docblock>
  </method>
  <method name="testAssertSame2" start="1621" end="1633" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertSame"/>
    </docblock>
  </method>
  <method name="testAssertNotSame" start="1638" end="1664" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotSame"/>
    </docblock>
  </method>
  <method name="testAssertNotSame2" start="1669" end="1681" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotSame"/>
    </docblock>
  </method>
  <method name="testAssertNotSameFailsNull" start="1686" end="1695" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotSame"/>
    </docblock>
  </method>
  <method name="testGreaterThan" start="1700" end="1711" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertGreaterThan"/>
    </docblock>
  </method>
  <method name="testAttributeGreaterThan" start="1716" end="1731" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeGreaterThan"/>
    </docblock>
  </method>
  <method name="testGreaterThanOrEqual" start="1736" end="1747" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertGreaterThanOrEqual"/>
    </docblock>
  </method>
  <method name="testAttributeGreaterThanOrEqual" start="1752" end="1767" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeGreaterThanOrEqual"/>
    </docblock>
  </method>
  <method name="testLessThan" start="1772" end="1783" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertLessThan"/>
    </docblock>
  </method>
  <method name="testAttributeLessThan" start="1788" end="1803" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeLessThan"/>
    </docblock>
  </method>
  <method name="testLessThanOrEqual" start="1808" end="1819" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertLessThanOrEqual"/>
    </docblock>
  </method>
  <method name="testAttributeLessThanOrEqual" start="1824" end="1839" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeLessThanOrEqual"/>
    </docblock>
  </method>
  <method name="testReadAttribute" start="1846" end="1855" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::readAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
    </docblock>
  </method>
  <method name="testReadAttribute2" start="1862" end="1869" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::readAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
    </docblock>
  </method>
  <method name="testReadAttribute3" start="1877" end="1880" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::readAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testReadAttribute4" start="1888" end="1891" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::readAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testReadAttribute5" start="1899" end="1902" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::readAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testReadAttributeIfAttributeNameIsNotValid" start="1910" end="1913" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::readAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetStaticAttributeRaisesExceptionForInvalidFirstArgument" start="1919" end="1922" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetStaticAttributeRaisesExceptionForInvalidFirstArgument2" start="1928" end="1931" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetStaticAttributeRaisesExceptionForInvalidSecondArgument" start="1937" end="1940" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetStaticAttributeRaisesExceptionForInvalidSecondArgument2" start="1946" end="1949" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetStaticAttributeRaisesExceptionForInvalidSecondArgument3" start="1955" end="1958" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetObjectAttributeRaisesExceptionForInvalidFirstArgument" start="1964" end="1967" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetObjectAttributeRaisesExceptionForInvalidSecondArgument" start="1973" end="1976" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetObjectAttributeRaisesExceptionForInvalidSecondArgument2" start="1982" end="1985" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetObjectAttributeRaisesExceptionForInvalidSecondArgument3" start="1991" end="1994" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testGetObjectAttributeWorksForInheritedAttributes" start="1999" end="2005" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::getObjectAttribute"/>
    </docblock>
  </method>
  <method name="testAssertPublicAttributeContains" start="2010" end="2023" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeContains"/>
    </docblock>
  </method>
  <method name="testAssertPublicAttributeContainsOnly" start="2028" end="2041" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeContainsOnly"/>
    </docblock>
  </method>
  <method name="testAssertPublicAttributeNotContains" start="2046" end="2059" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotContains"/>
    </docblock>
  </method>
  <method name="testAssertPublicAttributeNotContainsOnly" start="2064" end="2077" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotContainsOnly"/>
    </docblock>
  </method>
  <method name="testAssertProtectedAttributeContains" start="2082" end="2095" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeContains"/>
    </docblock>
  </method>
  <method name="testAssertProtectedAttributeNotContains" start="2100" end="2113" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotContains"/>
    </docblock>
  </method>
  <method name="testAssertPrivateAttributeContains" start="2118" end="2131" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeContains"/>
    </docblock>
  </method>
  <method name="testAssertPrivateAttributeNotContains" start="2136" end="2149" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotContains"/>
    </docblock>
  </method>
  <method name="testAssertAttributeContainsNonObject" start="2154" end="2167" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeContains"/>
    </docblock>
  </method>
  <method name="testAssertAttributeNotContainsNonObject" start="2172" end="2185" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotContains"/>
    </docblock>
  </method>
  <method name="testAssertPublicAttributeEquals" start="2190" end="2203" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeEquals"/>
    </docblock>
  </method>
  <method name="testAssertPublicAttributeNotEquals" start="2208" end="2221" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotEquals"/>
    </docblock>
  </method>
  <method name="testAssertPublicAttributeSame" start="2226" end="2239" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeSame"/>
    </docblock>
  </method>
  <method name="testAssertPublicAttributeNotSame" start="2244" end="2257" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotSame"/>
    </docblock>
  </method>
  <method name="testAssertProtectedAttributeEquals" start="2262" end="2275" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeEquals"/>
    </docblock>
  </method>
  <method name="testAssertProtectedAttributeNotEquals" start="2280" end="2293" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotEquals"/>
    </docblock>
  </method>
  <method name="testAssertPrivateAttributeEquals" start="2298" end="2311" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeEquals"/>
    </docblock>
  </method>
  <method name="testAssertPrivateAttributeNotEquals" start="2316" end="2329" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotEquals"/>
    </docblock>
  </method>
  <method name="testAssertPublicStaticAttributeEquals" start="2334" end="2345" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeEquals"/>
    </docblock>
  </method>
  <method name="testAssertPublicStaticAttributeNotEquals" start="2350" end="2361" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotEquals"/>
    </docblock>
  </method>
  <method name="testAssertProtectedStaticAttributeEquals" start="2366" end="2377" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeEquals"/>
    </docblock>
  </method>
  <method name="testAssertProtectedStaticAttributeNotEquals" start="2382" end="2393" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotEquals"/>
    </docblock>
  </method>
  <method name="testAssertPrivateStaticAttributeEquals" start="2398" end="2409" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeEquals"/>
    </docblock>
  </method>
  <method name="testAssertPrivateStaticAttributeNotEquals" start="2414" end="2425" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotEquals"/>
    </docblock>
  </method>
  <method name="testAssertClassHasAttributeThrowsException" start="2431" end="2434" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassHasAttributeThrowsException2" start="2440" end="2443" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassHasAttributeThrowsExceptionIfAttributeNameIsNotValid" start="2449" end="2452" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassNotHasAttributeThrowsException" start="2458" end="2461" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassNotHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassNotHasAttributeThrowsException2" start="2467" end="2470" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassNotHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassNotHasAttributeThrowsExceptionIfAttributeNameIsNotValid" start="2476" end="2479" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassNotHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassHasStaticAttributeThrowsException" start="2485" end="2488" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassHasStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassHasStaticAttributeThrowsException2" start="2494" end="2497" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassHasStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassHasStaticAttributeThrowsExceptionIfAttributeNameIsNotValid" start="2503" end="2506" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassHasStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassNotHasStaticAttributeThrowsException" start="2512" end="2515" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassNotHasStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassNotHasStaticAttributeThrowsException2" start="2521" end="2524" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassNotHasStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertClassNotHasStaticAttributeThrowsExceptionIfAttributeNameIsNotValid" start="2530" end="2533" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassNotHasStaticAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertObjectHasAttributeThrowsException" start="2539" end="2542" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertObjectHasAttributeThrowsException2" start="2548" end="2551" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertObjectHasAttributeThrowsExceptionIfAttributeNameIsNotValid" start="2557" end="2560" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertObjectNotHasAttributeThrowsException" start="2566" end="2569" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectNotHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertObjectNotHasAttributeThrowsException2" start="2575" end="2578" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectNotHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertObjectNotHasAttributeThrowsExceptionIfAttributeNameIsNotValid" start="2584" end="2587" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectNotHasAttribute"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testClassHasPublicAttribute" start="2592" end="2603" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassHasAttribute"/>
    </docblock>
  </method>
  <method name="testClassNotHasPublicAttribute" start="2608" end="2619" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassNotHasAttribute"/>
    </docblock>
  </method>
  <method name="testClassHasPublicStaticAttribute" start="2624" end="2635" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassHasStaticAttribute"/>
    </docblock>
  </method>
  <method name="testClassNotHasPublicStaticAttribute" start="2640" end="2651" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertClassNotHasStaticAttribute"/>
    </docblock>
  </method>
  <method name="testObjectHasPublicAttribute" start="2656" end="2669" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectHasAttribute"/>
    </docblock>
  </method>
  <method name="testObjectNotHasPublicAttribute" start="2674" end="2687" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectNotHasAttribute"/>
    </docblock>
  </method>
  <method name="testObjectHasOnTheFlyAttribute" start="2692" end="2706" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectHasAttribute"/>
    </docblock>
  </method>
  <method name="testObjectNotHasOnTheFlyAttribute" start="2711" end="2725" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectNotHasAttribute"/>
    </docblock>
  </method>
  <method name="testObjectHasProtectedAttribute" start="2730" end="2743" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectHasAttribute"/>
    </docblock>
  </method>
  <method name="testObjectNotHasProtectedAttribute" start="2748" end="2761" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectNotHasAttribute"/>
    </docblock>
  </method>
  <method name="testObjectHasPrivateAttribute" start="2766" end="2779" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectHasAttribute"/>
    </docblock>
  </method>
  <method name="testObjectNotHasPrivateAttribute" start="2784" end="2797" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertObjectNotHasAttribute"/>
    </docblock>
  </method>
  <method name="testAssertThatAttributeEquals" start="2804" end="2813" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::attribute"/>
      <covers value="PHPUnit_Framework_Assert::equalTo"/>
    </docblock>
  </method>
  <method name="testAssertThatAttributeEquals2" start="2821" end="2830" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::attribute"/>
      <covers value="PHPUnit_Framework_Assert::equalTo"/>
      <expectedexception value="PHPUnit_Framework_AssertionFailedError"/>
    </docblock>
  </method>
  <method name="testAssertThatAttributeEqualTo" start="2837" end="2843" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::attribute"/>
      <covers value="PHPUnit_Framework_Assert::equalTo"/>
    </docblock>
  </method>
  <method name="testAssertThatAnything" start="2849" end="2852" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::anything"/>
    </docblock>
  </method>
  <method name="testAssertThatIsTrue" start="2858" end="2861" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::isTrue"/>
    </docblock>
  </method>
  <method name="testAssertThatIsFalse" start="2867" end="2870" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::isFalse"/>
    </docblock>
  </method>
  <method name="testAssertThatIsJson" start="2876" end="2879" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::isJson"/>
    </docblock>
  </method>
  <method name="testAssertThatAnythingAndAnything" start="2886" end="2894" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::anything"/>
      <covers value="PHPUnit_Framework_Assert::logicalAnd"/>
    </docblock>
  </method>
  <method name="testAssertThatAnythingOrAnything" start="2901" end="2909" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::anything"/>
      <covers value="PHPUnit_Framework_Assert::logicalOr"/>
    </docblock>
  </method>
  <method name="testAssertThatAnythingXorNotAnything" start="2917" end="2926" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::anything"/>
      <covers value="PHPUnit_Framework_Assert::logicalNot"/>
      <covers value="PHPUnit_Framework_Assert::logicalXor"/>
    </docblock>
  </method>
  <method name="testAssertThatContains" start="2932" end="2935" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::contains"/>
    </docblock>
  </method>
  <method name="testAssertThatStringContains" start="2941" end="2944" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::stringContains"/>
    </docblock>
  </method>
  <method name="testAssertThatContainsOnly" start="2950" end="2953" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::containsOnly"/>
    </docblock>
  </method>
  <method name="testAssertThatContainsOnlyInstancesOf" start="2958" end="2961" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::containsOnlyInstancesOf"/>
    </docblock>
  </method>
  <method name="testAssertThatArrayHasKey" start="2967" end="2970" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::arrayHasKey"/>
    </docblock>
  </method>
  <method name="testAssertThatClassHasAttribute" start="2976" end="2982" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::classHasAttribute"/>
    </docblock>
  </method>
  <method name="testAssertThatClassHasStaticAttribute" start="2988" end="2994" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::classHasStaticAttribute"/>
    </docblock>
  </method>
  <method name="testAssertThatObjectHasAttribute" start="3000" end="3006" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::objectHasAttribute"/>
    </docblock>
  </method>
  <method name="testAssertThatEqualTo" start="3012" end="3015" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::equalTo"/>
    </docblock>
  </method>
  <method name="testAssertThatIdenticalTo" start="3021" end="3027" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::identicalTo"/>
    </docblock>
  </method>
  <method name="testAssertThatIsInstanceOf" start="3033" end="3036" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::isInstanceOf"/>
    </docblock>
  </method>
  <method name="testAssertThatIsType" start="3042" end="3045" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::isType"/>
    </docblock>
  </method>
  <method name="testAssertThatIsEmpty" start="3051" end="3054" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::isEmpty"/>
    </docblock>
  </method>
  <method name="testAssertThatFileExists" start="3060" end="3063" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::fileExists"/>
    </docblock>
  </method>
  <method name="testAssertThatGreaterThan" start="3069" end="3072" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::greaterThan"/>
    </docblock>
  </method>
  <method name="testAssertThatGreaterThanOrEqual" start="3078" end="3081" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::greaterThanOrEqual"/>
    </docblock>
  </method>
  <method name="testAssertThatLessThan" start="3087" end="3090" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::lessThan"/>
    </docblock>
  </method>
  <method name="testAssertThatLessThanOrEqual" start="3096" end="3099" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::lessThanOrEqual"/>
    </docblock>
  </method>
  <method name="testAssertThatMatchesRegularExpression" start="3105" end="3108" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::matchesRegularExpression"/>
    </docblock>
  </method>
  <method name="testAssertThatCallback" start="3114" end="3120" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::callback"/>
    </docblock>
  </method>
  <method name="testAssertThatCountOf" start="3126" end="3129" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertThat"/>
      <covers value="PHPUnit_Framework_Assert::countOf"/>
    </docblock>
  </method>
  <method name="testAssertFileEquals" start="3134" end="3151" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertFileEquals"/>
    </docblock>
  </method>
  <method name="testAssertFileNotEquals" start="3156" end="3173" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertFileNotEquals"/>
    </docblock>
  </method>
  <method name="testAssertStringEqualsFile" start="3178" end="3195" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringEqualsFile"/>
    </docblock>
  </method>
  <method name="testAssertStringNotEqualsFile" start="3200" end="3217" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringNotEqualsFile"/>
    </docblock>
  </method>
  <method name="testAssertStringStartsWithThrowsException" start="3223" end="3226" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringStartsWith"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringStartsWithThrowsException2" start="3232" end="3235" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringStartsWith"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringStartsNotWithThrowsException" start="3241" end="3244" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringStartsNotWith"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringStartsNotWithThrowsException2" start="3250" end="3253" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringStartsNotWith"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringEndsWithThrowsException" start="3259" end="3262" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringEndsWith"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringEndsWithThrowsException2" start="3268" end="3271" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringEndsWith"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringEndsNotWithThrowsException" start="3277" end="3280" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringEndsNotWith"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringEndsNotWithThrowsException2" start="3286" end="3289" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringEndsNotWith"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringStartsWith" start="3294" end="3305" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringStartsWith"/>
    </docblock>
  </method>
  <method name="testAssertStringStartsNotWith" start="3310" end="3321" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringStartsNotWith"/>
    </docblock>
  </method>
  <method name="testAssertStringEndsWith" start="3326" end="3337" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringEndsWith"/>
    </docblock>
  </method>
  <method name="testAssertStringEndsNotWith" start="3342" end="3353" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringEndsNotWith"/>
    </docblock>
  </method>
  <method name="testAssertStringMatchesFormatRaisesExceptionForInvalidFirstArgument" start="3359" end="3362" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringMatchesFormat"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringMatchesFormatRaisesExceptionForInvalidSecondArgument" start="3368" end="3371" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringMatchesFormat"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringMatchesFormat" start="3376" end="3379" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringMatchesFormat"/>
    </docblock>
  </method>
  <method name="testAssertStringMatchesFormatFailure" start="3385" end="3388" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringMatchesFormat"/>
      <expectedexception value="PHPUnit_Framework_AssertionFailedError"/>
    </docblock>
  </method>
  <method name="testAssertStringNotMatchesFormatRaisesExceptionForInvalidFirstArgument" start="3394" end="3397" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringNotMatchesFormat"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringNotMatchesFormatRaisesExceptionForInvalidSecondArgument" start="3403" end="3406" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringNotMatchesFormat"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringNotMatchesFormat" start="3411" end="3422" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringNotMatchesFormat"/>
    </docblock>
  </method>
  <method name="testAssertEmpty" start="3427" end="3438" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertEmpty"/>
    </docblock>
  </method>
  <method name="testAssertNotEmpty" start="3443" end="3454" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotEmpty"/>
    </docblock>
  </method>
  <method name="testAssertAttributeEmpty" start="3459" end="3474" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeEmpty"/>
    </docblock>
  </method>
  <method name="testAssertAttributeNotEmpty" start="3479" end="3494" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotEmpty"/>
    </docblock>
  </method>
  <method name="testMarkTestIncomplete" start="3499" end="3510" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::markTestIncomplete"/>
    </docblock>
  </method>
  <method name="testMarkTestSkipped" start="3515" end="3526" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::markTestSkipped"/>
    </docblock>
  </method>
  <method name="testAssertCount" start="3531" end="3542" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertCount"/>
    </docblock>
  </method>
  <method name="testAssertCountTraversable" start="3547" end="3558" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertCount"/>
    </docblock>
  </method>
  <method name="testAssertCountThrowsExceptionIfExpectedCountIsNoInteger" start="3563" end="3574" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertCount"/>
    </docblock>
  </method>
  <method name="testAssertCountThrowsExceptionIfElementIsNotCountable" start="3579" end="3590" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertCount"/>
    </docblock>
  </method>
  <method name="testAssertAttributeCount" start="3595" end="3601" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeCount"/>
    </docblock>
  </method>
  <method name="testAssertNotCount" start="3606" end="3617" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotCount"/>
    </docblock>
  </method>
  <method name="testAssertNotCountThrowsExceptionIfExpectedCountIsNoInteger" start="3623" end="3626" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotCount"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertNotCountThrowsExceptionIfElementIsNotCountable" start="3632" end="3635" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotCount"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertAttributeNotCount" start="3640" end="3646" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotCount"/>
    </docblock>
  </method>
  <method name="testAssertSameSize" start="3651" end="3662" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertSameSize"/>
    </docblock>
  </method>
  <method name="testAssertSameSizeThrowsExceptionIfExpectedIsNotCountable" start="3667" end="3678" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertSameSize"/>
    </docblock>
  </method>
  <method name="testAssertSameSizeThrowsExceptionIfActualIsNotCountable" start="3683" end="3694" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertSameSize"/>
    </docblock>
  </method>
  <method name="testAssertNotSameSize" start="3699" end="3710" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotSameSize"/>
    </docblock>
  </method>
  <method name="testAssertNotSameSizeThrowsExceptionIfExpectedIsNotCountable" start="3716" end="3719" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotSameSize"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertNotSameSizeThrowsExceptionIfActualIsNotCountable" start="3725" end="3728" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotSameSize"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertJsonRaisesExceptionForInvalidArgument" start="3734" end="3737" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJson"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertJson" start="3742" end="3745" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJson"/>
    </docblock>
  </method>
  <method name="testAssertJsonStringEqualsJsonString" start="3750" end="3757" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringEqualsJsonString"/>
    </docblock>
  </method>
  <method name="testAssertJsonStringEqualsJsonStringErrorRaised" start="3763" end="3771" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <dataprovider value="validInvalidJsonDataprovider"/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringEqualsJsonString"/>
    </docblock>
    <parameter name="expected" byreference="false" type="{unknown}"/>
    <parameter name="actual" byreference="false" type="{unknown}"/>
  </method>
  <method name="testAssertJsonStringNotEqualsJsonString" start="3776" end="3783" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringNotEqualsJsonString"/>
    </docblock>
  </method>
  <method name="testAssertJsonStringNotEqualsJsonStringErrorRaised" start="3789" end="3797" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <dataprovider value="validInvalidJsonDataprovider"/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringNotEqualsJsonString"/>
    </docblock>
    <parameter name="expected" byreference="false" type="{unknown}"/>
    <parameter name="actual" byreference="false" type="{unknown}"/>
  </method>
  <method name="testAssertJsonStringEqualsJsonFile" start="3802" end="3808" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringEqualsJsonFile"/>
    </docblock>
  </method>
  <method name="testAssertJsonStringEqualsJsonFileExpectingExpectationFailedException" start="3813" end="3830" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringEqualsJsonFile"/>
    </docblock>
  </method>
  <method name="testAssertJsonStringEqualsJsonFileExpectingException" start="3835" end="3844" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringEqualsJsonFile"/>
    </docblock>
  </method>
  <method name="testAssertJsonStringNotEqualsJsonFile" start="3849" end="3855" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringNotEqualsJsonFile"/>
    </docblock>
  </method>
  <method name="testAssertJsonStringNotEqualsJsonFileExpectingException" start="3860" end="3869" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonStringNotEqualsJsonFile"/>
    </docblock>
  </method>
  <method name="testAssertJsonFileNotEqualsJsonFile" start="3874" end="3880" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonFileNotEqualsJsonFile"/>
    </docblock>
  </method>
  <method name="testAssertJsonFileEqualsJsonFile" start="3885" end="3890" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertJsonFileEqualsJsonFile"/>
    </docblock>
  </method>
  <method name="testAssertInstanceOf" start="3895" end="3906" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertInstanceOf"/>
    </docblock>
  </method>
  <method name="testAssertInstanceOfThrowsExceptionForInvalidArgument" start="3912" end="3915" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertInstanceOf"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertAttributeInstanceOf" start="3920" end="3926" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeInstanceOf"/>
    </docblock>
  </method>
  <method name="testAssertNotInstanceOf" start="3931" end="3942" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotInstanceOf"/>
    </docblock>
  </method>
  <method name="testAssertNotInstanceOfThrowsExceptionForInvalidArgument" start="3948" end="3951" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotInstanceOf"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertAttributeNotInstanceOf" start="3956" end="3962" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotInstanceOf"/>
    </docblock>
  </method>
  <method name="testAssertInternalType" start="3967" end="3978" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertInternalType"/>
    </docblock>
  </method>
  <method name="testAssertInternalTypeDouble" start="3983" end="3994" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertInternalType"/>
    </docblock>
  </method>
  <method name="testAssertInternalTypeThrowsExceptionForInvalidArgument" start="4000" end="4003" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertInternalType"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertAttributeInternalType" start="4008" end="4014" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeInternalType"/>
    </docblock>
  </method>
  <method name="testAssertNotInternalType" start="4019" end="4030" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotInternalType"/>
    </docblock>
  </method>
  <method name="testAssertNotInternalTypeThrowsExceptionForInvalidArgument" start="4036" end="4039" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertNotInternalType"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertAttributeNotInternalType" start="4044" end="4050" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertAttributeNotInternalType"/>
    </docblock>
  </method>
  <method name="testAssertStringMatchesFormatFileThrowsExceptionForInvalidArgument" start="4056" end="4059" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringMatchesFormatFile"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringMatchesFormatFileThrowsExceptionForInvalidArgument2" start="4065" end="4068" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringMatchesFormatFile"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringMatchesFormatFile" start="4073" end="4084" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringMatchesFormatFile"/>
    </docblock>
  </method>
  <method name="testAssertStringNotMatchesFormatFileThrowsExceptionForInvalidArgument" start="4090" end="4093" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringNotMatchesFormatFile"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringNotMatchesFormatFileThrowsExceptionForInvalidArgument2" start="4099" end="4102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringNotMatchesFormatFile"/>
      <expectedexception value="PHPUnit_Framework_Exception"/>
    </docblock>
  </method>
  <method name="testAssertStringNotMatchesFormatFile" start="4107" end="4118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="PHPUnit_Framework_Assert::assertStringNotMatchesFormatFile"/>
    </docblock>
  </method>
  <method name="validInvalidJsonDataprovider" start="4123" end="4129" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="array"/>
    </docblock>
  </method>
</class>
