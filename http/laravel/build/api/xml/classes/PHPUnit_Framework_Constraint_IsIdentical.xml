<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Framework_Constraint_IsIdentical" namespace="" name="PHPUnit_Framework_Constraint_IsIdentical" abstract="false" final="false" start="24" end="132">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Framework/Constraint" file="IsIdentical.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Framework/Constraint/IsIdentical.php" size="3797" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="216534c1286ae80d5bc2541d04daaf78dd25cba9" relative="vendor/phpunit/phpunit/src/Framework/Constraint/IsIdentical.php"/>
  <docblock>
    <description compact="Constraint that asserts that one value is identical to another.">Identical check is performed with PHP's === operator, the operator is
explained in detail at
{@url http://www.php.net/manual/en/types.comparisons.php}.
Two values are identical if they have the same value and are of the same
type.

The expected value is passed in the constructor.</description>
    <since value="Class available since Release 3.0.0"/>
  </docblock>
  <extends full="PHPUnit_Framework_Constraint" namespace="" name="PHPUnit_Framework_Constraint"/>
  <constant type="float" name="EPSILON" value="0.0000000001">
    <docblock>
      <description/>
      <var type="float"/>
    </docblock>
  </constant>
  <member name="value" visibility="protected" line="34">
    <docblock>
      <description/>
      <var type="mixed"/>
    </docblock>
  </member>
  <constructor name="__construct" start="39" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="mixed" variable="$value"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="evaluate" start="63" end="92" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Evaluates the constraint for parameter $other">If $returnResult is set to false (the default), an exception is thrown
in case of a failure. null is returned otherwise.

If $returnResult is true, the result of the evaluation is returned as
a boolean value instead: true in case of success, false in case of a
failure.</description>
      <param description="Value or object to evaluate." type="mixed" variable="$other"/>
      <param description="Additional information about the test" type="string" variable="$description"/>
      <param description="Whether to return a result or throw an exception" type="object" variable="$returnResult">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="mixed"/>
      <throws type="object">
        <type full="PHPUnit_Framework_ExpectationFailedException" namespace="" name="PHPUnit_Framework_ExpectationFailedException"/>
      </throws>
    </docblock>
    <parameter name="other" byreference="false" type="{unknown}"/>
    <parameter name="description" byreference="false" type="string" default="''"/>
    <parameter name="returnResult" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="failureDescription" start="104" end="115" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns the description of the failure">The beginning of failure messages is "Failed asserting that" in most
cases. This method should return the second part of that sentence.</description>
      <param description="Evaluated value or object." type="mixed" variable="$other"/>
      <return type="string"/>
    </docblock>
    <parameter name="other" byreference="false" type="{unknown}"/>
  </method>
  <method name="toString" start="122" end="131" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a string representation of the constraint."/>
      <return type="string"/>
    </docblock>
  </method>
</class>
