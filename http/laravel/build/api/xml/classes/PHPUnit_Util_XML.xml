<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Util_XML" namespace="" name="PHPUnit_Util_XML" abstract="false" final="false" start="16" end="932">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Util" file="XML.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Util/XML.php" size="29688" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="4c131fc02261b2123c4187d7f8f38024d51b5dd5" relative="vendor/phpunit/phpunit/src/Util/XML.php"/>
  <docblock>
    <description compact="XML helpers."/>
    <since value="Class available since Release 3.2.0"/>
  </docblock>
  <method name="prepareString" start="30" end="41" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Escapes a string for the use in XML documents Any Unicode character is allowed, excluding the surrogate blocks, FFFE, and FFFF (not even as character reference).">See http://www.w3.org/TR/xml/#charsets</description>
      <param type="string" variable="$string"/>
      <return type="string"/>
      <since value="Method available since Release 3.4.6"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
  </method>
  <method name="loadFile" start="55" end="71" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Loads an XML (or HTML) file into a DOMDocument object."/>
      <param type="string" variable="$filename"/>
      <param type="object" variable="$isHtml">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param type="object" variable="$xinclude">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param type="object" variable="$strict">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="object">
        <type full="DOMDocument" namespace="" name="DOMDocument"/>
      </return>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="filename" byreference="false" type="{unknown}"/>
    <parameter name="isHtml" byreference="false" type="boolean" default="false"/>
    <parameter name="xinclude" byreference="false" type="boolean" default="false"/>
    <parameter name="strict" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="load" start="97" end="157" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Load an $actual document into a DOMDocument.  This is called from the selector assertions.">If $actual is already a DOMDocument, it is returned with
no changes.  Otherwise, $actual is loaded into a new DOMDocument
as either HTML or XML, depending on the value of $isHtml. If $isHtml is
false and $xinclude is true, xinclude is performed on the loaded
DOMDocument.

Note: prior to PHPUnit 3.3.0, this method loaded a file and
not a string as it currently does.  To load a file into a
DOMDocument, use loadFile() instead.</description>
      <param type="object" variable="$actual">
        <type full="string|DOMDocument" namespace="" name="string|DOMDocument"/>
      </param>
      <param type="object" variable="$isHtml">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param type="string" variable="$filename"/>
      <param type="object" variable="$xinclude">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param type="object" variable="$strict">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="object">
        <type full="DOMDocument" namespace="" name="DOMDocument"/>
      </return>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="actual" byreference="false" type="{unknown}"/>
    <parameter name="isHtml" byreference="false" type="boolean" default="false"/>
    <parameter name="filename" byreference="false" type="string" default="''"/>
    <parameter name="xinclude" byreference="false" type="boolean" default="false"/>
    <parameter name="strict" byreference="false" type="boolean" default="false"/>
    <inline>
      <comment value="Required for XInclude on Windows." line="103"/>
    </inline>
  </method>
  <method name="nodeToText" start="166" end="179" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$node">
        <type full="DOMNode" namespace="" name="DOMNode"/>
      </param>
      <return type="string"/>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="DOMNode" namespace="" name="DOMNode"/>
    </parameter>
  </method>
  <method name="removeCharacterDataNodes" start="186" end="195" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$node">
        <type full="DOMNode" namespace="" name="DOMNode"/>
      </param>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="DOMNode" namespace="" name="DOMNode"/>
    </parameter>
  </method>
  <method name="xmlToVariable" start="206" end="265" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="&quot;Convert&quot; a DOMElement object into a PHP variable."/>
      <param type="object" variable="$element">
        <type full="DOMElement" namespace="" name="DOMElement"/>
      </param>
      <return type="mixed"/>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="element" byreference="false" type="object">
      <type full="DOMElement" namespace="" name="DOMElement"/>
    </parameter>
  </method>
  <method name="assertValidKeys" start="279" end="312" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Validate list of keys in the associative array."/>
      <param type="array" variable="$hash"/>
      <param type="array" variable="$validKeys"/>
      <return type="array"/>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="hash" byreference="false" type="array"/>
    <parameter name="validKeys" byreference="false" type="array"/>
    <inline>
      <comment value="Normalize validation keys so that we can use both indexed and" line="283"/>
      <comment value="associative arrays." line="284"/>
      <comment value="Check for invalid keys." line="291"/>
      <comment value="Add default values for any valid keys that are empty." line="304"/>
    </inline>
  </method>
  <method name="convertSelectToTag" start="325" end="440" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Parse a CSS selector into an associative array suitable for use with findNodes()."/>
      <param type="string" variable="$selector"/>
      <param type="mixed" variable="$content"/>
      <return type="array"/>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="selector" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="boolean" default="true"/>
    <inline>
      <comment value="substitute spaces within attribute value" line="329"/>
    </inline>
  </method>
  <method name="cssSelect" start="463" end="470" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Parse an $actual document and return an array of DOMNodes matching the CSS $selector.  If an error occurs, it will return false.">To only return nodes containing a certain content, give
the $content to match as a string.  Otherwise, setting
$content to true will return all nodes matching $selector.

The $actual document may be a DOMDocument or a string
containing XML or HTML, identified by $isHtml.</description>
      <param type="array" variable="$selector"/>
      <param type="string" variable="$content"/>
      <param type="mixed" variable="$actual"/>
      <param type="object" variable="$isHtml">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="object">
        <type full="bool|array" namespace="" name="bool|array"/>
      </return>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="selector" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="{unknown}"/>
    <parameter name="actual" byreference="false" type="{unknown}"/>
    <parameter name="isHtml" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="findNodes" start="483" end="854" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Parse out the options from the tag using DOM object tree."/>
      <param type="object" variable="$dom">
        <type full="DOMDocument" namespace="" name="DOMDocument"/>
      </param>
      <param type="array" variable="$options"/>
      <param type="object" variable="$isHtml">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="array"/>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="dom" byreference="false" type="object">
      <type full="DOMDocument" namespace="" name="DOMDocument"/>
    </parameter>
    <parameter name="options" byreference="false" type="array"/>
    <parameter name="isHtml" byreference="false" type="boolean" default="true"/>
    <inline>
      <comment value="find the element by id" line="493"/>
      <comment value="find the element by a tag type" line="504"/>
      <comment value="filter by attributes" line="564"/>
      <comment value="filter by content" line="616"/>
      <comment value="filter by parent node" line="649"/>
      <comment value="filter by child node" line="670"/>
      <comment value="filter by adjacent-sibling" line="693"/>
      <comment value="filter by ancestor" line="725"/>
      <comment value="filter by descendant" line="750"/>
      <comment value="filter by children" line="773"/>
      <comment value="return the first node that matches all criteria" line="852"/>
    </inline>
  </method>
  <method name="getDescendants" start="865" end="881" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Recursively get flat array of all descendants of this node."/>
      <param type="object" variable="$node">
        <type full="DOMNode" namespace="" name="DOMNode"/>
      </param>
      <return type="array"/>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="DOMNode" namespace="" name="DOMNode"/>
    </parameter>
  </method>
  <method name="getElementsByCaseInsensitiveTagName" start="893" end="902" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Gets elements by case insensitive tagname."/>
      <param type="object" variable="$dom">
        <type full="DOMDocument" namespace="" name="DOMDocument"/>
      </param>
      <param type="string" variable="$tag"/>
      <return type="object">
        <type full="DOMNodeList" namespace="" name="DOMNodeList"/>
      </return>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="dom" byreference="false" type="object">
      <type full="DOMDocument" namespace="" name="DOMDocument"/>
    </parameter>
    <parameter name="tag" byreference="false" type="{unknown}"/>
  </method>
  <method name="getNodeText" start="913" end="931" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Get the text value of this node's child text node."/>
      <param type="object" variable="$node">
        <type full="DOMNode" namespace="" name="DOMNode"/>
      </param>
      <return type="string"/>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="DOMNode" namespace="" name="DOMNode"/>
    </parameter>
  </method>
</class>
