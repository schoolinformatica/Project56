<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Mockery\CountValidator\CountValidatorAbstract" namespace="Mockery\CountValidator" name="CountValidatorAbstract" abstract="true" final="false" start="23" end="70">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mockery/mockery/library/Mockery/CountValidator" file="CountValidatorAbstract.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mockery/mockery/library/Mockery/CountValidator/CountValidatorAbstract.php" size="1695" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="a33eaf8b3e6f1c2a4c30175b64957b560f243f91" relative="vendor/mockery/mockery/library/Mockery/CountValidator/CountValidatorAbstract.php"/>
  <member name="_expectation" type="{unknown}" default="" constant="null" visibility="protected" line="31">
    <docblock>
      <description compact="Expectation for which this validator is assigned"/>
      <var type="object">
        <type full="\Mockery\Expectation" namespace="\Mockery" name="Expectation"/>
      </var>
    </docblock>
  </member>
  <member name="_limit" type="{unknown}" default="" constant="null" visibility="protected" line="38">
    <docblock>
      <description compact="Call count limit"/>
      <var type="int"/>
    </docblock>
  </member>
  <constructor name="__construct" start="46" end="50" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set Expectation object and upper call limit"/>
      <param type="object" variable="$expectation">
        <type full="\Mockery\Expectation" namespace="\Mockery" name="Expectation"/>
      </param>
      <param type="int" variable="$limit"/>
    </docblock>
    <parameter name="expectation" byreference="false" type="object">
      <type full="Mockery\Expectation" namespace="Mockery" name="Expectation"/>
    </parameter>
    <parameter name="limit" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="isEligible" start="58" end="61" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if the validator can accept an additional nth call"/>
      <param type="int" variable="$n"/>
      <return type="object">
        <type full="Mockery\CountValidator\bool" namespace="Mockery\CountValidator" name="bool"/>
      </return>
    </docblock>
    <parameter name="n" byreference="false" type="{unknown}"/>
  </method>
  <method name="validate" start="69" end="69" abstract="true" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Validate the call count against this validator"/>
      <param type="int" variable="$n"/>
      <return type="object">
        <type full="Mockery\CountValidator\bool" namespace="Mockery\CountValidator" name="bool"/>
      </return>
    </docblock>
    <parameter name="n" byreference="false" type="{unknown}"/>
  </method>
</class>
