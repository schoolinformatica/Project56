<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Database\Eloquent\Relations\MorphOneOrMany" namespace="Illuminate\Database\Eloquent\Relations" name="MorphOneOrMany" abstract="true" final="false" start="8" end="233">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations" file="MorphOneOrMany.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/MorphOneOrMany.php" size="6438" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="050d37cc7ce9bd679ce7b10b74ae1cd19db481f2" relative="vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/MorphOneOrMany.php"/>
  <extends full="Illuminate\Database\Eloquent\Relations\HasOneOrMany" namespace="Illuminate\Database\Eloquent\Relations" name="HasOneOrMany"/>
  <member name="morphType" visibility="protected" line="15">
    <docblock>
      <description compact="The foreign key type for the relationship."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="morphClass" visibility="protected" line="22">
    <docblock>
      <description compact="The class name of the parent model."/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="34" end="41" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new morph one or many relationship instance."/>
      <param type="object" variable="$query">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <param type="object" variable="$parent">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </param>
      <param type="string" variable="$type"/>
      <param type="string" variable="$id"/>
      <param type="string" variable="$localKey"/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
    <parameter name="query" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
    <parameter name="parent" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Model" namespace="Illuminate\Database\Eloquent" name="Model"/>
    </parameter>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="localKey" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="addConstraints" start="48" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the base constraints on the relation query."/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="getRelationCountQuery" start="64" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the relationship count query."/>
      <param type="object" variable="$query">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <param type="object" variable="$parent">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Builder" namespace="\Illuminate\Database\Eloquent" name="Builder"/>
      </return>
    </docblock>
    <parameter name="query" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
    <parameter name="parent" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Builder" namespace="Illuminate\Database\Eloquent" name="Builder"/>
    </parameter>
  </method>
  <method name="addEagerConstraints" start="77" end="82" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the constraints for an eager load of the relation."/>
      <param type="array" variable="$models"/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
    <parameter name="models" byreference="false" type="array"/>
  </method>
  <method name="save" start="90" end="95" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Attach a model instance to the parent model."/>
      <param type="object" variable="$model">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="model" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Model" namespace="Illuminate\Database\Eloquent" name="Model"/>
    </parameter>
  </method>
  <method name="findOrNew" start="104" end="116" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Find a related model by its primary key or return new instance of the related model."/>
      <param type="mixed" variable="$id"/>
      <param type="array" variable="$columns"/>
      <return type="object">
        <type full="\Illuminate\Support\Collection|\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Support\Collection|\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="columns" byreference="false" type="array" default=""/>
  </method>
  <method name="firstOrNew" start="124" end="136" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the first related model record matching the attributes or instantiate it."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="firstOrCreate" start="144" end="151" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the first related record matching the attributes or create it."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="updateOrCreate" start="160" end="169" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create or update a related record matching the attributes, and fill it with values."/>
      <param type="array" variable="$attributes"/>
      <param type="array" variable="$values"/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
    <parameter name="values" byreference="false" type="array" default=""/>
  </method>
  <method name="create" start="177" end="189" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new instance of the related model."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
    <inline>
      <comment value="When saving a polymorphic relationship, we need to set not only the foreign" line="181"/>
      <comment value="key, but also the foreign key type, which is typically the class name of" line="182"/>
      <comment value="the parent model. This makes the polymorphic item unique in the table." line="183"/>
    </inline>
  </method>
  <method name="setForeignAttributesForCreate" start="197" end="202" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Set the foreign ID and type for creating a related model."/>
      <param type="object" variable="$model">
        <type full="\Illuminate\Database\Eloquent\Model" namespace="\Illuminate\Database\Eloquent" name="Model"/>
      </param>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\Relations\void" namespace="Illuminate\Database\Eloquent\Relations" name="void"/>
      </return>
    </docblock>
    <parameter name="model" byreference="false" type="object">
      <type full="Illuminate\Database\Eloquent\Model" namespace="Illuminate\Database\Eloquent" name="Model"/>
    </parameter>
  </method>
  <method name="getMorphType" start="209" end="212" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the foreign key &quot;type&quot; name."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getPlainMorphType" start="219" end="222" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the plain morph type name without the table."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getMorphClass" start="229" end="232" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the class name of the parent model."/>
      <return type="string"/>
    </docblock>
  </method>
</class>
