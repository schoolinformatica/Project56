<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ContainerTest" namespace="" name="ContainerTest" abstract="false" final="false" start="25" end="1276">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mockery/mockery/tests/Mockery" file="ContainerTest.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mockery/mockery/tests/Mockery/ContainerTest.php" size="51365" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="a62e0f31ee4ff484c2e40ba65ae9bc90ee29d1cf" relative="vendor/mockery/mockery/tests/Mockery/ContainerTest.php"/>
  <extends full="Mockery\Adapter\Phpunit\MockeryTestCase" namespace="Mockery\Adapter\Phpunit" name="MockeryTestCase"/>
  <member name="container" visibility="private" line="29">
    <docblock>
      <description compact="@var Mockery\Container"/>
    </docblock>
  </member>
  <method name="setup" start="31" end="34" abstract="false" final="false" static="false" visibility="public"/>
  <method name="teardown" start="36" end="39" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSimplestMockCreation" start="41" end="46" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetKeyOfDemeterMockShouldReturnKeyWhenMatchingMock" start="48" end="56" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetKeyOfDemeterMockShouldReturnNullWhenNoMatchingMock" start="57" end="68" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNamedMocksAddNameToExceptions" start="71" end="80" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSimpleMockWithArrayDefs" start="82" end="87" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSimpleMockWithArrayDefsCanBeOverridden" start="89" end="100" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="eg. In shared test setup" line="91"/>
      <comment value="and then overridden in one test" line="94"/>
    </inline>
  </method>
  <method name="testNamedMockWithArrayDefs" start="102" end="112" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNamedMockWithArrayDefsCanBeOverridden" start="114" end="129" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="eg. In shared test setup" line="116"/>
      <comment value="and then overridden in one test" line="119"/>
    </inline>
  </method>
  <method name="testNamedMockMultipleInterfaces" start="131" end="143" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNamedMockWithConstructorArgs" start="145" end="151" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNamedMockWithConstructorArgsAndArrayDefs" start="153" end="162" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNamedMockWithConstructorArgsWithInternalCallToMockedMethod" start="164" end="169" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNamedMockWithConstructorArgsButNoQuickDefsShouldLeaveConstructorIntact" start="171" end="176" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNamedMockWithShouldDeferMissing" start="178" end="185" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testNamedMockWithShouldDeferMissingThrowsIfNotAvailable" start="190" end="195" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="BadMethodCallException"/>
    </docblock>
  </method>
  <method name="testMockingAKnownConcreteClassSoMockInheritsClassType" start="197" end="203" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingAKnownUserClassSoMockInheritsClassType" start="205" end="209" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingAConcreteObjectCreatesAPartialWithoutError" start="211" end="217" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCreatingAPartialAllowsDynamicExpectationsAndPassesThroughUnexpectedMethods" start="219" end="226" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCreatingAPartialAllowsExpectationsToInterceptCallsToImplementedMethods" start="228" end="235" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testBlockForwardingToPartialObject" start="237" end="241" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testPartialWithArrayDefs" start="243" end="247" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testPassingClosureAsFinalParameterUsedToDefineExpectations" start="249" end="255" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingAKnownConcreteFinalClassThrowsErrors_OnlyPartialMocksCanMockFinalElements" start="260" end="263" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testMockingAKnownConcreteClassWithFinalMethodsThrowsNoException" start="265" end="268" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testFinalClassesCanBePartialMocks" start="273" end="279" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="finalclass"/>
    </docblock>
  </method>
  <method name="testSplClassWithFinalMethodsCanBeMocked" start="281" end="287" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testSplClassWithFinalMethodsCanBeMockedMultipleTimes" start="289" end="296" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClassesWithFinalMethodsCanBeProxyPartialMocks" start="298" end="305" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClassesWithFinalMethodsCanBeProperPartialMocks" start="307" end="314" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClassesWithFinalMethodsCanBeProperPartialMocksButFinalMethodsNotPartialed" start="316" end="322" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="partial expectation ignored - will fail callcount assertion" line="320"/>
    </inline>
  </method>
  <method name="testSplfileinfoClassMockPassesUserExpectations" start="324" end="331" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockInterface" start="333" end="337" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockSpl" start="339" end="343" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockInterfaceWithAbstractMethod" start="345" end="351" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockAbstractWithAbstractProtectedMethod" start="353" end="357" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockInterfaceWithPublicStaticMethod" start="359" end="363" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockClassWithConstructor" start="365" end="369" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockClassWithConstructorNeedingClassArgs" start="371" end="375" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanPartiallyMockANormalClass" start="380" end="387" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="partial"/>
    </docblock>
  </method>
  <method name="testCanPartiallyMockAnAbstractClass" start="392" end="399" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="partial"/>
    </docblock>
  </method>
  <method name="testCanPartiallyMockANormalClassWith2Methods" start="404" end="413" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="partial"/>
    </docblock>
  </method>
  <method name="testCanPartiallyMockAnAbstractClassWith2Methods" start="418" end="427" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="partial"/>
    </docblock>
  </method>
  <method name="testThrowsExceptionIfSettingExpectationForNonMockedMethodOfPartialMock" start="433" end="439" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
      <group value="partial"/>
    </docblock>
  </method>
  <method name="testThrowsExceptionIfClassOrInterfaceForPartialMockDoesNotExist" start="445" end="448" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
      <group value="partial"/>
    </docblock>
  </method>
  <method name="testCanMockClassContainingMagicCallMethod" start="453" end="457" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/4"/>
    </docblock>
  </method>
  <method name="testCanMockClassContainingMagicCallMethodWithoutTypeHinting" start="462" end="466" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/4"/>
    </docblock>
  </method>
  <method name="testCanMockClassContainingAPublicWakeupMethod" start="471" end="475" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/14"/>
    </docblock>
  </method>
  <method name="testCanMockClassUsingMagicCallMethodsInPlaceOfNormalMethods" start="480" end="485" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/18"/>
    </docblock>
  </method>
  <method name="testCanPartialMockObjectUsingMagicCallMethodsInPlaceOfNormalMethods" start="490" end="495" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/18"/>
    </docblock>
  </method>
  <method name="testCanMockClassWhereMethodHasReferencedParameter" start="500" end="503" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/13"/>
    </docblock>
  </method>
  <method name="testCanPartiallyMockObjectWhereMethodHasReferencedParameter" start="508" end="511" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/13"/>
    </docblock>
  </method>
  <method name="testMockingAKnownConcreteClassCanBeGrantedAnArbitraryClassType" start="516" end="522" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/11"/>
    </docblock>
  </method>
  <method name="testCanMockMultipleInterfaces" start="527" end="532" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/15"/>
    </docblock>
  </method>
  <method name="testMockingMultipleInterfacesThrowsExceptionWhenGivenNonExistingClassOrInterface" start="537" end="542" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\Exception"/>
    </docblock>
  </method>
  <method name="testCanMockClassAndApplyMultipleInterfaces" start="547" end="553" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/15"/>
    </docblock>
  </method>
  <method name="testCanMockStaticMethods" start="562" end="569" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/7">Noted: We could complicate internally, but a blind class is better built
with a real class noted up front (stdClass is a perfect choice it is
behaviourless). Fine, it's a muddle - but we need to draw a line somewhere.</group>
    </docblock>
  </method>
  <method name="testMockedStaticMethodsObeyMethodCounting" start="575" end="582" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/7"/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testMockedStaticThrowsExceptionWhenMethodDoesNotExist" start="587" end="593" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="BadMethodCallException"/>
    </docblock>
  </method>
  <method name="testMockingAllowsPublicPropertyStubbingOnRealClass" start="598" end="604" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/17"/>
    </docblock>
  </method>
  <method name="testMockingAllowsPublicPropertyStubbingOnNamedMock" start="609" end="615" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/17"/>
    </docblock>
  </method>
  <method name="testMockingAllowsPublicPropertyStubbingOnPartials" start="620" end="626" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/17"/>
    </docblock>
  </method>
  <method name="testMockingDoesNotStubNonStubbedPropertiesOnPartials" start="631" end="636" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/17"/>
    </docblock>
  </method>
  <method name="testCreationOfInstanceMock" start="638" end="642" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testInstantiationOfInstanceMock" start="644" end="651" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testInstantiationOfInstanceMockImportsExpectations" start="653" end="661" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testInstantiationOfInstanceMocksIgnoresVerificationOfOriginMock" start="663" end="670" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testInstantiationOfInstanceMocksAddsThemToContainerForVerification" start="675" end="683" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testInstantiationOfInstanceMocksDoesNotHaveCountValidatorCrossover" start="685" end="696" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testInstantiationOfInstanceMocksDoesNotHaveCountValidatorCrossover2" start="701" end="711" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\Mockery\CountValidator\Exception"/>
    </docblock>
  </method>
  <method name="testCreationOfInstanceMockWithFullyQualifiedName" start="713" end="717" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testInstanceMocksShouldIgnoreMissing" start="719" end="729" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMethodParamsPassedByReferenceHaveReferencePreserved" start="731" end="743" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanOverrideExpectedParametersOfInternalPHPClassesToPreserveRefs" start="752" end="769" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Meant to test the same logic as testCanOverrideExpectedParametersOfExtensionPHPClassesToPreserveRefs, but: - doesn't require an extension - isn't actually known to be used"/>
    </docblock>
    <inline>
      <comment value="@ used to avoid E_STRICT for incompatible signature" line="757"/>
    </inline>
  </method>
  <method name="testCanOverrideExpectedParametersOfExtensionPHPClassesToPreserveRefs" start="775" end="797" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Real world version of testCanOverrideExpectedParametersOfInternalPHPClassesToPreserveRefs"/>
    </docblock>
    <inline>
      <comment value="@ used to avoid E_STRICT for incompatible signature" line="783"/>
    </inline>
  </method>
  <method name="testCanCreateNonOverridenInstanceOfPreviouslyOverridenInternalClasses" start="799" end="823" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="@ used to avoid E_STRICT for incompatible signature" line="804"/>
    </inline>
  </method>
  <method name="testCanMockAbstractClassWithAbstractPublicMethod" start="828" end="832" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="abstract"/>
    </docblock>
  </method>
  <method name="testClassDeclaringIssetDoesNotThrowException" start="837" end="843" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <issue value="issue/21"/>
    </docblock>
  </method>
  <method name="testClassDeclaringUnsetDoesNotThrowException" start="848" end="854" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <issue value="issue/21"/>
    </docblock>
  </method>
  <method name="testCallingSelfOnlyReturnsLastMockCreatedOrCurrentMockBeingProgrammedSinceTheyAreOneAndTheSame" start="859" end="870" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <issue value="issue/35"/>
    </docblock>
    <inline>
      <comment value="$m = $this-&gt;container-&gt;mock('MockeryTestFoo2');" line="864"/>
      <comment value="$this-&gt;assertTrue($this-&gt;container-&gt;self() instanceof MockeryTestFoo2);" line="865"/>
      <comment value="$m = $this-&gt;container-&gt;mock('MockeryTestFoo');" line="866"/>
      <comment value="$this-&gt;assertFalse(Mockery::self() instanceof MockeryTestFoo2);" line="867"/>
      <comment value="$this-&gt;assertTrue(Mockery::self() instanceof MockeryTestFoo);" line="868"/>
    </inline>
  </method>
  <method name="testCreatingMockOfClassWithExistingToStringMethodDoesntCreateClassWithTwoToStringMethods" start="875" end="881" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <issue value="issue/89"/>
    </docblock>
    <inline>
      <comment value="this would fatal" line="878"/>
    </inline>
  </method>
  <method name="testGetExpectationCount_freshContainer" start="883" end="886" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetExpectationCount_simplestMock" start="888" end="893" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMethodsReturningParamsByReferenceDoesNotErrorOut" start="895" end="901" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockCallableTypeHint" start="903" end="908" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockClassWithReservedWordMethod" start="910" end="917" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testUndeclaredClassIsDeclared" start="919" end="924" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testUndeclaredClassWithNamespaceIsDeclared" start="926" end="931" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testUndeclaredClassWithNamespaceIncludingLeadingOperatorIsDeclared" start="933" end="938" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingPhpredisExtensionClassWorks" start="940" end="946" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testIssetMappingUsingProxiedPartials_CheckNoExceptionThrown" start="948" end="955" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockInterfacesExtendingTraversable" start="960" end="967" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="traversable1"/>
    </docblock>
  </method>
  <method name="testCanMockInterfacesAlongsideTraversable" start="972" end="979" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="traversable2"/>
    </docblock>
  </method>
  <method name="testInterfacesCanHaveAssertions" start="981" end="989" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingIteratorAggregateDoesNotImplementIterator" start="991" end="997" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingInterfaceThatExtendsIteratorDoesNotImplementIterator" start="999" end="1004" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingInterfaceThatExtendsIteratorAggregateDoesNotImplementIterator" start="1006" end="1012" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingIteratorAggregateDoesNotImplementIteratorAlongside" start="1014" end="1020" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingIteratorDoesNotImplementIteratorAlongside" start="1022" end="1027" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockingIteratorDoesNotImplementIterator" start="1029" end="1034" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockeryCloseForIllegalIssetFileInclude" start="1036" end="1044" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockeryShouldDistinguishBetweenConstructorParamsAndClosures" start="1046" end="1051" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testMockeryShouldNotMockCallstaticMagicMethod" start="1054" end="1057" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="@group nette"/>
    </docblock>
  </method>
  <method name="testCanMockClassWithOldStyleConstructorAndArguments" start="1062" end="1065" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <issue value="issue/139"/>
    </docblock>
  </method>
  <method name="testMockeryShouldInterpretEmptyArrayAsConstructorArgs" start="1068" end="1072" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="@group issue/144"/>
    </docblock>
  </method>
  <method name="testMockeryShouldCallConstructorByDefaultWhenRequestingPartials" start="1075" end="1079" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="@group issue/144"/>
    </docblock>
  </method>
  <method name="testMockeryShouldRespectInterfaceWithMethodParamSelf" start="1082" end="1085" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="@group issue/158"/>
    </docblock>
  </method>
  <method name="testMockeryDoesntTryAndMockLowercaseToString" start="1088" end="1091" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="@group issue/162"/>
    </docblock>
  </method>
  <method name="testExistingStaticMethodMocking" start="1094" end="1103" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="@group issue/175"/>
    </docblock>
  </method>
  <method name="testShouldThrowIfAttemptingToStubProtectedMethod" start="1110" end="1114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/154"/>
      <expectedexception value="InvalidArgumentException"/>
      <expectedexceptionmessage value="protectedMethod() cannot be mocked as it a protected method and mocking protected methods is not allowed for this mock"/>
    </docblock>
  </method>
  <method name="testShouldThrowIfAttemptingToStubPrivateMethod" start="1121" end="1125" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/154"/>
      <expectedexception value="InvalidArgumentException"/>
      <expectedexceptionmessage value="privateMethod() cannot be mocked as it is a private method"/>
    </docblock>
  </method>
  <method name="testWakeupMagicIsNotMockedToAllowSerialisationInstanceHack" start="1127" end="1130" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testCanMockMethodsWithRequiredParamsThatHaveDefaultValues" start="1135" end="1140" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <group value="issue/154"/>
    </docblock>
  </method>
  <method name="testThrowsWhenNamedMockClassExistsAndIsNotMockery" start="1148" end="1153" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <test/>
      <group value="issue/294"/>
      <expectedexception value="Mockery\Exception\RuntimeException"/>
      <expectedexceptionmessage value="Could not load mock DateTime, class already exists"/>
    </docblock>
  </method>
  <method name="testHandlesMethodWithArgumentExpectationWhenCalledWithResource" start="1159" end="1165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="Mockery\Exception\NoMatchingExpectationException"/>
      <expectedexceptionmessage value="MyTestClass::foo(resource(...))"/>
    </docblock>
  </method>
  <method name="testHandlesMethodWithArgumentExpectationWhenCalledWithCircularArray" start="1171" end="1180" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="Mockery\Exception\NoMatchingExpectationException"/>
      <expectedexceptionmessage value="MyTestClass::foo(array('myself'=&gt;'array(...)',))"/>
    </docblock>
  </method>
  <method name="testHandlesMethodWithArgumentExpectationWhenCalledWithNestedArray" start="1186" end="1196" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="Mockery\Exception\NoMatchingExpectationException"/>
      <expectedexceptionmessage value="MyTestClass::foo(array('a_scalar'=&gt;2,'an_array'=&gt;'array(...)',))"/>
    </docblock>
  </method>
  <method name="testHandlesMethodWithArgumentExpectationWhenCalledWithNestedObject" start="1202" end="1212" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="Mockery\Exception\NoMatchingExpectationException"/>
      <expectedexceptionmessage value="MyTestClass::foo(array('a_scalar'=&gt;2,'an_object'=&gt;'object(stdClass)',))"/>
    </docblock>
  </method>
  <method name="testHandlesMethodWithArgumentExpectationWhenCalledWithNestedClosure" start="1218" end="1229" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="Mockery\Exception\NoMatchingExpectationException"/>
      <expectedexceptionmessage value="MyTestClass::foo(array('a_scalar'=&gt;2,'a_closure'=&gt;'object(Closure"/>
    </docblock>
  </method>
  <method name="testHandlesMethodWithArgumentExpectationWhenCalledWithNestedResource" start="1235" end="1245" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="Mockery\Exception\NoMatchingExpectationException"/>
      <expectedexceptionmessage value="MyTestClass::foo(array('a_scalar'=&gt;2,'a_resource'=&gt;'resource(...)',))"/>
    </docblock>
  </method>
  <method name="canMockClassesThatDescendFromInternalClasses" start="1251" end="1255" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <test/>
      <group value="issue/339"/>
    </docblock>
  </method>
  <method name="canMockClassesThatImplementSerializable" start="1261" end="1265" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <test/>
      <group value="issue/339"/>
    </docblock>
  </method>
  <method name="canMockInternalClassesThatImplementSerializable" start="1271" end="1275" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <test/>
      <group value="issue/346"/>
    </docblock>
  </method>
</class>
