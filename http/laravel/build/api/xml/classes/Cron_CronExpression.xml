<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Cron\CronExpression" namespace="Cron" name="CronExpression" abstract="false" final="false" start="17" end="332">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mtdowling/cron-expression/src/Cron" file="CronExpression.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mtdowling/cron-expression/src/Cron/CronExpression.php" size="12307" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="6f1afa05765017d4437c9bf570744971a8013ae9" relative="vendor/mtdowling/cron-expression/src/Cron/CronExpression.php"/>
  <docblock>
    <description compact="CRON expression parser that can determine whether or not a CRON expression is due to run, the next run date and previous run date of a CRON expression.">The determinations made by this class are accurate if checked run once per
minute (seconds are dropped from date time comparisons).

Schedule parts must map to:
minute [0-59], hour [0-23], day of month, month [1-12|JAN-DEC], day of week
[1-7|MON-SUN], and an optional year.</description>
    <link value="http://en.wikipedia.org/wiki/Cron"/>
  </docblock>
  <constant type="integer" name="MINUTE" value="0"/>
  <constant type="integer" name="HOUR" value="1"/>
  <constant type="integer" name="DAY" value="2"/>
  <constant type="integer" name="MONTH" value="3"/>
  <constant type="integer" name="WEEKDAY" value="4"/>
  <constant type="integer" name="YEAR" value="5"/>
  <member name="cronParts" visibility="private" line="29">
    <docblock>
      <description/>
      <var description="CRON expression parts" type="array"/>
    </docblock>
  </member>
  <member name="fieldFactory" visibility="private" line="34">
    <docblock>
      <description/>
      <var description="CRON field factory" type="object">
        <type full="Cron\FieldFactory" namespace="Cron" name="FieldFactory"/>
      </var>
    </docblock>
  </member>
  <member name="order" type="array" default="" visibility="private" line="39">
    <docblock>
      <description/>
      <var description="Order in which to test of cron parts" type="array"/>
    </docblock>
  </member>
  <method name="factory" start="57" end="73" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Factory method to create a new CronExpression."/>
      <param description="The CRON expression to create.  There are" type="string" variable="$expression">several special predefined values which can be used to substitute the
                          CRON expression:

     `@yearly`, `@annually` - Run once a year, midnight, Jan. 1 - 0 0 1 1
     `@monthly` - Run once a month, midnight, first of month - 0 0 1
     `@weekly` - Run once a week, midnight on Sun - 0 0 * * 0
     `@daily` - Run once a day, midnight - 0 0
     `@hourly` - Run once an hour, first minute - 0</param>
      <param description="Field factory to use" type="object" variable="$fieldFactory">
        <type full="Cron\FieldFactory" namespace="Cron" name="FieldFactory"/>
      </param>
      <return type="object">
        <type full="Cron\CronExpression" namespace="Cron" name="CronExpression"/>
      </return>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
    <parameter name="fieldFactory" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Cron\FieldFactory" namespace="Cron" name="FieldFactory"/>
    </parameter>
  </method>
  <constructor name="__construct" start="81" end="85" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Parse a CRON expression"/>
      <param description="CRON expression (e.g. '8 * * * *')" type="string" variable="$expression"/>
      <param description="Factory to create cron fields" type="object" variable="$fieldFactory">
        <type full="Cron\FieldFactory" namespace="Cron" name="FieldFactory"/>
      </param>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
    <parameter name="fieldFactory" byreference="false" type="object">
      <type full="Cron\FieldFactory" namespace="Cron" name="FieldFactory"/>
    </parameter>
  </constructor>
  <method name="setExpression" start="95" end="109" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set or change the CRON expression"/>
      <param description="CRON expression (e.g. 8 * * * *)" type="string" variable="$value"/>
      <return type="object">
        <type full="Cron\CronExpression" namespace="Cron" name="CronExpression"/>
      </return>
      <throws description="if not a valid CRON expression" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="setPart" start="120" end="131" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set part of the CRON expression"/>
      <param description="The position of the CRON expression to set" type="int" variable="$position"/>
      <param description="The value to set" type="string" variable="$value"/>
      <return type="object">
        <type full="Cron\CronExpression" namespace="Cron" name="CronExpression"/>
      </return>
      <throws description="if the value is not valid for the part" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="position" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="getNextRunDate" start="149" end="152" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a next run date relative to the current date or a specific date"/>
      <param description="Relative calculation date" type="object" variable="$currentTime">
        <type full="Cron\string|\DateTime" namespace="Cron\string|" name="DateTime"/>
      </param>
      <param description="Number of matches to skip before returning a" type="int" variable="$nth">matching next run date.  0, the default, will return the current
                                          date and time if the next run date falls on the current date and
                                          time.  Setting this value to 1 will skip the first match and go to
                                          the second match.  Setting this value to 2 will skip the first 2
                                          matches and so on.</param>
      <param description="Set to TRUE to return the current date if" type="object" variable="$allowCurrentDate">it matches the cron expression.<type full="Cron\bool" namespace="Cron" name="bool"/></param>
      <return type="object">
        <type full="\DateTime" namespace="" name="DateTime"/>
      </return>
      <throws description="on too many iterations" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="currentTime" byreference="false" type="string" default="'now'"/>
    <parameter name="nth" byreference="false" type="integer" default="0"/>
    <parameter name="allowCurrentDate" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getPreviousRunDate" start="166" end="169" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a previous run date relative to the current date or a specific date"/>
      <param description="Relative calculation date" type="object" variable="$currentTime">
        <type full="Cron\string|\DateTime" namespace="Cron\string|" name="DateTime"/>
      </param>
      <param description="Number of matches to skip before returning" type="int" variable="$nth"/>
      <param description="Set to TRUE to return the" type="object" variable="$allowCurrentDate">current date if it matches the cron expression<type full="Cron\bool" namespace="Cron" name="bool"/></param>
      <return type="object">
        <type full="\DateTime" namespace="" name="DateTime"/>
      </return>
      <throws description="on too many iterations" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <see value="Cron\CronExpression::getNextRunDate"/>
    </docblock>
    <parameter name="currentTime" byreference="false" type="string" default="'now'"/>
    <parameter name="nth" byreference="false" type="integer" default="0"/>
    <parameter name="allowCurrentDate" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getMultipleRunDates" start="182" end="190" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get multiple run dates starting at the current date or a specific date"/>
      <param description="Set the total number of dates to calculate" type="int" variable="$total"/>
      <param description="Relative calculation date" type="object" variable="$currentTime">
        <type full="Cron\string|\DateTime" namespace="Cron\string|" name="DateTime"/>
      </param>
      <param description="Set to TRUE to retrieve previous dates" type="object" variable="$invert">
        <type full="Cron\bool" namespace="Cron" name="bool"/>
      </param>
      <param description="Set to TRUE to return the" type="object" variable="$allowCurrentDate">current date if it matches the cron expression<type full="Cron\bool" namespace="Cron" name="bool"/></param>
      <return description="Returns an array of run dates" type="array"/>
    </docblock>
    <parameter name="total" byreference="false" type="{unknown}"/>
    <parameter name="currentTime" byreference="false" type="string" default="'now'"/>
    <parameter name="invert" byreference="false" type="boolean" default="false"/>
    <parameter name="allowCurrentDate" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getExpression" start="201" end="210" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all or part of the CRON expression"/>
      <param description="Specify the part to retrieve or NULL to get the full" type="string" variable="$part">cron schedule string.</param>
      <return description="Returns the CRON expression, a part of the" type="object">CRON expression, or NULL if the part was specified but not found<type full="Cron\string|null" namespace="Cron" name="string|null"/></return>
    </docblock>
    <parameter name="part" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="__toString" start="217" end="220" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Helper method to output the full expression."/>
      <return description="Full CRON expression" type="string"/>
    </docblock>
  </method>
  <method name="isDue" start="231" end="254" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the cron is due to run based on the current date or a specific date.  This method assumes that the current number of seconds are irrelevant, and should be called once per minute."/>
      <param description="Relative calculation date" type="object" variable="$currentTime">
        <type full="Cron\string|\DateTime" namespace="Cron\string|" name="DateTime"/>
      </param>
      <return description="Returns TRUE if the cron is due to run or FALSE if not" type="object">
        <type full="Cron\bool" namespace="Cron" name="bool"/>
      </return>
    </docblock>
    <parameter name="currentTime" byreference="false" type="string" default="'now'"/>
  </method>
  <method name="getRunDate" start="268" end="331" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the next or previous run date of the expression relative to a date"/>
      <param description="Relative calculation date" type="object" variable="$currentTime">
        <type full="Cron\string|\DateTime" namespace="Cron\string|" name="DateTime"/>
      </param>
      <param description="Number of matches to skip before returning" type="int" variable="$nth"/>
      <param description="Set to TRUE to go backwards in time" type="object" variable="$invert">
        <type full="Cron\bool" namespace="Cron" name="bool"/>
      </param>
      <param description="Set to TRUE to return the" type="object" variable="$allowCurrentDate">current date if it matches the cron expression<type full="Cron\bool" namespace="Cron" name="bool"/></param>
      <return type="object">
        <type full="\DateTime" namespace="" name="DateTime"/>
      </return>
      <throws description="on too many iterations" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="currentTime" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="nth" byreference="false" type="integer" default="0"/>
    <parameter name="invert" byreference="false" type="boolean" default="false"/>
    <parameter name="allowCurrentDate" byreference="false" type="boolean" default="false"/>
    <inline>
      <comment value="We don't have to satisfy * or null fields" line="281"/>
      <comment value="Set a hard limit to bail on an impossible date" line="293"/>
      <comment value="@codeCoverageIgnoreStart" line="328"/>
    </inline>
  </method>
</class>
