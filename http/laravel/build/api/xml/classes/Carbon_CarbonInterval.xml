<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Carbon\CarbonInterval" namespace="Carbon" name="CarbonInterval" abstract="false" final="false" start="67" end="523">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nesbot/carbon/src/Carbon" file="CarbonInterval.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/nesbot/carbon/src/Carbon/CarbonInterval.php" size="16286" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="08001651ea63b622700864a246c40821e8a92646" relative="vendor/nesbot/carbon/src/Carbon/CarbonInterval.php"/>
  <docblock>
    <description compact="A simple API extension for DateInterval.">The implemenation provides helpers to handle weeks but only days are saved.
Weeks are calculated based on the total days of the current instance.</description>
    <property value="int $years Total years of the current interval."/>
    <property value="int $months Total months of the current interval."/>
    <property value="int $weeks Total weeks of the current interval calculated from the days."/>
    <property value="int $dayz Total days of the current interval (weeks * 7 + days)."/>
    <property value="int $hours Total hours of the current interval."/>
    <property value="int $minutes Total minutes of the current interval."/>
    <property value="int $seconds Total seconds of the current interval."/>
    <property value="-read integer $dayzExcludeWeeks Total days remaining in the final week of the current instance (days % 7)."/>
    <property value="-read integer $daysExcludeWeeks alias of dayzExcludeWeeks"/>
    <method value="static CarbonInterval years($years = 1) Create instance specifying a number of years."/>
    <method value="static CarbonInterval year($years = 1) Alias for years()"/>
    <method value="static CarbonInterval months($months = 1) Create instance specifying a number of months."/>
    <method value="static CarbonInterval month($months = 1) Alias for months()"/>
    <method value="static CarbonInterval weeks($weeks = 1) Create instance specifying a number of weeks."/>
    <method value="static CarbonInterval week($weeks = 1) Alias for weeks()"/>
    <method value="static CarbonInterval days($days = 1) Create instance specifying a number of days."/>
    <method value="static CarbonInterval dayz($days = 1) Alias for days()"/>
    <method value="static CarbonInterval day($days = 1) Alias for days()"/>
    <method value="static CarbonInterval hours($hours = 1) Create instance specifying a number of hours."/>
    <method value="static CarbonInterval hour($hours = 1) Alias for hours()"/>
    <method value="static CarbonInterval minutes($minutes = 1) Create instance specifying a number of minutes."/>
    <method value="static CarbonInterval minute($minutes = 1) Alias for minutes()"/>
    <method value="static CarbonInterval seconds($seconds = 1) Create instance specifying a number of seconds."/>
    <method value="static CarbonInterval second($seconds = 1) Alias for seconds()"/>
    <method value="CarbonInterval years() years($years = 1) Set the years portion of the current interval."/>
    <method value="CarbonInterval year() year($years = 1) Alias for years()."/>
    <method value="CarbonInterval months() months($months = 1) Set the months portion of the current interval."/>
    <method value="CarbonInterval month() month($months = 1) Alias for months()."/>
    <method value="CarbonInterval weeks() weeks($weeks = 1) Set the weeks portion of the current interval.  Will overwrite dayz value."/>
    <method value="CarbonInterval week() week($weeks = 1) Alias for weeks()."/>
    <method value="CarbonInterval days() days($days = 1) Set the days portion of the current interval."/>
    <method value="CarbonInterval dayz() dayz($days = 1) Alias for days()."/>
    <method value="CarbonInterval day() day($days = 1) Alias for days()."/>
    <method value="CarbonInterval hours() hours($hours = 1) Set the hours portion of the current interval."/>
    <method value="CarbonInterval hour() hour($hours = 1) Alias for hours()."/>
    <method value="CarbonInterval minutes() minutes($minutes = 1) Set the minutes portion of the current interval."/>
    <method value="CarbonInterval minute() minute($minutes = 1) Alias for minutes()."/>
    <method value="CarbonInterval seconds() seconds($seconds = 1) Set the seconds portion of the current interval."/>
    <method value="CarbonInterval second() second($seconds = 1) Alias for seconds()."/>
  </docblock>
  <extends full="DateInterval" namespace="" name="DateInterval"/>
  <constant type="string" name="PERIOD_PREFIX" value="'P'">
    <docblock>
      <description compact="Interval spec period designators"/>
    </docblock>
  </constant>
  <constant type="string" name="PERIOD_YEARS" value="'Y'"/>
  <constant type="string" name="PERIOD_MONTHS" value="'M'"/>
  <constant type="string" name="PERIOD_DAYS" value="'D'"/>
  <constant type="string" name="PERIOD_TIME_PREFIX" value="'T'"/>
  <constant type="string" name="PERIOD_HOURS" value="'H'"/>
  <constant type="string" name="PERIOD_MINUTES" value="'M'"/>
  <constant type="string" name="PERIOD_SECONDS" value="'S'"/>
  <member name="translator" visibility="protected" line="86">
    <docblock>
      <description compact="A translator to ... er ... translate stuff"/>
      <var type="object">
        <type full="Symfony\Component\Translation\TranslatorInterface" namespace="Symfony\Component\Translation" name="TranslatorInterface"/>
      </var>
    </docblock>
  </member>
  <constant type="integer" name="PHP_DAYS_FALSE" value="99999">
    <docblock>
      <description compact="Before PHP 5.4.20/5.5.4 instead of FALSE days will be set to -99999 when the interval instance was created by DateTime:diff()."/>
    </docblock>
  </constant>
  <method name="wasCreatedFromDiff" start="101" end="104" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description compact="Determine if the interval was created via DateTime:diff() or not."/>
      <param type="object" variable="$interval">
        <type full="DateInterval" namespace="" name="DateInterval"/>
      </param>
      <return type="object">
        <type full="Carbon\bool" namespace="Carbon" name="bool"/>
      </return>
    </docblock>
    <parameter name="interval" byreference="false" type="object">
      <type full="DateInterval" namespace="" name="DateInterval"/>
    </parameter>
  </method>
  <constructor name="__construct" start="121" end="147" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new CarbonInterval instance."/>
      <param type="int" variable="$years"/>
      <param type="int" variable="$months"/>
      <param type="int" variable="$weeks"/>
      <param type="int" variable="$days"/>
      <param type="int" variable="$hours"/>
      <param type="int" variable="$minutes"/>
      <param type="int" variable="$seconds"/>
    </docblock>
    <parameter name="years" byreference="false" type="integer" default="1"/>
    <parameter name="months" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="weeks" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="days" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="hours" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="minutes" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="seconds" byreference="false" type="{unknown}" default="" constant="null"/>
  </constructor>
  <method name="create" start="165" end="168" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Create a new CarbonInterval instance from specific values.">This is an alias for the constructor that allows better fluent
syntax as it allows you to do CarbonInterval::create(1)-&gt;fn() rather than
(new CarbonInterval(1))-&gt;fn().</description>
      <param type="int" variable="$years"/>
      <param type="int" variable="$months"/>
      <param type="int" variable="$weeks"/>
      <param type="int" variable="$days"/>
      <param type="int" variable="$hours"/>
      <param type="int" variable="$minutes"/>
      <param type="int" variable="$seconds"/>
      <return resolution="static" type="object">
        <type full="Carbon\CarbonInterval" namespace="Carbon" name="CarbonInterval"/>
      </return>
    </docblock>
    <parameter name="years" byreference="false" type="integer" default="1"/>
    <parameter name="months" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="weeks" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="days" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="hours" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="minutes" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="seconds" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="__callStatic" start="181" end="215" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Provide static helpers to create instances.  Allows CarbonInterval::years(3).">Note: This is done using the magic method to allow static and instance methods to
      have the same names.</description>
      <param type="string" variable="$name"/>
      <param type="array" variable="$args"/>
      <return resolution="static" type="object">
        <type full="Carbon\CarbonInterval" namespace="Carbon" name="CarbonInterval"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="args" byreference="false" type="{unknown}"/>
  </method>
  <method name="instance" start="228" end="239" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Create a CarbonInterval instance from a DateInterval one.  Can not instance DateInterval objects created from DateTime::diff() as you can't externally set the $days field."/>
      <param type="object" variable="$di">
        <type full="DateInterval" namespace="" name="DateInterval"/>
      </param>
      <throws type="object">
        <type full="InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <return resolution="static" type="object">
        <type full="Carbon\CarbonInterval" namespace="Carbon" name="CarbonInterval"/>
      </return>
    </docblock>
    <parameter name="di" byreference="false" type="object">
      <type full="DateInterval" namespace="" name="DateInterval"/>
    </parameter>
  </method>
  <method name="translator" start="250" end="259" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Intialize the translator instance if necessary."/>
      <return type="object">
        <type full="Symfony\Component\Translation\TranslatorInterface" namespace="Symfony\Component\Translation" name="TranslatorInterface"/>
      </return>
    </docblock>
  </method>
  <method name="getTranslator" start="266" end="269" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get the translator instance in use"/>
      <return type="object">
        <type full="Symfony\Component\Translation\TranslatorInterface" namespace="Symfony\Component\Translation" name="TranslatorInterface"/>
      </return>
    </docblock>
  </method>
  <method name="setTranslator" start="276" end="279" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Set the translator instance to use"/>
      <param type="object" variable="$translator">
        <type full="Symfony\Component\Translation\TranslatorInterface" namespace="Symfony\Component\Translation" name="TranslatorInterface"/>
      </param>
    </docblock>
    <parameter name="translator" byreference="false" type="object">
      <type full="Symfony\Component\Translation\TranslatorInterface" namespace="Symfony\Component\Translation" name="TranslatorInterface"/>
    </parameter>
  </method>
  <method name="getLocale" start="286" end="289" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get the current translator locale"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setLocale" start="296" end="302" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Set the current translator locale"/>
      <param type="string" variable="$locale"/>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Ensure the locale has been loaded." line="300"/>
    </inline>
  </method>
  <method name="__get" start="317" end="348" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a part of the CarbonInterval object"/>
      <param type="string" variable="$name"/>
      <throws type="object">
        <type full="InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <return type="int"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="__set" start="358" end="389" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a part of the CarbonInterval object"/>
      <param type="string" variable="$name"/>
      <param type="int" variable="$val"/>
      <throws type="object">
        <type full="InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="val" byreference="false" type="{unknown}"/>
  </method>
  <method name="weeksAndDays" start="399" end="404" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Allow setting of weeks and days to be cumulative."/>
      <param description="Number of weeks to set" type="int" variable="$weeks"/>
      <param description="Number of days to set" type="int" variable="$days"/>
      <return resolution="static" type="object">
        <type full="Carbon\CarbonInterval" namespace="Carbon" name="CarbonInterval"/>
      </return>
    </docblock>
    <parameter name="weeks" byreference="false" type="{unknown}"/>
    <parameter name="days" byreference="false" type="{unknown}"/>
  </method>
  <method name="__call" start="417" end="460" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Allow fluent calls on the setters... CarbonInterval::years(3)-&gt;months(5)-&gt;day().">Note: This is done using the magic method to allow static and instance methods to
      have the same names.</description>
      <param type="string" variable="$name"/>
      <param type="array" variable="$args"/>
      <return resolution="static" type="object">
        <type full="Carbon\CarbonInterval" namespace="Carbon" name="CarbonInterval"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="args" byreference="false" type="{unknown}"/>
  </method>
  <method name="forHumans" start="467" end="487" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the current interval in a human readable format in the current locale."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="__toString" start="494" end="497" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Format the instance as a string using the forHumans() function."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="add" start="506" end="522" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add the passed interval to the current instance"/>
      <param type="object" variable="$interval">
        <type full="DateInterval" namespace="" name="DateInterval"/>
      </param>
      <return resolution="static" type="object">
        <type full="Carbon\CarbonInterval" namespace="Carbon" name="CarbonInterval"/>
      </return>
    </docblock>
    <parameter name="interval" byreference="false" type="object">
      <type full="DateInterval" namespace="" name="DateInterval"/>
    </parameter>
  </method>
</class>
