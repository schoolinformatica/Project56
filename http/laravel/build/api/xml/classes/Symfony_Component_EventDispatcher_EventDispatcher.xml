<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\EventDispatcher\EventDispatcher" namespace="Symfony\Component\EventDispatcher" name="EventDispatcher" abstract="false" final="false" start="28" end="198">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/event-dispatcher" file="EventDispatcher.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/event-dispatcher/EventDispatcher.php" size="5931" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="970bf53caeaa2df9f2aaf21655d4cf23426c66ba" relative="vendor/symfony/event-dispatcher/EventDispatcher.php"/>
  <docblock>
    <description compact="The EventDispatcherInterface is the central point of Symfony's event listener system.">Listeners are registered on the manager and events are dispatched through the
manager.</description>
    <author value="Guilherme Blanco &lt;guilhermeblanco@hotmail.com&gt;"/>
    <author value="Jonathan Wage &lt;jonwage@gmail.com&gt;"/>
    <author value="Roman Borschel &lt;roman@code-factory.org&gt;"/>
    <author value="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
    <author value="Jordan Alliot &lt;jordan.alliot@gmail.com&gt;"/>
  </docblock>
  <implements full="Symfony\Component\EventDispatcher\EventDispatcherInterface" namespace="Symfony\Component\EventDispatcher" name="EventDispatcherInterface"/>
  <member name="listeners" type="array" default="" visibility="private" line="30"/>
  <member name="sorted" type="array" default="" visibility="private" line="31"/>
  <method name="dispatch" start="36" end="50" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="eventName" byreference="false" type="{unknown}"/>
    <parameter name="event" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Symfony\Component\EventDispatcher\Event" namespace="Symfony\Component\EventDispatcher" name="Event"/>
    </parameter>
  </method>
  <method name="getListeners" start="55" end="76" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="eventName" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getListenerPriority" start="88" end="99" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the listener priority for a specific event.">Returns null if the event or the listener does not exist.</description>
      <param description="The name of the event" type="string" variable="$eventName"/>
      <param description="The listener" type="object" variable="$listener">
        <type full="Symfony\Component\EventDispatcher\callable" namespace="Symfony\Component\EventDispatcher" name="callable"/>
      </param>
      <return description="The event listener priority" type="object">
        <type full="Symfony\Component\EventDispatcher\int|null" namespace="Symfony\Component\EventDispatcher" name="int|null"/>
      </return>
    </docblock>
    <parameter name="eventName" byreference="false" type="{unknown}"/>
    <parameter name="listener" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasListeners" start="104" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="eventName" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="addListener" start="112" end="116" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="eventName" byreference="false" type="{unknown}"/>
    <parameter name="listener" byreference="false" type="{unknown}"/>
    <parameter name="priority" byreference="false" type="integer" default="0"/>
  </method>
  <method name="removeListener" start="121" end="132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="eventName" byreference="false" type="{unknown}"/>
    <parameter name="listener" byreference="false" type="{unknown}"/>
  </method>
  <method name="addSubscriber" start="137" end="150" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="subscriber" byreference="false" type="object">
      <type full="Symfony\Component\EventDispatcher\EventSubscriberInterface" namespace="Symfony\Component\EventDispatcher" name="EventSubscriberInterface"/>
    </parameter>
  </method>
  <method name="removeSubscriber" start="155" end="166" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="subscriber" byreference="false" type="object">
      <type full="Symfony\Component\EventDispatcher\EventSubscriberInterface" namespace="Symfony\Component\EventDispatcher" name="EventSubscriberInterface"/>
    </parameter>
  </method>
  <method name="doDispatch" start="178" end="186" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Triggers the listeners of an event.">This method can be overridden to add functionality that is executed
for each listener.</description>
      <param description="The event listeners." type="array" variable="$listeners" of="object">
        <type full="Symfony\Component\EventDispatcher\callable" namespace="Symfony\Component\EventDispatcher" name="callable"/>
      </param>
      <param description="The name of the event to dispatch." type="string" variable="$eventName"/>
      <param description="The event object to pass to the event handlers/listeners." type="object" variable="$event">
        <type full="Symfony\Component\EventDispatcher\Event" namespace="Symfony\Component\EventDispatcher" name="Event"/>
      </param>
    </docblock>
    <parameter name="listeners" byreference="false" type="{unknown}"/>
    <parameter name="eventName" byreference="false" type="{unknown}"/>
    <parameter name="event" byreference="false" type="object">
      <type full="Symfony\Component\EventDispatcher\Event" namespace="Symfony\Component\EventDispatcher" name="Event"/>
    </parameter>
  </method>
  <method name="sortListeners" start="193" end="197" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Sorts the internal list of listeners for the given event by priority."/>
      <param description="The name of the event." type="string" variable="$eventName"/>
    </docblock>
    <parameter name="eventName" byreference="false" type="{unknown}"/>
  </method>
</class>
