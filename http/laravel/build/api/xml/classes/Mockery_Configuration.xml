<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Mockery\Configuration" namespace="Mockery" name="Configuration" abstract="false" final="false" start="23" end="131">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mockery/mockery/library/Mockery" file="Configuration.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/mockery/mockery/library/Mockery/Configuration.php" size="3743" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="9d68e3c344e2651f3a8c411589bac5dead5c3db1" relative="vendor/mockery/mockery/library/Mockery/Configuration.php"/>
  <member name="_allowMockingNonExistentMethod" type="boolean" default="true" visibility="protected" line="32">
    <docblock>
      <description compact="Boolean assertion of whether we can mock methods which do not actually exist for the given class or object (ignored for unreal mocks)"/>
      <var type="object">
        <type full="Mockery\bool" namespace="Mockery" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="_allowMockingMethodsUnnecessarily" type="boolean" default="true" visibility="protected" line="42">
    <docblock>
      <description compact="Boolean assertion of whether we ignore unnecessary mocking of methods, i.e. when method expectations are made, set using a zeroOrMoreTimes() constraint, and then never called. Essentially such expectations are not required and are just taking up test space."/>
      <var type="object">
        <type full="Mockery\bool" namespace="Mockery" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="_internalClassParamMap" type="array" default="" visibility="protected" line="49">
    <docblock>
      <description compact="Parameter map for use with PHP internal classes."/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="allowMockingNonExistentMethods" start="56" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set boolean to allow/prevent mocking of non-existent methods"/>
      <param type="object">
        <type full="Mockery\bool" namespace="Mockery" name="bool"/>
      </param>
    </docblock>
    <parameter name="flag" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="mockingNonExistentMethodsAllowed" start="66" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return flag indicating whether mocking non-existent methods allowed"/>
      <return type="object">
        <type full="Mockery\bool" namespace="Mockery" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="allowMockingMethodsUnnecessarily" start="76" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set boolean to allow/prevent unnecessary mocking of methods"/>
      <param type="object">
        <type full="Mockery\bool" namespace="Mockery" name="bool"/>
      </param>
    </docblock>
    <parameter name="flag" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="mockingMethodsUnnecessarilyAllowed" start="86" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return flag indicating whether mocking non-existent methods allowed"/>
      <return type="object">
        <type full="Mockery\bool" namespace="Mockery" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="setInternalClassMethodParamMap" start="99" end="105" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a parameter map (array of param signature strings) for the method of an internal PHP class."/>
      <param type="string" variable="$class"/>
      <param type="string" variable="$method"/>
      <param type="array" variable="$map"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <parameter name="map" byreference="false" type="array"/>
  </method>
  <method name="resetInternalClassMethodParamMaps" start="110" end="113" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove all overriden parameter maps from internal PHP classes."/>
    </docblock>
  </method>
  <method name="getInternalClassMethodParamMap" start="120" end="125" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the parameter map of an internal PHP class method"/>
      <return type="array"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
  </method>
  <method name="getInternalClassMethodParamMaps" start="127" end="130" abstract="false" final="false" static="false" visibility="public"/>
</class>
