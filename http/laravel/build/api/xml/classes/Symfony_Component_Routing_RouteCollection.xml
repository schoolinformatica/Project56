<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Routing\RouteCollection" namespace="Symfony\Component\Routing" name="RouteCollection" abstract="false" final="false" start="26" end="277">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/routing" file="RouteCollection.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/routing/RouteCollection.php" size="7266" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="aff510be319e62ab4e0a2b134496e5d702559294" relative="vendor/symfony/routing/RouteCollection.php"/>
  <docblock>
    <description compact="A RouteCollection represents a set of Route instances.">When adding a route at the end of the collection, an existing route
with the same name is removed first. So there can only be one route
with a given name.</description>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
    <author value="Tobias Schultze &lt;http://tobion.de&gt;"/>
  </docblock>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <implements full="Countable" namespace="" name="Countable"/>
  <member name="routes" type="array" default="" visibility="private" line="31">
    <docblock>
      <description/>
      <var type="array" of="object">
        <type full="Symfony\Component\Routing\Route" namespace="Symfony\Component\Routing" name="Route"/>
      </var>
    </docblock>
  </member>
  <member name="resources" type="array" default="" visibility="private" line="36">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="__clone" start="38" end="43" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getIterator" start="54" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the current RouteCollection as an Iterator that includes all routes.">It implements \IteratorAggregate.</description>
      <see value="all()"/>
      <return description="An \ArrayIterator object for iterating over routes" type="object">
        <type full="\ArrayIterator" namespace="" name="ArrayIterator"/>
      </return>
    </docblock>
  </method>
  <method name="count" start="64" end="67" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the number of Routes in this collection."/>
      <return description="The number of routes" type="int"/>
    </docblock>
  </method>
  <method name="add" start="75" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a route."/>
      <param description="The route name" type="string" variable="$name"/>
      <param description="A Route instance" type="object" variable="$route">
        <type full="Symfony\Component\Routing\Route" namespace="Symfony\Component\Routing" name="Route"/>
      </param>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="route" byreference="false" type="object">
      <type full="Symfony\Component\Routing\Route" namespace="Symfony\Component\Routing" name="Route"/>
    </parameter>
  </method>
  <method name="all" start="87" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns all routes in this collection."/>
      <return description="An array of routes" type="array" of="object">
        <type full="Symfony\Component\Routing\Route" namespace="Symfony\Component\Routing" name="Route"/>
      </return>
    </docblock>
  </method>
  <method name="get" start="99" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets a route by name."/>
      <param description="The route name" type="string" variable="$name"/>
      <return description="A Route instance or null when not found" type="object">
        <type full="Symfony\Component\Routing\Route|null" namespace="Symfony\Component\Routing" name="Route|null"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="remove" start="109" end="114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a route or an array of routes by name from the collection."/>
      <param description="The route name or an array of route names" type="object" variable="$name">
        <type full="Symfony\Component\Routing\string|array" namespace="Symfony\Component\Routing" name="string|array"/>
      </param>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="addCollection" start="122" end="132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a route collection at the end of the current set by appending all routes of the added collection."/>
      <param description="A RouteCollection instance" type="object" variable="$collection">
        <type full="Symfony\Component\Routing\RouteCollection" namespace="Symfony\Component\Routing" name="RouteCollection"/>
      </param>
    </docblock>
    <parameter name="collection" byreference="false" type="object">
      <type full="Symfony\Component\Routing\RouteCollection" namespace="Symfony\Component\Routing" name="RouteCollection"/>
    </parameter>
    <inline>
      <comment value="we need to remove all routes with the same names first because just replacing them" line="124"/>
      <comment value="would not place the new route at the end of the merged array" line="125"/>
    </inline>
  </method>
  <method name="addPrefix" start="141" end="154" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a prefix to the path of all child routes."/>
      <param description="An optional prefix to add before each pattern of the route collection" type="string" variable="$prefix"/>
      <param description="An array of default values" type="array" variable="$defaults"/>
      <param description="An array of requirements" type="array" variable="$requirements"/>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="defaults" byreference="false" type="array" default=""/>
    <parameter name="requirements" byreference="false" type="array" default=""/>
  </method>
  <method name="setHost" start="163" end="170" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the host pattern on all routes."/>
      <param description="The pattern" type="string" variable="$pattern"/>
      <param description="An array of default values" type="array" variable="$defaults"/>
      <param description="An array of requirements" type="array" variable="$requirements"/>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
    <parameter name="defaults" byreference="false" type="array" default=""/>
    <parameter name="requirements" byreference="false" type="array" default=""/>
  </method>
  <method name="setCondition" start="179" end="184" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a condition on all routes.">Existing conditions will be overridden.</description>
      <param description="The condition" type="string" variable="$condition"/>
    </docblock>
    <parameter name="condition" byreference="false" type="{unknown}"/>
  </method>
  <method name="addDefaults" start="193" end="200" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds defaults to all routes.">An existing default value under the same name in a route will be overridden.</description>
      <param description="An array of default values" type="array" variable="$defaults"/>
    </docblock>
    <parameter name="defaults" byreference="false" type="array"/>
  </method>
  <method name="addRequirements" start="209" end="216" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds requirements to all routes.">An existing requirement under the same name in a route will be overridden.</description>
      <param description="An array of requirements" type="array" variable="$requirements"/>
    </docblock>
    <parameter name="requirements" byreference="false" type="array"/>
  </method>
  <method name="addOptions" start="225" end="232" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds options to all routes.">An existing option value under the same name in a route will be overridden.</description>
      <param description="An array of options" type="array" variable="$options"/>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
  </method>
  <method name="setSchemes" start="239" end="244" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the schemes (e.g. 'https') all child routes are restricted to."/>
      <param description="The scheme or an array of schemes" type="object" variable="$schemes">
        <type full="Symfony\Component\Routing\string|array" namespace="Symfony\Component\Routing" name="string|array"/>
      </param>
    </docblock>
    <parameter name="schemes" byreference="false" type="{unknown}"/>
  </method>
  <method name="setMethods" start="251" end="256" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the HTTP methods (e.g. 'POST') all child routes are restricted to."/>
      <param description="The method or an array of methods" type="object" variable="$methods">
        <type full="Symfony\Component\Routing\string|array" namespace="Symfony\Component\Routing" name="string|array"/>
      </param>
    </docblock>
    <parameter name="methods" byreference="false" type="{unknown}"/>
  </method>
  <method name="getResources" start="263" end="266" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of resources loaded to build this collection."/>
      <return description="An array of resources" type="array" of="object">
        <type full="Symfony\Component\Routing\ResourceInterface" namespace="Symfony\Component\Routing" name="ResourceInterface"/>
      </return>
    </docblock>
  </method>
  <method name="addResource" start="273" end="276" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a resource for this collection."/>
      <param description="A resource instance" type="object" variable="$resource">
        <type full="Symfony\Component\Config\Resource\ResourceInterface" namespace="Symfony\Component\Config\Resource" name="ResourceInterface"/>
      </param>
    </docblock>
    <parameter name="resource" byreference="false" type="object">
      <type full="Symfony\Component\Config\Resource\ResourceInterface" namespace="Symfony\Component\Config\Resource" name="ResourceInterface"/>
    </parameter>
  </method>
</class>
