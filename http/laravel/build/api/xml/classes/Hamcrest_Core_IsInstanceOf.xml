<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Hamcrest\Core\IsInstanceOf" namespace="Hamcrest\Core" name="IsInstanceOf" abstract="false" final="false" start="13" end="67">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/Core" file="IsInstanceOf.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/Core/IsInstanceOf.php" size="1704" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="0dc9bccb755013e071e0fca3b0a3795783a41f94" relative="vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/Core/IsInstanceOf.php"/>
  <docblock>
    <description compact="Tests whether the value is an instance of a class."/>
  </docblock>
  <extends full="Hamcrest\DiagnosingMatcher" namespace="Hamcrest" name="DiagnosingMatcher"/>
  <member name="_theClass" visibility="private" line="16"/>
  <constructor name="__construct" start="25" end="28" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a new instance of IsInstanceOf"/>
      <param type="string" variable="$theClass">The predicate evaluates to true for instances of this class
  or one of its subclasses.</param>
    </docblock>
    <parameter name="theClass" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="matchesWithDiagnosticDescription" start="30" end="46" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="item" byreference="false" type="{unknown}"/>
    <parameter name="mismatchDescription" byreference="false" type="object">
      <type full="Hamcrest\Description" namespace="Hamcrest" name="Description"/>
    </parameter>
  </method>
  <method name="describeTo" start="48" end="53" abstract="false" final="false" static="false" visibility="public">
    <parameter name="description" byreference="false" type="object">
      <type full="Hamcrest\Description" namespace="Hamcrest" name="Description"/>
    </parameter>
  </method>
  <method name="anInstanceOf" start="63" end="66" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Is the value an instance of a particular type? This version assumes no relationship between the required type and the signature of the method that sets it up, for example in &lt;code&gt;assertThat($anObject, anInstanceOf('Thing'));&lt;/code&gt;"/>
      <factory value="any"/>
    </docblock>
    <parameter name="theClass" byreference="false" type="{unknown}"/>
  </method>
</class>
