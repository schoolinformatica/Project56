<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Framework_TestSuite" namespace="" name="PHPUnit_Framework_TestSuite" abstract="false" final="false" start="41" end="1036">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Framework" file="TestSuite.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Framework/TestSuite.php" size="29477" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="2abea1941dcadee254c3a6f6d97117f91497b277" relative="vendor/phpunit/phpunit/src/Framework/TestSuite.php"/>
  <docblock>
    <description compact="A TestSuite is a composite of Tests. It runs a collection of test cases.">Here is an example using the dynamic test definition.

&lt;code&gt;
&lt;?php
$suite = new PHPUnit_Framework_TestSuite;
$suite-&gt;addTest(new MathTest('testPass'));
?&gt;
&lt;/code&gt;

Alternatively, a TestSuite can extract the tests to be run automatically.
To do so you pass a ReflectionClass instance for your
PHPUnit_Framework_TestCase class to the PHPUnit_Framework_TestSuite
constructor.

&lt;code&gt;
&lt;?php
$suite = new PHPUnit_Framework_TestSuite(
  new ReflectionClass('MathTest')
);
?&gt;
&lt;/code&gt;

This constructor creates a suite with all the methods starting with
"test" that take no arguments.</description>
    <since value="Class available since Release 2.0.0"/>
  </docblock>
  <implements full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
  <implements full="PHPUnit_Framework_SelfDescribing" namespace="" name="PHPUnit_Framework_SelfDescribing"/>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <member name="cachedNumTests" visibility="private" line="48">
    <docblock>
      <description compact="Last count of tests in this suite."/>
      <var type="object">
        <type full="int|null" namespace="" name="int|null"/>
      </var>
    </docblock>
  </member>
  <member name="backupGlobals" type="{unknown}" default="" constant="null" visibility="protected" line="55">
    <docblock>
      <description compact="Enable or disable the backup and restoration of the $GLOBALS array."/>
      <var type="object">
        <type full="bool" namespace="" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="backupStaticAttributes" type="{unknown}" default="" constant="null" visibility="protected" line="62">
    <docblock>
      <description compact="Enable or disable the backup and restoration of static attributes."/>
      <var type="object">
        <type full="bool" namespace="" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="disallowChangesToGlobalState" type="{unknown}" default="" constant="null" visibility="private" line="67">
    <docblock>
      <description/>
      <var type="object">
        <type full="bool" namespace="" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="runTestInSeparateProcess" type="boolean" default="false" visibility="protected" line="72">
    <docblock>
      <description/>
      <var type="object">
        <type full="bool" namespace="" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="name" type="string" default="''" visibility="protected" line="79">
    <docblock>
      <description compact="The name of the test suite."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="groups" type="array" default="" visibility="protected" line="86">
    <docblock>
      <description compact="The test groups of the test suite."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="tests" type="array" default="" visibility="protected" line="93">
    <docblock>
      <description compact="The tests in the test suite."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="numTests" type="integer" default="1" visibility="protected" line="100">
    <docblock>
      <description compact="The number of tests in the test suite."/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="testCase" type="boolean" default="false" visibility="protected" line="105">
    <docblock>
      <description/>
      <var type="object">
        <type full="bool" namespace="" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="foundClasses" type="array" default="" visibility="protected" line="110">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="iteratorFilter" type="{unknown}" default="" constant="null" visibility="private" line="115">
    <docblock>
      <description/>
      <var type="object">
        <type full="PHPUnit_Runner_Filter_Factory" namespace="" name="PHPUnit_Runner_Filter_Factory"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="139" end="210" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs a new TestSuite:">- PHPUnit_Framework_TestSuite() constructs an empty TestSuite.

  - PHPUnit_Framework_TestSuite(ReflectionClass) constructs a
    TestSuite from the given class.

  - PHPUnit_Framework_TestSuite(ReflectionClass, String)
    constructs a TestSuite from the given class with the given
    name.

  - PHPUnit_Framework_TestSuite(String) either constructs a
    TestSuite from the given class (if the passed string is the
    name of an existing class) or constructs an empty TestSuite
    with the given name.</description>
      <param type="mixed" variable="$theClass"/>
      <param type="string" variable="$name"/>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
    </docblock>
    <parameter name="theClass" byreference="false" type="string" default="''"/>
    <parameter name="name" byreference="false" type="string" default="''"/>
  </constructor>
  <method name="toString" start="217" end="220" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a string representation of the test suite."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="addTest" start="228" end="253" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a test to the suite."/>
      <param type="object" variable="$test">
        <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
      </param>
      <param type="array" variable="$groups"/>
    </docblock>
    <parameter name="test" byreference="false" type="object">
      <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
    </parameter>
    <parameter name="groups" byreference="false" type="array" default=""/>
  </method>
  <method name="addTestSuite" start="262" end="302" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds the tests from the given class to the suite."/>
      <param type="mixed" variable="$testClass"/>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
    </docblock>
    <parameter name="testClass" byreference="false" type="{unknown}"/>
  </method>
  <method name="addTestFile" start="318" end="387" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Wraps both &lt;code&gt;addTest()&lt;/code&gt; and &lt;code&gt;addTestSuite&lt;/code&gt; as well as the separate import statements for the user's convenience.">If the named file cannot be read or there are no new tests that can be
added, a &lt;code&gt;PHPUnit_Framework_Warning&lt;/code&gt; will be created instead,
leaving the current test run untouched.</description>
      <param type="string" variable="$filename"/>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
      <since value="Method available since Release 2.3.0"/>
    </docblock>
    <parameter name="filename" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="The given file may contain further stub classes in addition to the" line="332"/>
      <comment value="test class itself. Figure out the actual test class." line="333"/>
      <comment value="The diff is empty in case a parent class (with test methods) is added" line="338"/>
      <comment value="AFTER a child class that inherited from it. To account for that case," line="339"/>
      <comment value="cumulate all discovered classes, so the parent class may be found in" line="340"/>
      <comment value="a later invocation." line="341"/>
      <comment value="The test class's name must match the filename, either in full, or as" line="349"/>
      <comment value="a PEAR/PSR-0 prefixed shortname ('NameSpace_ShortName'), or as a" line="350"/>
      <comment value="PSR-1 local shortname ('NameSpace\ShortName'). The comparison must be" line="351"/>
      <comment value="anchored to prevent false-positive matches (e.g., 'OtherShortName')." line="352"/>
    </inline>
  </method>
  <method name="addTestFiles" start="398" end="411" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Wrapper for addTestFile() that adds multiple test files."/>
      <param type="object" variable="$filenames">
        <type full="array|Iterator" namespace="" name="array|Iterator"/>
      </param>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
      <since value="Method available since Release 2.3.0"/>
    </docblock>
    <parameter name="filenames" byreference="false" type="{unknown}"/>
  </method>
  <method name="count" start="420" end="433" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Counts the number of test cases that will be run by this test."/>
      <param description="Indicates if cache is preferred." type="object" variable="$preferCache">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="int"/>
    </docblock>
    <parameter name="preferCache" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="createTest" start="443" end="614" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$theClass">
        <type full="ReflectionClass" namespace="" name="ReflectionClass"/>
      </param>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
      </return>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
    </docblock>
    <parameter name="theClass" byreference="false" type="object">
      <type full="ReflectionClass" namespace="" name="ReflectionClass"/>
    </parameter>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="createResult" start="621" end="624" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Creates a default TestResult object."/>
      <return type="object">
        <type full="PHPUnit_Framework_TestResult" namespace="" name="PHPUnit_Framework_TestResult"/>
      </return>
    </docblock>
  </method>
  <method name="getName" start="631" end="634" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the name of the suite."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getGroups" start="643" end="646" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the test groups of the suite."/>
      <return type="array"/>
      <since value="Method available since Release 3.2.0"/>
    </docblock>
  </method>
  <method name="getGroupDetails" start="648" end="651" abstract="false" final="false" static="false" visibility="public"/>
  <method name="setGroupDetails" start="660" end="663" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set tests groups of the test case"/>
      <param type="array" variable="$groups"/>
      <since value="Method available since Release 4.0.0"/>
    </docblock>
    <parameter name="groups" byreference="false" type="array"/>
  </method>
  <method name="run" start="672" end="761" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs the tests and collects their result in a TestResult."/>
      <param type="object" variable="$result">
        <type full="PHPUnit_Framework_TestResult" namespace="" name="PHPUnit_Framework_TestResult"/>
      </param>
      <return type="object">
        <type full="PHPUnit_Framework_TestResult" namespace="" name="PHPUnit_Framework_TestResult"/>
      </return>
    </docblock>
    <parameter name="result" byreference="false" type="{unknown}" default="" constant="null">
      <type full="PHPUnit_Framework_TestResult" namespace="" name="PHPUnit_Framework_TestResult"/>
    </parameter>
  </method>
  <method name="setRunTestInSeparateProcess" start="770" end="777" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$runTestInSeparateProcess">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <throws type="object">
        <type full="PHPUnit_Framework_Exception" namespace="" name="PHPUnit_Framework_Exception"/>
      </throws>
      <since value="Method available since Release 3.7.0"/>
    </docblock>
    <parameter name="runTestInSeparateProcess" byreference="false" type="{unknown}"/>
  </method>
  <method name="runTest" start="787" end="790" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs a test."/>
      <deprecated/>
      <param type="object" variable="$test">
        <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
      </param>
      <param type="object" variable="$result">
        <type full="PHPUnit_Framework_TestResult" namespace="" name="PHPUnit_Framework_TestResult"/>
      </param>
    </docblock>
    <parameter name="test" byreference="false" type="object">
      <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
    </parameter>
    <parameter name="result" byreference="false" type="object">
      <type full="PHPUnit_Framework_TestResult" namespace="" name="PHPUnit_Framework_TestResult"/>
    </parameter>
  </method>
  <method name="setName" start="797" end="800" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the name of the suite."/>
      <param type="string"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="testAt" start="809" end="816" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the test at the given index."/>
      <param type="int"/>
      <return type="object">
        <type full="PHPUnit_Framework_Test" namespace="" name="PHPUnit_Framework_Test"/>
      </return>
    </docblock>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="tests" start="823" end="826" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the tests as an enumeration."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setTests" start="835" end="838" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set tests of the test suite"/>
      <param type="array" variable="$tests"/>
      <since value="Method available since Release 4.0.0"/>
    </docblock>
    <parameter name="tests" byreference="false" type="array"/>
  </method>
  <method name="markTestSuiteSkipped" start="849" end="852" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Mark the test suite as skipped."/>
      <param type="string" variable="$message"/>
      <throws type="object">
        <type full="PHPUnit_Framework_SkippedTestSuiteError" namespace="" name="PHPUnit_Framework_SkippedTestSuiteError"/>
      </throws>
      <since value="Method available since Release 3.0.0"/>
    </docblock>
    <parameter name="message" byreference="false" type="string" default="''"/>
  </method>
  <method name="addTestMethod" start="858" end="893" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param type="object" variable="$class">
        <type full="ReflectionClass" namespace="" name="ReflectionClass"/>
      </param>
      <param type="object" variable="$method">
        <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
      </param>
    </docblock>
    <parameter name="class" byreference="false" type="object">
      <type full="ReflectionClass" namespace="" name="ReflectionClass"/>
    </parameter>
    <parameter name="method" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
  </method>
  <method name="isTestMethod" start="900" end="912" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$method">
        <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
      </param>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="method" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
    <inline>
      <comment value="@scenario on TestCase::testMethod()" line="906"/>
      <comment value="@test     on TestCase::testMethod()" line="907"/>
    </inline>
  </method>
  <method name="warning" start="919" end="922" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description/>
      <param type="string" variable="$message"/>
      <return type="object">
        <type full="PHPUnit_Framework_Warning" namespace="" name="PHPUnit_Framework_Warning"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
  </method>
  <method name="skipTest" start="933" end="936" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description/>
      <param type="string" variable="$class"/>
      <param type="string" variable="$methodName"/>
      <param type="string" variable="$message"/>
      <return type="object">
        <type full="PHPUnit_Framework_SkippedTestCase" namespace="" name="PHPUnit_Framework_SkippedTestCase"/>
      </return>
      <since value="Method available since Release 4.3.0"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
    <parameter name="message" byreference="false" type="{unknown}"/>
  </method>
  <method name="incompleteTest" start="947" end="950" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description/>
      <param type="string" variable="$class"/>
      <param type="string" variable="$methodName"/>
      <param type="string" variable="$message"/>
      <return type="object">
        <type full="PHPUnit_Framework_IncompleteTestCase" namespace="" name="PHPUnit_Framework_IncompleteTestCase"/>
      </return>
      <since value="Method available since Release 4.3.0"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="methodName" byreference="false" type="{unknown}"/>
    <parameter name="message" byreference="false" type="{unknown}"/>
  </method>
  <method name="setDisallowChangesToGlobalState" start="957" end="962" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$disallowChangesToGlobalState">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <since value="Method available since Release 4.6.0"/>
    </docblock>
    <parameter name="disallowChangesToGlobalState" byreference="false" type="{unknown}"/>
  </method>
  <method name="setBackupGlobals" start="969" end="974" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$backupGlobals">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <since value="Method available since Release 3.3.0"/>
    </docblock>
    <parameter name="backupGlobals" byreference="false" type="{unknown}"/>
  </method>
  <method name="setBackupStaticAttributes" start="981" end="987" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$backupStaticAttributes">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <since value="Method available since Release 3.4.0"/>
    </docblock>
    <parameter name="backupStaticAttributes" byreference="false" type="{unknown}"/>
  </method>
  <method name="getIterator" start="996" end="1005" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an iterator for this test suite."/>
      <return type="object">
        <type full="RecursiveIteratorIterator" namespace="" name="RecursiveIteratorIterator"/>
      </return>
      <since value="Method available since Release 3.1.0"/>
    </docblock>
  </method>
  <method name="injectFilter" start="1007" end="1015" abstract="false" final="false" static="false" visibility="public">
    <parameter name="filter" byreference="false" type="object">
      <type full="PHPUnit_Runner_Filter_Factory" namespace="" name="PHPUnit_Runner_Filter_Factory"/>
    </parameter>
  </method>
  <method name="setUp" start="1023" end="1025" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Template Method that is called before the tests of this test suite are run."/>
      <since value="Method available since Release 3.1.0"/>
    </docblock>
  </method>
  <method name="tearDown" start="1033" end="1035" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Template Method that is called after the tests of this test suite have finished running."/>
      <since value="Method available since Release 3.1.0"/>
    </docblock>
  </method>
</class>
