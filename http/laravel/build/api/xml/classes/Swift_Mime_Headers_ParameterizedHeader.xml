<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Swift_Mime_Headers_ParameterizedHeader" namespace="" name="Swift_Mime_Headers_ParameterizedHeader" abstract="false" final="false" start="16" end="260">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers" file="ParameterizedHeader.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers/ParameterizedHeader.php" size="7428" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="e40ed9c48d4bd220e965252a7e0a4ef1ef1a0f13" relative="vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers/ParameterizedHeader.php"/>
  <docblock>
    <description compact="An abstract base MIME Header."/>
    <author value="Chris Corbyn"/>
  </docblock>
  <extends full="Swift_Mime_Headers_UnstructuredHeader" namespace="" name="Swift_Mime_Headers_UnstructuredHeader"/>
  <implements full="Swift_Mime_ParameterizedHeader" namespace="" name="Swift_Mime_ParameterizedHeader"/>
  <constant type="string" name="TOKEN_REGEX" value="'(?:[\x21\x23-\x27\x2A\x2B\x2D\x2E\x30-\x39\x41-\x5A\x5E-\x7E]+)'">
    <docblock>
      <description compact="RFC 2231's definition of a token."/>
      <var type="string"/>
    </docblock>
  </constant>
  <member name="_paramEncoder" visibility="private" line="30">
    <docblock>
      <description compact="The Encoder used to encode the parameters."/>
      <var type="object">
        <type full="Swift_Encoder" namespace="" name="Swift_Encoder"/>
      </var>
    </docblock>
  </member>
  <member name="_params" type="array" default="" visibility="private" line="37">
    <docblock>
      <description compact="The parameters as an associative array."/>
      <var type="array" of="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="47" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a new ParameterizedHeader with $name."/>
      <param type="string" variable="$name"/>
      <param type="object" variable="$encoder">
        <type full="Swift_Mime_HeaderEncoder" namespace="" name="Swift_Mime_HeaderEncoder"/>
      </param>
      <param description="optional" type="object" variable="$paramEncoder">
        <type full="Swift_Encoder" namespace="" name="Swift_Encoder"/>
      </param>
      <param type="object" variable="$grammar">
        <type full="Swift_Mime_Grammar" namespace="" name="Swift_Mime_Grammar"/>
      </param>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="encoder" byreference="false" type="object">
      <type full="Swift_Mime_HeaderEncoder" namespace="" name="Swift_Mime_HeaderEncoder"/>
    </parameter>
    <parameter name="paramEncoder" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Swift_Encoder" namespace="" name="Swift_Encoder"/>
    </parameter>
    <parameter name="grammar" byreference="false" type="object">
      <type full="Swift_Mime_Grammar" namespace="" name="Swift_Mime_Grammar"/>
    </parameter>
  </constructor>
  <method name="getFieldType" start="61" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the type of Header that this instance represents."/>
      <see value="TYPE_TEXT, TYPE_PARAMETERIZED, TYPE_MAILBOX"/>
      <see value="TYPE_DATE, TYPE_ID, TYPE_PATH"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="setCharset" start="71" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the character set used in this Header."/>
      <param type="string" variable="$charset"/>
    </docblock>
    <parameter name="charset" byreference="false" type="{unknown}"/>
  </method>
  <method name="setParameter" start="85" end="88" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the value of $parameter."/>
      <param type="string" variable="$parameter"/>
      <param type="string" variable="$value"/>
    </docblock>
    <parameter name="parameter" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="getParameter" start="97" end="104" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the value of $parameter."/>
      <param type="string" variable="$parameter"/>
      <return type="string"/>
    </docblock>
    <parameter name="parameter" byreference="false" type="{unknown}"/>
  </method>
  <method name="setParameters" start="111" end="115" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set an associative array of parameter names mapped to values."/>
      <param type="array" variable="$parameters" of="string"/>
    </docblock>
    <parameter name="parameters" byreference="false" type="array"/>
  </method>
  <method name="getParameters" start="122" end="125" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an associative array of parameter names mapped to values."/>
      <return type="array" of="string"/>
    </docblock>
  </method>
  <method name="getFieldBody" start="132" end="143" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the value of this header prepared for rendering."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="toTokens" start="155" end="171" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Generate a list of all tokens in the final header.">This doesn't need to be overridden in theory, but it is for implementation
reasons to prevent potential breakage of attributes.</description>
      <param description="The string to tokenize" type="string" variable="$string"/>
      <return description="An array of tokens as strings" type="array"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}" default="" constant="null"/>
    <inline>
      <comment value="Try creating any parameters" line="159"/>
    </inline>
  </method>
  <method name="_createParameter" start="181" end="233" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Render a RFC 2047 compliant header parameter from the $name and $value."/>
      <param type="string" variable="$name"/>
      <param type="string" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Allow room for parameter name, indices, &quot;=&quot; and DQUOTEs" line="186"/>
      <comment value="If it's not already a valid parameter value..." line="190"/>
      <comment value="Encode if we need to" line="204"/>
      <comment value="Need to add indices" line="219"/>
    </inline>
  </method>
  <method name="_getEndOfParameterValue" start="244" end="259" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns the parameter value from the &quot;=&quot; and beyond."/>
      <param description="to append" type="string" variable="$value"/>
      <param type="object" variable="$encoded">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param type="object" variable="$firstLine">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="encoded" byreference="false" type="boolean" default="false"/>
    <parameter name="firstLine" byreference="false" type="boolean" default="false"/>
  </method>
</class>
