<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ClassPreloader\ClassPreloader" namespace="ClassPreloader" name="ClassPreloader" abstract="false" final="false" start="26" end="181">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/classpreloader/classpreloader/src" file="ClassPreloader.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/classpreloader/classpreloader/src/ClassPreloader.php" size="4758" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="2c607285cac5e515b254476debf6f9b79173d712" relative="vendor/classpreloader/classpreloader/src/ClassPreloader.php"/>
  <docblock>
    <description compact="This is the class preloader class.">This is the main point of entry for interacting with this package.</description>
  </docblock>
  <member name="printer" visibility="protected" line="33">
    <docblock>
      <description compact="The printer."/>
      <var type="object">
        <type full="\PhpParser\PrettyPrinter\Standard" namespace="\PhpParser\PrettyPrinter" name="Standard"/>
      </var>
    </docblock>
  </member>
  <member name="parser" visibility="protected" line="40">
    <docblock>
      <description compact="The parser."/>
      <var type="object">
        <type full="\PhpParser\Parser" namespace="\PhpParser" name="Parser"/>
      </var>
    </docblock>
  </member>
  <member name="traverser" visibility="protected" line="47">
    <docblock>
      <description compact="The traverser."/>
      <var type="object">
        <type full="\ClassPreloader\Parser\NodeTraverser" namespace="\ClassPreloader\Parser" name="NodeTraverser"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="58" end="63" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new class preloader instance."/>
      <param type="object" variable="$printer">
        <type full="\PhpParser\PrettyPrinter\Standard" namespace="\PhpParser\PrettyPrinter" name="Standard"/>
      </param>
      <param type="object" variable="$parser">
        <type full="\PhpParser\Parser" namespace="\PhpParser" name="Parser"/>
      </param>
      <param type="object" variable="$traverser">
        <type full="\ClassPreloader\Parser\NodeTraverser" namespace="\ClassPreloader\Parser" name="NodeTraverser"/>
      </param>
      <return type="object">
        <type full="ClassPreloader\void" namespace="ClassPreloader" name="void"/>
      </return>
    </docblock>
    <parameter name="printer" byreference="false" type="object">
      <type full="PhpParser\PrettyPrinter\Standard" namespace="PhpParser\PrettyPrinter" name="Standard"/>
    </parameter>
    <parameter name="parser" byreference="false" type="object">
      <type full="PhpParser\Parser" namespace="PhpParser" name="Parser"/>
    </parameter>
    <parameter name="traverser" byreference="false" type="object">
      <type full="ClassPreloader\Parser\NodeTraverser" namespace="ClassPreloader\Parser" name="NodeTraverser"/>
    </parameter>
  </constructor>
  <method name="prepareOutput" start="75" end="100" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Prepare the output file and directory."/>
      <param type="string" variable="$output"/>
      <param type="object" variable="$strict">
        <type full="ClassPreloader\bool" namespace="ClassPreloader" name="bool"/>
      </param>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <return type="resource"/>
    </docblock>
    <parameter name="output" byreference="false" type="{unknown}"/>
    <parameter name="strict" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getCode" start="111" end="140" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a pretty printed string of code from a file while applying visitors."/>
      <param type="string" variable="$file"/>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <return type="string"/>
    </docblock>
    <parameter name="file" byreference="false" type="{unknown}"/>
    <parameter name="comments" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="getCodeWrappedIntoNamespace" start="150" end="159" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Wrap the code into a namespace."/>
      <param type="array" variable="$parsed"/>
      <param type="string" variable="$pretty"/>
      <return type="string"/>
    </docblock>
    <parameter name="parsed" byreference="false" type="array"/>
    <parameter name="pretty" byreference="false" type="{unknown}"/>
  </method>
  <method name="parsedCodeHasNamespaces" start="168" end="180" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Check parsed code for having namespaces."/>
      <param type="array" variable="$parsed"/>
      <return type="object">
        <type full="ClassPreloader\bool" namespace="ClassPreloader" name="bool"/>
      </return>
    </docblock>
    <parameter name="parsed" byreference="false" type="array"/>
    <inline>
      <comment value="Namespaces can only be on first level in the code," line="170"/>
      <comment value="so we make only check on it." line="171"/>
    </inline>
  </method>
</class>
