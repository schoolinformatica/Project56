<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Monolog\RegistryTest" namespace="Monolog" name="RegistryTest" abstract="false" final="false" start="14" end="153">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/monolog/monolog/tests/Monolog" file="RegistryTest.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/monolog/monolog/tests/Monolog/RegistryTest.php" size="3972" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="da3632d9049210b4af41c7dc8591c5bec6460163" relative="vendor/monolog/monolog/tests/Monolog/RegistryTest.php"/>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <method name="setUp" start="16" end="19" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="testHasLogger" start="25" end="33" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <dataprovider value="hasLoggerProvider"/>
      <covers value="Monolog\Registry::hasLogger"/>
    </docblock>
    <parameter name="loggersToAdd" byreference="false" type="array"/>
    <parameter name="loggersToCheck" byreference="false" type="array"/>
    <parameter name="expectedResult" byreference="false" type="array"/>
  </method>
  <method name="hasLoggerProvider" start="35" end="61" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testClearClears" start="66" end="73" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="Monolog\Registry::clear"/>
    </docblock>
  </method>
  <method name="testRemovesLogger" start="80" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <dataprovider value="removedLoggerProvider"/>
      <covers value="Monolog\Registry::addLogger"/>
      <covers value="Monolog\Registry::removeLogger"/>
    </docblock>
    <parameter name="loggerToAdd" byreference="false" type="{unknown}"/>
    <parameter name="remove" byreference="false" type="{unknown}"/>
  </method>
  <method name="removedLoggerProvider" start="89" end="97" abstract="false" final="false" static="false" visibility="public"/>
  <method name="testGetsSameLogger" start="104" end="114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="Monolog\Registry::addLogger"/>
      <covers value="Monolog\Registry::getInstance"/>
      <covers value="Monolog\Registry::__callStatic"/>
    </docblock>
  </method>
  <method name="testFailsOnNonExistantLogger" start="120" end="123" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
      <covers value="Monolog\Registry::getInstance"/>
    </docblock>
  </method>
  <method name="testReplacesLogger" start="128" end="138" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <covers value="Monolog\Registry::addLogger"/>
    </docblock>
  </method>
  <method name="testFailsOnUnspecifiedReplacement" start="144" end="152" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <expectedexception value="\InvalidArgumentException"/>
      <covers value="Monolog\Registry::addLogger"/>
    </docblock>
  </method>
</class>
