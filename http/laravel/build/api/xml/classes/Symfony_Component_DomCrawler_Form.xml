<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\DomCrawler\Form" namespace="Symfony\Component\DomCrawler" name="Form" abstract="false" final="false" start="22" end="471">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/dom-crawler" file="Form.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/dom-crawler/Form.php" size="14664" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="41ead7a505dc31ed14edfe017f4bf9b276a1aa82" relative="vendor/symfony/dom-crawler/Form.php"/>
  <docblock>
    <description compact="Form represents an HTML form."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <extends full="Symfony\Component\DomCrawler\Link" namespace="Symfony\Component\DomCrawler" name="Link"/>
  <implements full="ArrayAccess" namespace="" name="ArrayAccess"/>
  <member name="button" visibility="private" line="27">
    <docblock>
      <description/>
      <var type="object">
        <type full="\DOMElement" namespace="" name="DOMElement"/>
      </var>
    </docblock>
  </member>
  <member name="fields" visibility="private" line="32">
    <docblock>
      <description/>
      <var type="object">
        <type full="Symfony\Component\DomCrawler\FormFieldRegistry" namespace="Symfony\Component\DomCrawler" name="FormFieldRegistry"/>
      </var>
    </docblock>
  </member>
  <member name="baseHref" visibility="private" line="37">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="49" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="A \DOMElement instance" type="object" variable="$node">
        <type full="\DOMElement" namespace="" name="DOMElement"/>
      </param>
      <param description="The URI of the page where the form is embedded" type="string" variable="$currentUri"/>
      <param description="The method to use for the link (if null, it defaults to the method defined by the form)" type="string" variable="$method"/>
      <param description="The URI of the &lt;base&gt; used for relative links, but not for empty action" type="string" variable="$baseHref"/>
      <throws description="if the node is not a button inside a form tag" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="DOMElement" namespace="" name="DOMElement"/>
    </parameter>
    <parameter name="currentUri" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="baseHref" byreference="false" type="{unknown}" default="" constant="null"/>
  </constructor>
  <method name="getFormNode" start="62" end="65" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the form node associated with this form."/>
      <return description="A \DOMElement instance" type="object">
        <type full="\DOMElement" namespace="" name="DOMElement"/>
      </return>
    </docblock>
  </method>
  <method name="setValues" start="74" end="81" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the value of the fields."/>
      <param description="An array of field values" type="array" variable="$values"/>
      <return type="object">
        <type full="Symfony\Component\DomCrawler\Form" namespace="Symfony\Component\DomCrawler" name="Form"/>
      </return>
    </docblock>
    <parameter name="values" byreference="false" type="array"/>
  </method>
  <method name="getValues" start="90" end="104" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the field values.">The returned array does not include file fields (@see getFiles).</description>
      <return description="An array of field values." type="array"/>
    </docblock>
  </method>
  <method name="getFiles" start="111" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the file field values."/>
      <return description="An array of file field values." type="array"/>
    </docblock>
  </method>
  <method name="getPhpValues" start="140" end="153" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the field values as PHP.">This method converts fields with the array notation
(like foo[bar] to arrays) like PHP does.</description>
      <return description="An array of field values." type="array"/>
    </docblock>
  </method>
  <method name="getPhpFiles" start="163" end="176" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the file field values as PHP.">This method converts fields with the array notation
(like foo[bar] to arrays) like PHP does.</description>
      <return description="An array of field values." type="array"/>
    </docblock>
  </method>
  <method name="getUri" start="187" end="206" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the URI of the form.">The returned URI is not the same as the form "action" attribute.
This method merges the value if the method is GET to mimics
browser behavior.</description>
      <return description="The URI" type="string"/>
    </docblock>
  </method>
  <method name="getRawUri" start="208" end="211" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="getMethod" start="220" end="227" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the form method.">If no method is defined in the form, GET is returned.</description>
      <return description="The method" type="string"/>
    </docblock>
  </method>
  <method name="has" start="236" end="239" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns true if the named field exists."/>
      <param description="The field name" type="string" variable="$name"/>
      <return description="true if the field exists, false otherwise" type="object">
        <type full="Symfony\Component\DomCrawler\bool" namespace="Symfony\Component\DomCrawler" name="bool"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="remove" start="248" end="251" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a field from the form."/>
      <param description="The field name" type="string" variable="$name"/>
      <throws description="when the name is malformed" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="get" start="262" end="265" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets a named field."/>
      <param description="The field name" type="string" variable="$name"/>
      <return description="The field instance" type="object">
        <type full="Symfony\Component\DomCrawler\Field\FormField" namespace="Symfony\Component\DomCrawler\Field" name="FormField"/>
      </return>
      <throws description="When field is not present in this form" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="set" start="272" end="275" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a named field."/>
      <param description="The field" type="object" variable="$field">
        <type full="Symfony\Component\DomCrawler\Field\FormField" namespace="Symfony\Component\DomCrawler\Field" name="FormField"/>
      </param>
    </docblock>
    <parameter name="field" byreference="false" type="object">
      <type full="Symfony\Component\DomCrawler\Field\FormField" namespace="Symfony\Component\DomCrawler\Field" name="FormField"/>
    </parameter>
  </method>
  <method name="all" start="282" end="285" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets all fields."/>
      <return description="An array of fields" type="array" of="object">
        <type full="Symfony\Component\DomCrawler\FormField" namespace="Symfony\Component\DomCrawler" name="FormField"/>
      </return>
    </docblock>
  </method>
  <method name="offsetExists" start="294" end="297" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns true if the named field exists."/>
      <param description="The field name" type="string" variable="$name"/>
      <return description="true if the field exists, false otherwise" type="object">
        <type full="Symfony\Component\DomCrawler\bool" namespace="Symfony\Component\DomCrawler" name="bool"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetGet" start="308" end="311" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the value of a field."/>
      <param description="The field name" type="string" variable="$name"/>
      <return description="The associated Field instance" type="object">
        <type full="Symfony\Component\DomCrawler\Field\FormField" namespace="Symfony\Component\DomCrawler\Field" name="FormField"/>
      </return>
      <throws description="if the field does not exist" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetSet" start="321" end="324" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the value of a field."/>
      <param description="The field name" type="string" variable="$name"/>
      <param description="The value of the field" type="object" variable="$value">
        <type full="Symfony\Component\DomCrawler\string|array" namespace="Symfony\Component\DomCrawler" name="string|array"/>
      </param>
      <throws description="if the field does not exist" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetUnset" start="331" end="334" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a field from the form."/>
      <param description="The field name" type="string" variable="$name"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="disableValidation" start="341" end="350" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Disables validation."/>
      <return resolution="self" type="object">
        <type full="Symfony\Component\DomCrawler\Form" namespace="Symfony\Component\DomCrawler" name="Form"/>
      </return>
    </docblock>
  </method>
  <method name="setNode" start="361" end="387" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Sets the node for the form.">Expects a 'submit' button \DOMElement and finds the corresponding form element, or the form element itself.</description>
      <param description="A \DOMElement instance" type="object" variable="$node">
        <type full="\DOMElement" namespace="" name="DOMElement"/>
      </param>
      <throws description="If given node is not a button or input or does not have a form ancestor" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="DOMElement" namespace="" name="DOMElement"/>
    </parameter>
  </method>
  <method name="initialize" start="396" end="444" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Adds form elements related to this form.">Creates an internal copy of the submitted 'button' element and
the form node or the entire document depending on whether we need
to find non-descendant elements through HTML5 'form' attribute.</description>
    </docblock>
    <inline>
      <comment value="add submitted button if it has a valid name" line="402"/>
      <comment value="find form elements corresponding to the current form" line="423"/>
    </inline>
  </method>
  <method name="addField" start="446" end="470" abstract="false" final="false" static="false" visibility="private">
    <parameter name="node" byreference="false" type="object">
      <type full="DOMElement" namespace="" name="DOMElement"/>
    </parameter>
  </method>
</class>
