<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder" abstract="false" final="false" start="43" end="798">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/finder" file="Finder.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/finder/Finder.php" size="21615" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="d5daf3588c2a229dddfc273fe923c43c95d4bfa4" relative="vendor/symfony/finder/Finder.php"/>
  <docblock>
    <description compact="Finder allows to build rules to find files and directories.">It is a thin wrapper around several specialized iterator classes.

All rules may be invoked several times.

All methods return the current Finder object to allow easy chaining:

$finder = Finder::create()-&gt;files()-&gt;name('*.php')-&gt;in(__DIR__);</description>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <implements full="Countable" namespace="" name="Countable"/>
  <constant type="integer" name="IGNORE_VCS_FILES" value="1"/>
  <constant type="integer" name="IGNORE_DOT_FILES" value="2"/>
  <member name="mode" type="integer" default="0" visibility="private" line="48"/>
  <member name="names" type="array" default="" visibility="private" line="49"/>
  <member name="notNames" type="array" default="" visibility="private" line="50"/>
  <member name="exclude" type="array" default="" visibility="private" line="51"/>
  <member name="filters" type="array" default="" visibility="private" line="52"/>
  <member name="depths" type="array" default="" visibility="private" line="53"/>
  <member name="sizes" type="array" default="" visibility="private" line="54"/>
  <member name="followLinks" type="boolean" default="false" visibility="private" line="55"/>
  <member name="sort" type="boolean" default="false" visibility="private" line="56"/>
  <member name="ignore" type="integer" default="0" visibility="private" line="57"/>
  <member name="dirs" type="array" default="" visibility="private" line="58"/>
  <member name="dates" type="array" default="" visibility="private" line="59"/>
  <member name="iterators" type="array" default="" visibility="private" line="60"/>
  <member name="contains" type="array" default="" visibility="private" line="61"/>
  <member name="notContains" type="array" default="" visibility="private" line="62"/>
  <member name="adapters" type="array" default="" visibility="private" line="63"/>
  <member name="paths" type="array" default="" visibility="private" line="64"/>
  <member name="notPaths" type="array" default="" visibility="private" line="65"/>
  <member name="ignoreUnreadableDirs" type="boolean" default="false" visibility="private" line="66"/>
  <member name="vcsPatterns" type="array" default="" visibility="private" line="68"/>
  <constructor name="__construct" start="73" end="83" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
    </docblock>
  </constructor>
  <method name="create" start="90" end="93" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Creates a new Finder."/>
      <return description="A new Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
  </method>
  <method name="addAdapter" start="103" end="112" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers a finder engine implementation."/>
      <param description="An adapter instance" type="object" variable="$adapter">
        <type full="Symfony\Component\Finder\Adapter\AdapterInterface" namespace="Symfony\Component\Finder\Adapter" name="AdapterInterface"/>
      </param>
      <param description="Highest is selected first" type="int" variable="$priority"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
    <parameter name="adapter" byreference="false" type="object">
      <type full="Symfony\Component\Finder\Adapter\AdapterInterface" namespace="Symfony\Component\Finder\Adapter" name="AdapterInterface"/>
    </parameter>
    <parameter name="priority" byreference="false" type="integer" default="0"/>
  </method>
  <method name="useBestAdapter" start="119" end="124" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the selected adapter to the best one according to the current platform the code is run on."/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
  </method>
  <method name="setAdapter" start="135" end="145" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Selects the adapter to use."/>
      <param type="string" variable="$name"/>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="removeAdapters" start="152" end="157" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes all adapters registered in the finder."/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
  </method>
  <method name="getAdapters" start="164" end="169" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns registered adapters ordered by priority without extra information."/>
      <return type="array" of="object">
        <type full="Symfony\Component\Finder\AdapterInterface" namespace="Symfony\Component\Finder" name="AdapterInterface"/>
      </return>
    </docblock>
  </method>
  <method name="directories" start="176" end="181" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Restricts the matching to directories only."/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
  </method>
  <method name="files" start="188" end="193" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Restricts the matching to files only."/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
  </method>
  <method name="depth" start="210" end="215" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds tests for the directory depth.">Usage:

  $finder-&gt;depth('&gt; 1') // the Finder will start matching at level 1.
  $finder-&gt;depth('&lt; 3') // the Finder will descend at most 3 levels of directories below the starting point.</description>
      <param description="The depth level expression" type="int" variable="$level"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="DepthRangeFilterIterator"/>
      <see value="NumberComparator"/>
    </docblock>
    <parameter name="level" byreference="false" type="{unknown}"/>
  </method>
  <method name="date" start="235" end="240" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds tests for file dates (last modified).">The date must be something that strtotime() is able to parse:

  $finder-&gt;date('since yesterday');
  $finder-&gt;date('until 2 days ago');
  $finder-&gt;date('&gt; now - 2 hours');
  $finder-&gt;date('&gt;= 2005-10-15');</description>
      <param description="A date range string" type="string" variable="$date"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="strtotime"/>
      <see value="DateRangeFilterIterator"/>
      <see value="DateComparator"/>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
  </method>
  <method name="name" start="257" end="262" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds rules that files must match.">You can use patterns (delimited with / sign), globs or simple strings.

$finder-&gt;name('*.php')
$finder-&gt;name('/\.php$/') // same as above
$finder-&gt;name('test.php')</description>
      <param description="A pattern (a regexp, a glob, or a string)" type="string" variable="$pattern"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="FilenameFilterIterator"/>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </method>
  <method name="notName" start="273" end="278" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds rules that files must not match."/>
      <param description="A pattern (a regexp, a glob, or a string)" type="string" variable="$pattern"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="FilenameFilterIterator"/>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </method>
  <method name="contains" start="294" end="299" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds tests that file contents must match.">Strings or PCRE patterns can be used:

$finder-&gt;contains('Lorem ipsum')
$finder-&gt;contains('/Lorem ipsum/i')</description>
      <param description="A pattern (string or regexp)" type="string" variable="$pattern"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="FilecontentFilterIterator"/>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </method>
  <method name="notContains" start="315" end="320" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds tests that file contents must not match.">Strings or PCRE patterns can be used:

$finder-&gt;notContains('Lorem ipsum')
$finder-&gt;notContains('/Lorem ipsum/i')</description>
      <param description="A pattern (string or regexp)" type="string" variable="$pattern"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="FilecontentFilterIterator"/>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </method>
  <method name="path" start="338" end="343" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds rules that filenames must match.">You can use patterns (delimited with / sign) or simple strings.

$finder-&gt;path('some/special/dir')
$finder-&gt;path('/some\/special\/dir/') // same as above

Use only / as dirname separator.</description>
      <param description="A pattern (a regexp or a string)" type="string" variable="$pattern"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="FilenameFilterIterator"/>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </method>
  <method name="notPath" start="361" end="366" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds rules that filenames must not match.">You can use patterns (delimited with / sign) or simple strings.

$finder-&gt;notPath('some/special/dir')
$finder-&gt;notPath('/some\/special\/dir/') // same as above

Use only / as dirname separator.</description>
      <param description="A pattern (a regexp or a string)" type="string" variable="$pattern"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="FilenameFilterIterator"/>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </method>
  <method name="size" start="382" end="387" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds tests for file sizes.">$finder-&gt;size('&gt; 10K');
$finder-&gt;size('&lt;= 1Ki');
$finder-&gt;size(4);</description>
      <param description="A size range string" type="string" variable="$size"/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="SizeRangeFilterIterator"/>
      <see value="NumberComparator"/>
    </docblock>
    <parameter name="size" byreference="false" type="{unknown}"/>
  </method>
  <method name="exclude" start="398" end="403" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Excludes directories."/>
      <param description="A directory path or an array of directories" type="object" variable="$dirs">
        <type full="Symfony\Component\Finder\string|array" namespace="Symfony\Component\Finder" name="string|array"/>
      </param>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="ExcludeDirectoryFilterIterator"/>
    </docblock>
    <parameter name="dirs" byreference="false" type="{unknown}"/>
  </method>
  <method name="ignoreDotFiles" start="414" end="423" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Excludes &quot;hidden&quot; directories and files (starting with a dot)."/>
      <param description="Whether to exclude &quot;hidden&quot; files or not" type="object" variable="$ignoreDotFiles">
        <type full="Symfony\Component\Finder\bool" namespace="Symfony\Component\Finder" name="bool"/>
      </param>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="ExcludeDirectoryFilterIterator"/>
    </docblock>
    <parameter name="ignoreDotFiles" byreference="false" type="{unknown}"/>
  </method>
  <method name="ignoreVCS" start="434" end="443" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Forces the finder to ignore version control directories."/>
      <param description="Whether to exclude VCS files or not" type="object" variable="$ignoreVCS">
        <type full="Symfony\Component\Finder\bool" namespace="Symfony\Component\Finder" name="bool"/>
      </param>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="ExcludeDirectoryFilterIterator"/>
    </docblock>
    <parameter name="ignoreVCS" byreference="false" type="{unknown}"/>
  </method>
  <method name="addVCSPattern" start="452" end="459" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Adds VCS patterns."/>
      <see value="ignoreVCS()"/>
      <param description="VCS patterns to ignore" type="array" variable="$pattern" of="object">
        <type full="Symfony\Component\Finder\string|string" namespace="Symfony\Component\Finder" name="string|string"/>
      </param>
    </docblock>
    <parameter name="pattern" byreference="false" type="{unknown}"/>
  </method>
  <method name="sort" start="474" end="479" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sorts files and directories by an anonymous function.">The anonymous function receives two \SplFileInfo instances to compare.

This can be slow as all the matching files and directories must be retrieved for comparison.</description>
      <param description="An anonymous function" type="object" variable="$closure">
        <type full="\Closure" namespace="" name="Closure"/>
      </param>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="SortableIterator"/>
    </docblock>
    <parameter name="closure" byreference="false" type="object">
      <type full="Closure" namespace="" name="Closure"/>
    </parameter>
  </method>
  <method name="sortByName" start="490" end="495" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sorts files and directories by name.">This can be slow as all the matching files and directories must be retrieved for comparison.</description>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="SortableIterator"/>
    </docblock>
  </method>
  <method name="sortByType" start="506" end="511" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sorts files and directories by type (directories before files), then by name.">This can be slow as all the matching files and directories must be retrieved for comparison.</description>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="SortableIterator"/>
    </docblock>
  </method>
  <method name="sortByAccessedTime" start="524" end="529" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sorts files and directories by the last accessed time.">This is the time that the file was last accessed, read or written to.

This can be slow as all the matching files and directories must be retrieved for comparison.</description>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="SortableIterator"/>
    </docblock>
  </method>
  <method name="sortByChangedTime" start="544" end="549" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sorts files and directories by the last inode changed time.">This is the time that the inode information was last modified (permissions, owner, group or other metadata).

On Windows, since inode is not available, changed time is actually the file creation time.

This can be slow as all the matching files and directories must be retrieved for comparison.</description>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="SortableIterator"/>
    </docblock>
  </method>
  <method name="sortByModifiedTime" start="562" end="567" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sorts files and directories by the last modified time.">This is the last time the actual contents of the file were last modified.

This can be slow as all the matching files and directories must be retrieved for comparison.</description>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="SortableIterator"/>
    </docblock>
  </method>
  <method name="filter" start="581" end="586" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Filters the iterator with an anonymous function.">The anonymous function receives a \SplFileInfo and must return false
to remove files.</description>
      <param description="An anonymous function" type="object" variable="$closure">
        <type full="\Closure" namespace="" name="Closure"/>
      </param>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <see value="CustomFilterIterator"/>
    </docblock>
    <parameter name="closure" byreference="false" type="object">
      <type full="Closure" namespace="" name="Closure"/>
    </parameter>
  </method>
  <method name="followLinks" start="593" end="598" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Forces the following of symlinks."/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
  </method>
  <method name="ignoreUnreadableDirs" start="609" end="614" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Tells finder to ignore unreadable directories.">By default, scanning unreadable directories content throws an AccessDeniedException.</description>
      <param type="object" variable="$ignore">
        <type full="Symfony\Component\Finder\bool" namespace="Symfony\Component\Finder" name="bool"/>
      </param>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
    <parameter name="ignore" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="in" start="625" end="642" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Searches files and directories which match defined rules."/>
      <param description="A directory path or an array of directories" type="object" variable="$dirs">
        <type full="Symfony\Component\Finder\string|array" namespace="Symfony\Component\Finder" name="string|array"/>
      </param>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <throws description="if one of the directories does not exist" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="dirs" byreference="false" type="{unknown}"/>
  </method>
  <method name="getIterator" start="653" end="673" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an Iterator for the current Finder configuration.">This method implements the IteratorAggregate interface.</description>
      <return description="An iterator" type="object">
        <type full="\Iterator" namespace="" name="Iterator"/>
      </return>
      <throws description="if the in() method has not been called" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
  </method>
  <method name="append" start="686" end="703" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Appends an existing set of files/directories to the finder.">The set can be another Finder, an Iterator, an IteratorAggregate, or even a plain array.</description>
      <param type="mixed" variable="$iterator"/>
      <return description="The finder" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
      <throws description="When the given argument is not iterable." type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="iterator" byreference="false" type="{unknown}"/>
  </method>
  <method name="count" start="710" end="713" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Counts all the results collected by the iterators."/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="sortAdapters" start="718" end="729" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <return description="The current Finder instance" type="object">
        <type full="Symfony\Component\Finder\Finder" namespace="Symfony\Component\Finder" name="Finder"/>
      </return>
    </docblock>
  </method>
  <method name="searchInDirectory" start="738" end="760" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param variable="$dir"/>
      <return type="object">
        <type full="\Iterator" namespace="" name="Iterator"/>
      </return>
      <throws description="When none of the adapters are supported" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="dir" byreference="false" type="{unknown}"/>
  </method>
  <method name="buildAdapter" start="767" end="785" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="object" variable="$adapter">
        <type full="Symfony\Component\Finder\Adapter\AdapterInterface" namespace="Symfony\Component\Finder\Adapter" name="AdapterInterface"/>
      </param>
      <return type="object">
        <type full="Symfony\Component\Finder\Adapter\AdapterInterface" namespace="Symfony\Component\Finder\Adapter" name="AdapterInterface"/>
      </return>
    </docblock>
    <parameter name="adapter" byreference="false" type="object">
      <type full="Symfony\Component\Finder\Adapter\AdapterInterface" namespace="Symfony\Component\Finder\Adapter" name="AdapterInterface"/>
    </parameter>
  </method>
  <method name="resetAdapterSelection" start="790" end="797" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Unselects all adapters."/>
    </docblock>
  </method>
</class>
