<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="spec\PhpSpec\Runner\ExampleRunnerSpec" namespace="spec\PhpSpec\Runner" name="ExampleRunnerSpec" abstract="false" final="false" start="21" end="134">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpspec/phpspec/spec/PhpSpec/Runner" file="ExampleRunnerSpec.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpspec/phpspec/spec/PhpSpec/Runner/ExampleRunnerSpec.php" size="5360" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="c1ac5856e1ee49346ef19346fc75044a534bc0cf" relative="vendor/phpspec/phpspec/spec/PhpSpec/Runner/ExampleRunnerSpec.php"/>
  <extends full="PhpSpec\ObjectBehavior" namespace="PhpSpec" name="ObjectBehavior"/>
  <method name="let" start="23" end="32" abstract="false" final="false" static="false" visibility="public">
    <parameter name="dispatcher" byreference="false" type="object">
      <type full="Symfony\Component\EventDispatcher\EventDispatcherInterface" namespace="Symfony\Component\EventDispatcher" name="EventDispatcherInterface"/>
    </parameter>
    <parameter name="presenter" byreference="false" type="object">
      <type full="PhpSpec\Formatter\Presenter\PresenterInterface" namespace="PhpSpec\Formatter\Presenter" name="PresenterInterface"/>
    </parameter>
    <parameter name="example" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\ExampleNode" namespace="PhpSpec\Loader\Node" name="ExampleNode"/>
    </parameter>
    <parameter name="specification" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\SpecificationNode" namespace="PhpSpec\Loader\Node" name="SpecificationNode"/>
    </parameter>
    <parameter name="specReflection" byreference="false" type="object">
      <type full="ReflectionClass" namespace="" name="ReflectionClass"/>
    </parameter>
    <parameter name="exampReflection" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
    <parameter name="context" byreference="false" type="object">
      <type full="PhpSpec\SpecificationInterface" namespace="PhpSpec" name="SpecificationInterface"/>
    </parameter>
  </method>
  <method name="it_executes_example_in_newly_created_context" start="34" end="43" abstract="false" final="false" static="false" visibility="public">
    <parameter name="example" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\ExampleNode" namespace="PhpSpec\Loader\Node" name="ExampleNode"/>
    </parameter>
    <parameter name="exampReflection" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
    <parameter name="context" byreference="false" type="object">
      <type full="PhpSpec\SpecificationInterface" namespace="PhpSpec" name="SpecificationInterface"/>
    </parameter>
  </method>
  <method name="it_dispatches_ExampleEvent_with_pending_status_if_example_is_pending" start="45" end="56" abstract="false" final="false" static="false" visibility="public">
    <parameter name="dispatcher" byreference="false" type="object">
      <type full="Symfony\Component\EventDispatcher\EventDispatcherInterface" namespace="Symfony\Component\EventDispatcher" name="EventDispatcherInterface"/>
    </parameter>
    <parameter name="example" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\ExampleNode" namespace="PhpSpec\Loader\Node" name="ExampleNode"/>
    </parameter>
  </method>
  <method name="it_dispatches_ExampleEvent_with_failed_status_if_matcher_throws_exception" start="58" end="74" abstract="false" final="false" static="false" visibility="public">
    <parameter name="dispatcher" byreference="false" type="object">
      <type full="Symfony\Component\EventDispatcher\EventDispatcherInterface" namespace="Symfony\Component\EventDispatcher" name="EventDispatcherInterface"/>
    </parameter>
    <parameter name="example" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\ExampleNode" namespace="PhpSpec\Loader\Node" name="ExampleNode"/>
    </parameter>
    <parameter name="exampReflection" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
    <parameter name="context" byreference="false" type="object">
      <type full="PhpSpec\SpecificationInterface" namespace="PhpSpec" name="SpecificationInterface"/>
    </parameter>
  </method>
  <method name="it_dispatches_ExampleEvent_with_failed_status_if_example_throws_exception" start="76" end="91" abstract="false" final="false" static="false" visibility="public">
    <parameter name="dispatcher" byreference="false" type="object">
      <type full="Symfony\Component\EventDispatcher\EventDispatcherInterface" namespace="Symfony\Component\EventDispatcher" name="EventDispatcherInterface"/>
    </parameter>
    <parameter name="example" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\ExampleNode" namespace="PhpSpec\Loader\Node" name="ExampleNode"/>
    </parameter>
    <parameter name="exampReflection" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
    <parameter name="context" byreference="false" type="object">
      <type full="PhpSpec\SpecificationInterface" namespace="PhpSpec" name="SpecificationInterface"/>
    </parameter>
  </method>
  <method name="it_runs_all_supported_maintainers_before_and_after_each_example" start="93" end="109" abstract="false" final="false" static="false" visibility="public">
    <parameter name="example" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\ExampleNode" namespace="PhpSpec\Loader\Node" name="ExampleNode"/>
    </parameter>
    <parameter name="exampReflection" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
    <parameter name="maintainer" byreference="false" type="object">
      <type full="PhpSpec\Runner\Maintainer\MaintainerInterface" namespace="PhpSpec\Runner\Maintainer" name="MaintainerInterface"/>
    </parameter>
  </method>
  <method name="it_runs_let_and_letgo_maintainer_before_and_after_each_example_if_the_example_throws_an_exception" start="111" end="133" abstract="false" final="false" static="false" visibility="public">
    <parameter name="example" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\ExampleNode" namespace="PhpSpec\Loader\Node" name="ExampleNode"/>
    </parameter>
    <parameter name="specification" byreference="false" type="object">
      <type full="PhpSpec\Loader\Node\SpecificationNode" namespace="PhpSpec\Loader\Node" name="SpecificationNode"/>
    </parameter>
    <parameter name="specReflection" byreference="false" type="object">
      <type full="ReflectionClass" namespace="" name="ReflectionClass"/>
    </parameter>
    <parameter name="exampReflection" byreference="false" type="object">
      <type full="ReflectionMethod" namespace="" name="ReflectionMethod"/>
    </parameter>
    <parameter name="maintainer" byreference="false" type="object">
      <type full="PhpSpec\Runner\Maintainer\LetAndLetgoMaintainer" namespace="PhpSpec\Runner\Maintainer" name="LetAndLetgoMaintainer"/>
    </parameter>
    <parameter name="context" byreference="false" type="object">
      <type full="PhpSpec\SpecificationInterface" namespace="PhpSpec" name="SpecificationInterface"/>
    </parameter>
  </method>
</class>
