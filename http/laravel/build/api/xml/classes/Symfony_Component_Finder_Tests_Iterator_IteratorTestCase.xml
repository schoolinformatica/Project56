<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Finder\Tests\Iterator\IteratorTestCase" namespace="Symfony\Component\Finder\Tests\Iterator" name="IteratorTestCase" abstract="true" final="false" start="14" end="98">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/finder/Tests/Iterator" file="IteratorTestCase.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/finder/Tests/Iterator/IteratorTestCase.php" size="3430" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="47f41353d01a202b11356665117893aa3baa0703" relative="vendor/symfony/finder/Tests/Iterator/IteratorTestCase.php"/>
  <extends full="PHPUnit_Framework_TestCase" namespace="" name="PHPUnit_Framework_TestCase"/>
  <method name="assertIterator" start="16" end="28" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="expected" byreference="false" type="{unknown}"/>
    <parameter name="iterator" byreference="false" type="object">
      <type full="Traversable" namespace="" name="Traversable"/>
    </parameter>
    <inline>
      <comment value="set iterator_to_array $use_key to false to avoid values merge" line="18"/>
      <comment value="this made FinderTest::testAppendWithAnArray() fail with GnuFinderAdapter" line="19"/>
    </inline>
  </method>
  <method name="assertOrderedIterator" start="30" end="35" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="expected" byreference="false" type="{unknown}"/>
    <parameter name="iterator" byreference="false" type="object">
      <type full="Traversable" namespace="" name="Traversable"/>
    </parameter>
  </method>
  <method name="assertOrderedIteratorForGroups" start="47" end="60" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Same as assertOrderedIterator, but checks the order of groups of  array elements.">@param array $expected - an array of arrays. For any two subarrays
     $a and $b such that $a goes before $b in $expected, the method
     asserts that any element of $a goes before any element of $b
     in the sequence generated by $iterator
 @param \Traversable $iterator</description>
    </docblock>
    <parameter name="expected" byreference="false" type="{unknown}"/>
    <parameter name="iterator" byreference="false" type="object">
      <type full="Traversable" namespace="" name="Traversable"/>
    </parameter>
  </method>
  <method name="assertIteratorInForeach" start="68" end="80" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Same as IteratorTestCase::assertIterator with foreach usage."/>
      <param type="array" variable="$expected"/>
      <param type="object" variable="$iterator">
        <type full="\Traversable" namespace="" name="Traversable"/>
      </param>
    </docblock>
    <parameter name="expected" byreference="false" type="{unknown}"/>
    <parameter name="iterator" byreference="false" type="object">
      <type full="Traversable" namespace="" name="Traversable"/>
    </parameter>
  </method>
  <method name="assertOrderedIteratorInForeach" start="88" end="97" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Same as IteratorTestCase::assertOrderedIterator with foreach usage."/>
      <param type="array" variable="$expected"/>
      <param type="object" variable="$iterator">
        <type full="\Traversable" namespace="" name="Traversable"/>
      </param>
    </docblock>
    <parameter name="expected" byreference="false" type="{unknown}"/>
    <parameter name="iterator" byreference="false" type="object">
      <type full="Traversable" namespace="" name="Traversable"/>
    </parameter>
  </method>
</class>
