<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpKernel\HttpCache\Esi" namespace="Symfony\Component\HttpKernel\HttpCache" name="Esi" abstract="false" final="false" start="29" end="295">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-kernel/HttpCache" file="Esi.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-kernel/HttpCache/Esi.php" size="10266" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="1e3f3c104efe9f738e5a00b4403ee4e44d4513cc" relative="vendor/symfony/http-kernel/HttpCache/Esi.php"/>
  <docblock>
    <description compact="Esi implements the ESI capabilities to Request and Response instances.">For more information, read the following W3C notes:

 * ESI Language Specification 1.0 (http://www.w3.org/TR/esi-lang)

 * Edge Architecture Specification (http://www.w3.org/TR/edge-arch)</description>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <implements full="Symfony\Component\HttpKernel\HttpCache\SurrogateInterface" namespace="Symfony\Component\HttpKernel\HttpCache" name="SurrogateInterface"/>
  <member name="contentTypes" visibility="private" line="31"/>
  <member name="phpEscapeMap" type="array" default="" visibility="private" line="32"/>
  <constructor name="__construct" start="43" end="46" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="An array of content-type that should be parsed for ESI information." type="array" variable="$contentTypes">(default: text/html, text/xml, application/xhtml+xml, and application/xml)</param>
    </docblock>
    <parameter name="contentTypes" byreference="false" type="array" default=""/>
  </constructor>
  <method name="getName" start="48" end="51" abstract="false" final="false" static="false" visibility="public"/>
  <method name="createCacheStrategy" start="58" end="61" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a new cache strategy instance."/>
      <return description="A ResponseCacheStrategyInterface instance" type="object">
        <type full="Symfony\Component\HttpKernel\HttpCache\ResponseCacheStrategyInterface" namespace="Symfony\Component\HttpKernel\HttpCache" name="ResponseCacheStrategyInterface"/>
      </return>
    </docblock>
  </method>
  <method name="hasSurrogateCapability" start="70" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks that at least one surrogate has ESI/1.0 capability."/>
      <param description="A Request instance" type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
      <return description="true if one surrogate has ESI/1.0 capability, false otherwise" type="object">
        <type full="Symfony\Component\HttpKernel\HttpCache\bool" namespace="Symfony\Component\HttpKernel\HttpCache" name="bool"/>
      </return>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
  </method>
  <method name="hasSurrogateEsiCapability" start="88" end="93" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks that at least one surrogate has ESI/1.0 capability."/>
      <param description="A Request instance" type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
      <return description="true if one surrogate has ESI/1.0 capability, false otherwise" type="object">
        <type full="Symfony\Component\HttpKernel\HttpCache\bool" namespace="Symfony\Component\HttpKernel\HttpCache" name="bool"/>
      </return>
      <deprecated value="since version 2.6, to be removed in 3.0. Use hasSurrogateCapability() instead"/>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
  </method>
  <method name="addSurrogateCapability" start="100" end="106" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds ESI/1.0 capability to the given Request."/>
      <param description="A Request instance" type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
  </method>
  <method name="addSurrogateEsiCapability" start="115" end="120" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds ESI/1.0 capability to the given Request."/>
      <param description="A Request instance" type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
      <deprecated value="since version 2.6, to be removed in 3.0. Use addSurrogateCapability() instead"/>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
  </method>
  <method name="addSurrogateControl" start="129" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds HTTP headers to specify that the Response needs to be parsed for ESI.">This method only adds an ESI HTTP header if the Response has some ESI tags.</description>
      <param description="A Response instance" type="object" variable="$response">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </param>
    </docblock>
    <parameter name="response" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </parameter>
  </method>
  <method name="needsParsing" start="143" end="150" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks that the Response needs to be parsed for ESI tags."/>
      <param description="A Response instance" type="object" variable="$response">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </param>
      <return description="true if the Response needs to be parsed, false otherwise" type="object">
        <type full="Symfony\Component\HttpKernel\HttpCache\bool" namespace="Symfony\Component\HttpKernel\HttpCache" name="bool"/>
      </return>
    </docblock>
    <parameter name="response" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </parameter>
  </method>
  <method name="needsEsiParsing" start="161" end="166" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks that the Response needs to be parsed for ESI tags."/>
      <param description="A Response instance" type="object" variable="$response">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </param>
      <return description="true if the Response needs to be parsed, false otherwise" type="object">
        <type full="Symfony\Component\HttpKernel\HttpCache\bool" namespace="Symfony\Component\HttpKernel\HttpCache" name="bool"/>
      </return>
      <deprecated value="since version 2.6, to be removed in 3.0. Use needsParsing() instead"/>
    </docblock>
    <parameter name="response" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </parameter>
  </method>
  <method name="renderIncludeTag" start="178" end="191" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Renders an ESI tag."/>
      <param description="A URI" type="string" variable="$uri"/>
      <param description="An alternate URI" type="string" variable="$alt"/>
      <param description="Whether to ignore errors or not" type="object" variable="$ignoreErrors">
        <type full="Symfony\Component\HttpKernel\HttpCache\bool" namespace="Symfony\Component\HttpKernel\HttpCache" name="bool"/>
      </param>
      <param description="A comment to add as an esi:include tag" type="string" variable="$comment"/>
      <return type="string"/>
    </docblock>
    <parameter name="uri" byreference="false" type="{unknown}"/>
    <parameter name="alt" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="ignoreErrors" byreference="false" type="boolean" default="true"/>
    <parameter name="comment" byreference="false" type="string" default="''"/>
  </method>
  <method name="process" start="201" end="258" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Replaces a Response ESI tags with the included resource content."/>
      <param description="A Request instance" type="object" variable="$request">
        <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
      </param>
      <param description="A Response instance" type="object" variable="$response">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </param>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
      </return>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="response" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </parameter>
    <inline>
      <comment value="we don't use a proper XML parser here as we can have ESI tags in a plain text response" line="213"/>
      <comment value="remove ESI/1.0 from the Surrogate-Control header" line="247"/>
    </inline>
  </method>
  <method name="handle" start="273" end="294" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Handles an ESI from the cache."/>
      <param description="An HttpCache instance" type="object" variable="$cache">
        <type full="Symfony\Component\HttpKernel\HttpCache\HttpCache" namespace="Symfony\Component\HttpKernel\HttpCache" name="HttpCache"/>
      </param>
      <param description="The main URI" type="string" variable="$uri"/>
      <param description="An alternative URI" type="string" variable="$alt"/>
      <param description="Whether to ignore errors or not" type="object" variable="$ignoreErrors">
        <type full="Symfony\Component\HttpKernel\HttpCache\bool" namespace="Symfony\Component\HttpKernel\HttpCache" name="bool"/>
      </param>
      <return type="string"/>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <throws type="object">
        <type full="\Exception" namespace="" name="Exception"/>
      </throws>
    </docblock>
    <parameter name="cache" byreference="false" type="object">
      <type full="Symfony\Component\HttpKernel\HttpCache\HttpCache" namespace="Symfony\Component\HttpKernel\HttpCache" name="HttpCache"/>
    </parameter>
    <parameter name="uri" byreference="false" type="{unknown}"/>
    <parameter name="alt" byreference="false" type="{unknown}"/>
    <parameter name="ignoreErrors" byreference="false" type="{unknown}"/>
  </method>
</class>
