<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Swift_Mime_Headers_AbstractHeader" namespace="" name="Swift_Mime_Headers_AbstractHeader" abstract="true" final="false" start="16" end="503">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers" file="AbstractHeader.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers/AbstractHeader.php" size="12878" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="c7e2b53c0cfed826b0bc31b3686acfdaef09ebdf" relative="vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Headers/AbstractHeader.php"/>
  <docblock>
    <description compact="An abstract base MIME Header."/>
    <author value="Chris Corbyn"/>
  </docblock>
  <implements full="Swift_Mime_Header" namespace="" name="Swift_Mime_Header"/>
  <member name="_name" visibility="private" line="23">
    <docblock>
      <description compact="The name of this Header."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="_grammar" visibility="private" line="30">
    <docblock>
      <description compact="The Grammar used for this Header."/>
      <var type="object">
        <type full="Swift_Mime_Grammar" namespace="" name="Swift_Mime_Grammar"/>
      </var>
    </docblock>
  </member>
  <member name="_encoder" visibility="private" line="37">
    <docblock>
      <description compact="The Encoder used to encode this Header."/>
      <var type="object">
        <type full="Swift_Encoder" namespace="" name="Swift_Encoder"/>
      </var>
    </docblock>
  </member>
  <member name="_lineLength" type="integer" default="78" visibility="private" line="44">
    <docblock>
      <description compact="The maximum length of a line in the header."/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="_lang" visibility="private" line="51">
    <docblock>
      <description compact="The language used in this Header."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="_charset" type="string" default="'utf-8'" visibility="private" line="58">
    <docblock>
      <description compact="The character set of the text in this Header."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="_cachedValue" type="{unknown}" default="" constant="null" visibility="private" line="65">
    <docblock>
      <description compact="The value of this Header, cached."/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="72" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a new Header."/>
      <param type="object" variable="$grammar">
        <type full="Swift_Mime_Grammar" namespace="" name="Swift_Mime_Grammar"/>
      </param>
    </docblock>
    <parameter name="grammar" byreference="false" type="object">
      <type full="Swift_Mime_Grammar" namespace="" name="Swift_Mime_Grammar"/>
    </parameter>
  </constructor>
  <method name="setCharset" start="82" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the character set used in this Header."/>
      <param type="string" variable="$charset"/>
    </docblock>
    <parameter name="charset" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCharset" start="96" end="99" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the character set used in this Header."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setLanguage" start="109" end="113" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the language used in this Header.">For example, for US English, 'en-us'.
This can be unspecified.</description>
      <param type="string" variable="$lang"/>
    </docblock>
    <parameter name="lang" byreference="false" type="{unknown}"/>
  </method>
  <method name="getLanguage" start="120" end="123" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the language used in this Header."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setEncoder" start="130" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the encoder used for encoding the header."/>
      <param type="object" variable="$encoder">
        <type full="Swift_Mime_HeaderEncoder" namespace="" name="Swift_Mime_HeaderEncoder"/>
      </param>
    </docblock>
    <parameter name="encoder" byreference="false" type="object">
      <type full="Swift_Mime_HeaderEncoder" namespace="" name="Swift_Mime_HeaderEncoder"/>
    </parameter>
  </method>
  <method name="getEncoder" start="141" end="144" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the encoder used for encoding this Header."/>
      <return type="object">
        <type full="Swift_Mime_HeaderEncoder" namespace="" name="Swift_Mime_HeaderEncoder"/>
      </return>
    </docblock>
  </method>
  <method name="setGrammar" start="151" end="155" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the grammar used for the header."/>
      <param type="object" variable="$grammar">
        <type full="Swift_Mime_Grammar" namespace="" name="Swift_Mime_Grammar"/>
      </param>
    </docblock>
    <parameter name="grammar" byreference="false" type="object">
      <type full="Swift_Mime_Grammar" namespace="" name="Swift_Mime_Grammar"/>
    </parameter>
  </method>
  <method name="getGrammar" start="162" end="165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the grammar used for this Header."/>
      <return type="object">
        <type full="Swift_Mime_Grammar" namespace="" name="Swift_Mime_Grammar"/>
      </return>
    </docblock>
  </method>
  <method name="getFieldName" start="172" end="175" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the name of this header (e.g. charset)."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setMaxLineLength" start="182" end="186" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the maximum length of lines in the header (excluding EOL)."/>
      <param type="int" variable="$lineLength"/>
    </docblock>
    <parameter name="lineLength" byreference="false" type="{unknown}"/>
  </method>
  <method name="getMaxLineLength" start="193" end="196" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the maximum permitted length of lines in this Header."/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="toString" start="205" end="208" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get this Header rendered as a RFC 2822 compliant string."/>
      <throws type="object">
        <type full="Swift_RfcComplianceException" namespace="" name="Swift_RfcComplianceException"/>
      </throws>
      <return type="string"/>
    </docblock>
  </method>
  <method name="__toString" start="217" end="220" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a string representation of this object."/>
      <return type="string"/>
      <see value="toString()"/>
    </docblock>
  </method>
  <method name="setFieldName" start="229" end="232" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Set the name of this Header field."/>
      <param type="string" variable="$name"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="createPhrase" start="245" end="271" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Produces a compliant, formatted RFC 2822 'phrase' based on the string given."/>
      <param type="object" variable="$header">
        <type full="Swift_Mime_Header" namespace="" name="Swift_Mime_Header"/>
      </param>
      <param description="as displayed" type="string" variable="$string"/>
      <param description="of the text" type="string" variable="$charset"/>
      <param type="object" variable="$encoder">
        <type full="Swift_Mime_HeaderEncoder" namespace="" name="Swift_Mime_HeaderEncoder"/>
      </param>
      <param description="the first line to make remove for header name" type="object" variable="$shorten">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="header" byreference="false" type="object">
      <type full="Swift_Mime_Header" namespace="" name="Swift_Mime_Header"/>
    </parameter>
    <parameter name="string" byreference="false" type="{unknown}"/>
    <parameter name="charset" byreference="false" type="{unknown}"/>
    <parameter name="encoder" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Swift_Mime_HeaderEncoder" namespace="" name="Swift_Mime_HeaderEncoder"/>
    </parameter>
    <parameter name="shorten" byreference="false" type="boolean" default="false"/>
    <inline>
      <comment value="Treat token as exactly what was given" line="247"/>
      <comment value="If it's not valid" line="249"/>
    </inline>
  </method>
  <method name="encodeWords" start="282" end="312" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Encode needed word tokens within a string of input."/>
      <param type="object" variable="$header">
        <type full="Swift_Mime_Header" namespace="" name="Swift_Mime_Header"/>
      </param>
      <param type="string" variable="$input"/>
      <param description="optional" type="string" variable="$usedLength"/>
      <return type="string"/>
    </docblock>
    <parameter name="header" byreference="false" type="object">
      <type full="Swift_Mime_Header" namespace="" name="Swift_Mime_Header"/>
    </parameter>
    <parameter name="input" byreference="false" type="{unknown}"/>
    <parameter name="usedLength" byreference="false" type="integer" default="1"/>
  </method>
  <method name="tokenNeedsEncoding" start="321" end="324" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Test if a token needs to be encoded or not."/>
      <param type="string" variable="$token"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="getEncodableWordTokens" start="333" end="355" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Splits a string into tokens in blocks of words which can be encoded quickly."/>
      <param type="string" variable="$string"/>
      <return type="array" of="string"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Split at all whitespace boundaries" line="338"/>
    </inline>
  </method>
  <method name="getTokenAsEncodedWord" start="365" end="397" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get a token as an encoded word for safe insertion into headers."/>
      <param description="token to encode" type="string" variable="$token"/>
      <param description="optional" type="int" variable="$firstLineOffset"/>
      <return type="string"/>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
    <parameter name="firstLineOffset" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="Adjust $firstLineOffset to account for space needed for syntax" line="367"/>
    </inline>
  </method>
  <method name="generateTokenLines" start="406" end="409" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Generates tokens from the given string which include CRLF as individual tokens."/>
      <param type="string" variable="$token"/>
      <return type="array" of="string"/>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="setCachedValue" start="416" end="419" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Set a value into the cache."/>
      <param type="string" variable="$value"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCachedValue" start="426" end="429" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the value in the cache."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="clearCachedValueIf" start="436" end="441" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Clear the cached value if $condition is met."/>
      <param type="object" variable="$condition">
        <type full="bool" namespace="" name="bool"/>
      </param>
    </docblock>
    <parameter name="condition" byreference="false" type="{unknown}"/>
  </method>
  <method name="toTokens" start="450" end="467" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Generate a list of all tokens in the final header."/>
      <param description="The string to tokenize" type="string" variable="$string"/>
      <return description="An array of tokens as strings" type="array"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}" default="" constant="null"/>
    <inline>
      <comment value="Generate atoms; split at all invisible boundaries followed by WSP" line="458"/>
    </inline>
  </method>
  <method name="_tokensToString" start="477" end="502" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Takes an array of tokens which appear in the header and turns them into an RFC 2822 compliant string, adding FWSP where needed."/>
      <param type="array" variable="$tokens" of="string"/>
      <return type="string"/>
    </docblock>
    <parameter name="tokens" byreference="false" type="array"/>
    <inline>
      <comment value="Build all tokens back into compliant header" line="484"/>
      <comment value="Implode with FWS (RFC 2822, 2.2.3)" line="500"/>
    </inline>
  </method>
</class>
