<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Monolog\ErrorHandler" namespace="Monolog" name="ErrorHandler" abstract="false" final="false" start="27" end="224">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/monolog/monolog/src/Monolog" file="ErrorHandler.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/monolog/monolog/src/Monolog/ErrorHandler.php" size="7674" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="dd8aa5068b7ede9e94dbbd0a661a61a21e0c9c9d" relative="vendor/monolog/monolog/src/Monolog/ErrorHandler.php"/>
  <docblock>
    <description compact="Monolog error handler">A facility to enable logging of runtime errors, exceptions and fatal errors.

Quick setup: &lt;code&gt;ErrorHandler::register($logger);&lt;/code&gt;</description>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
  </docblock>
  <member name="logger" visibility="private" line="29"/>
  <member name="previousExceptionHandler" visibility="private" line="31"/>
  <member name="uncaughtExceptionLevel" visibility="private" line="32"/>
  <member name="previousErrorHandler" visibility="private" line="34"/>
  <member name="errorLevelMap" visibility="private" line="35"/>
  <member name="hasFatalErrorHandler" visibility="private" line="37"/>
  <member name="fatalLevel" visibility="private" line="38"/>
  <member name="reservedMemory" visibility="private" line="39"/>
  <member name="fatalErrors" type="array" default="" visibility="private" line="40"/>
  <constructor name="__construct" start="42" end="45" abstract="false" final="false" static="false" visibility="public">
    <parameter name="logger" byreference="false" type="object">
      <type full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface"/>
    </parameter>
  </constructor>
  <method name="register" start="58" end="72" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Registers a new ErrorHandler for a given Logger">By default it will handle errors, exceptions and fatal errors</description>
      <param type="object" variable="$logger">
        <type full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface"/>
      </param>
      <param description="an array of E_* constant to LogLevel::* constant mapping, or false to disable error handling" type="object" variable="$errorLevelMap">
        <type full="Monolog\array|false" namespace="Monolog" name="array|false"/>
      </param>
      <param description="a LogLevel::* constant, or false to disable exception handling" type="object" variable="$exceptionLevel">
        <type full="Monolog\int|false" namespace="Monolog" name="int|false"/>
      </param>
      <param description="a LogLevel::* constant, or false to disable fatal error handling" type="object" variable="$fatalLevel">
        <type full="Monolog\int|false" namespace="Monolog" name="int|false"/>
      </param>
      <return type="object">
        <type full="Monolog\ErrorHandler" namespace="Monolog" name="ErrorHandler"/>
      </return>
    </docblock>
    <parameter name="logger" byreference="false" type="object">
      <type full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface"/>
    </parameter>
    <parameter name="errorLevelMap" byreference="false" type="array" default=""/>
    <parameter name="exceptionLevel" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="fatalLevel" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="registerExceptionHandler" start="74" end="81" abstract="false" final="false" static="false" visibility="public">
    <parameter name="level" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="callPrevious" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="registerErrorHandler" start="83" end="90" abstract="false" final="false" static="false" visibility="public">
    <parameter name="levelMap" byreference="false" type="array" default=""/>
    <parameter name="callPrevious" byreference="false" type="boolean" default="true"/>
    <parameter name="errorTypes" byreference="false" type="integer" default="1"/>
  </method>
  <method name="registerFatalHandler" start="92" end="99" abstract="false" final="false" static="false" visibility="public">
    <parameter name="level" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="reservedMemorySize" byreference="false" type="integer" default="20"/>
  </method>
  <method name="defaultErrorLevelMap" start="101" end="120" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="handleException" start="125" end="138" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <private/>
    </docblock>
    <parameter name="e" byreference="false" type="{unknown}"/>
  </method>
  <method name="handleError" start="143" end="160" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <private/>
    </docblock>
    <parameter name="code" byreference="false" type="{unknown}"/>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="file" byreference="false" type="string" default="''"/>
    <parameter name="line" byreference="false" type="integer" default="0"/>
    <parameter name="context" byreference="false" type="array" default=""/>
    <inline>
      <comment value="fatal error codes are ignored if a fatal error handler is present as well to avoid duplicate log entries" line="149"/>
    </inline>
  </method>
  <method name="handleFatalError" start="165" end="185" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <private/>
    </docblock>
  </method>
  <method name="codeToString" start="187" end="223" abstract="false" final="false" static="true" visibility="private">
    <parameter name="code" byreference="false" type="{unknown}"/>
  </method>
</class>
