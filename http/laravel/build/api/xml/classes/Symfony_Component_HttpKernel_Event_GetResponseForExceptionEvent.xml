<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent" namespace="Symfony\Component\HttpKernel\Event" name="GetResponseForExceptionEvent" abstract="false" final="false" start="30" end="67">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-kernel/Event" file="GetResponseForExceptionEvent.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-kernel/Event/GetResponseForExceptionEvent.php" size="1709" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="f2ae0004007a5959bf8dd231313acbd5fe97eb82" relative="vendor/symfony/http-kernel/Event/GetResponseForExceptionEvent.php"/>
  <docblock>
    <description compact="Allows to create a response for a thrown exception.">Call setResponse() to set the response that will be returned for the
current request. The propagation of this event is stopped as soon as a
response is set.

You can also call setException() to replace the thrown exception. This
exception will be thrown if no response is set during processing of this
event.</description>
    <author value="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
  </docblock>
  <extends full="Symfony\Component\HttpKernel\Event\GetResponseEvent" namespace="Symfony\Component\HttpKernel\Event" name="GetResponseEvent"/>
  <member name="exception" visibility="private" line="37">
    <docblock>
      <description compact="The exception object."/>
      <var type="object">
        <type full="\Exception" namespace="" name="Exception"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="39" end="44" abstract="false" final="false" static="false" visibility="public">
    <parameter name="kernel" byreference="false" type="object">
      <type full="Symfony\Component\HttpKernel\HttpKernelInterface" namespace="Symfony\Component\HttpKernel" name="HttpKernelInterface"/>
    </parameter>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="requestType" byreference="false" type="{unknown}"/>
    <parameter name="e" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </constructor>
  <method name="getException" start="51" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the thrown exception."/>
      <return description="The thrown exception" type="object">
        <type full="\Exception" namespace="" name="Exception"/>
      </return>
    </docblock>
  </method>
  <method name="setException" start="63" end="66" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Replaces the thrown exception.">This exception will be thrown if no response is set in the event.</description>
      <param description="The thrown exception" type="object" variable="$exception">
        <type full="\Exception" namespace="" name="Exception"/>
      </param>
    </docblock>
    <parameter name="exception" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
</class>
