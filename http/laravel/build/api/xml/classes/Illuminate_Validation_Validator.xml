<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Validation\Validator" namespace="Illuminate\Validation" name="Validator" abstract="false" final="false" start="23" end="2678">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Validation" file="Validator.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Validation/Validator.php" size="71898" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="e0ab9ae92f40c70e43203c4a878d37f3bec55e03" relative="vendor/laravel/framework/src/Illuminate/Validation/Validator.php"/>
  <implements full="Illuminate\Contracts\Validation\Validator" namespace="Illuminate\Contracts\Validation" name="Validator"/>
  <member name="translator" visibility="protected" line="30">
    <docblock>
      <description compact="The Translator implementation."/>
      <var type="object">
        <type full="\Symfony\Component\Translation\TranslatorInterface" namespace="\Symfony\Component\Translation" name="TranslatorInterface"/>
      </var>
    </docblock>
  </member>
  <member name="presenceVerifier" visibility="protected" line="37">
    <docblock>
      <description compact="The Presence Verifier implementation."/>
      <var type="object">
        <type full="\Illuminate\Validation\PresenceVerifierInterface" namespace="\Illuminate\Validation" name="PresenceVerifierInterface"/>
      </var>
    </docblock>
  </member>
  <member name="container" visibility="protected" line="44">
    <docblock>
      <description compact="The container instance."/>
      <var type="object">
        <type full="\Illuminate\Contracts\Container\Container" namespace="\Illuminate\Contracts\Container" name="Container"/>
      </var>
    </docblock>
  </member>
  <member name="failedRules" type="array" default="" visibility="protected" line="51">
    <docblock>
      <description compact="The failed validation rules."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="messages" visibility="protected" line="58">
    <docblock>
      <description compact="The message bag instance."/>
      <var type="object">
        <type full="\Illuminate\Support\MessageBag" namespace="\Illuminate\Support" name="MessageBag"/>
      </var>
    </docblock>
  </member>
  <member name="data" visibility="protected" line="65">
    <docblock>
      <description compact="The data under validation."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="files" type="array" default="" visibility="protected" line="72">
    <docblock>
      <description compact="The files under validation."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="rules" visibility="protected" line="79">
    <docblock>
      <description compact="The rules to be applied to the data."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="after" type="array" default="" visibility="protected" line="86">
    <docblock>
      <description compact="All of the registered &quot;after&quot; callbacks."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="customMessages" type="array" default="" visibility="protected" line="93">
    <docblock>
      <description compact="The array of custom error messages."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="fallbackMessages" type="array" default="" visibility="protected" line="100">
    <docblock>
      <description compact="The array of fallback error messages."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="customAttributes" type="array" default="" visibility="protected" line="107">
    <docblock>
      <description compact="The array of custom attribute names."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="customValues" type="array" default="" visibility="protected" line="114">
    <docblock>
      <description compact="The array of custom displayabled values."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="extensions" type="array" default="" visibility="protected" line="121">
    <docblock>
      <description compact="All of the custom validator extensions."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="replacers" type="array" default="" visibility="protected" line="128">
    <docblock>
      <description compact="All of the custom replacer extensions."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="sizeRules" type="array" default="" visibility="protected" line="135">
    <docblock>
      <description compact="The size related validation rules."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="numericRules" type="array" default="" visibility="protected" line="142">
    <docblock>
      <description compact="The numeric related validation rules."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="implicitRules" type="array" default="" visibility="protected" line="149">
    <docblock>
      <description compact="The validation rules that imply the field is required."/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="163" end="170" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new Validator instance."/>
      <param type="object" variable="$translator">
        <type full="\Symfony\Component\Translation\TranslatorInterface" namespace="\Symfony\Component\Translation" name="TranslatorInterface"/>
      </param>
      <param type="array" variable="$data"/>
      <param type="array" variable="$rules"/>
      <param type="array" variable="$messages"/>
      <param type="array" variable="$customAttributes"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="translator" byreference="false" type="object">
      <type full="Symfony\Component\Translation\TranslatorInterface" namespace="Symfony\Component\Translation" name="TranslatorInterface"/>
    </parameter>
    <parameter name="data" byreference="false" type="array"/>
    <parameter name="rules" byreference="false" type="array"/>
    <parameter name="messages" byreference="false" type="array" default=""/>
    <parameter name="customAttributes" byreference="false" type="array" default=""/>
  </constructor>
  <method name="parseData" start="179" end="201" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Parse the data and hydrate the files array."/>
      <param type="array" variable="$data"/>
      <param type="string" variable="$arrayKey"/>
      <return type="array"/>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
    <parameter name="arrayKey" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="explodeRules" start="209" end="216" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Explode the rules into an array of rules."/>
      <param type="object" variable="$rules">
        <type full="Illuminate\Validation\string|array" namespace="Illuminate\Validation" name="string|array"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="rules" byreference="false" type="{unknown}"/>
  </method>
  <method name="after" start="224" end="231" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="After an after validation callback."/>
      <param type="object" variable="$callback">
        <type full="Illuminate\Validation\callable|string" namespace="Illuminate\Validation" name="callable|string"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\$this" namespace="Illuminate\Validation" name="$this"/>
      </return>
    </docblock>
    <parameter name="callback" byreference="false" type="{unknown}"/>
  </method>
  <method name="sometimes" start="241" end="250" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add conditions to a given field based on a Closure."/>
      <param type="string" variable="$attribute"/>
      <param type="object" variable="$rules">
        <type full="Illuminate\Validation\string|array" namespace="Illuminate\Validation" name="string|array"/>
      </param>
      <param type="object" variable="$callback">
        <type full="Illuminate\Validation\callable" namespace="Illuminate\Validation" name="callable"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rules" byreference="false" type="{unknown}"/>
    <parameter name="callback" byreference="false" type="object">
      <type full="Illuminate\Validation\callable" namespace="Illuminate\Validation" name="callable"/>
    </parameter>
  </method>
  <method name="each" start="261" end="282" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Define a set of rules that apply to each element in an array attribute."/>
      <param type="string" variable="$attribute"/>
      <param type="object" variable="$rules">
        <type full="Illuminate\Validation\string|array" namespace="Illuminate\Validation" name="string|array"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rules" byreference="false" type="{unknown}"/>
  </method>
  <method name="mergeRules" start="291" end="298" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Merge additional rules into a given attribute."/>
      <param type="string" variable="$attribute"/>
      <param type="object" variable="$rules">
        <type full="Illuminate\Validation\string|array" namespace="Illuminate\Validation" name="string|array"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rules" byreference="false" type="{unknown}"/>
  </method>
  <method name="passes" start="305" end="326" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the data passes the validation rules."/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <inline>
      <comment value="We'll spin through each rule, validating the attributes attached to that" line="309"/>
      <comment value="rule. Any error messages will be added to the containers with each of" line="310"/>
      <comment value="the other error messages, returning true if we don't have messages." line="311"/>
      <comment value="Here we will spin through all of the &quot;after&quot; hooks on this validator and" line="318"/>
      <comment value="fire them off. This gives the callbacks a chance to perform all kinds" line="319"/>
      <comment value="of other validation that needs to get wrapped up in this operation." line="320"/>
    </inline>
  </method>
  <method name="fails" start="333" end="336" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the data fails the validation rules."/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="validate" start="345" end="365" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate a given attribute against a rule."/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="We will get the value for the given attribute from the array of data and then" line="353"/>
      <comment value="verify that the attribute is indeed validatable. Unless the rule implies" line="354"/>
      <comment value="that the attribute is required, rules are not run for missing values." line="355"/>
    </inline>
  </method>
  <method name="valid" start="372" end="379" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the data which was valid."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="invalid" start="386" end="393" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the data which was invalid."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getValue" start="401" end="408" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the value of a given attribute."/>
      <param type="string" variable="$attribute"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
  </method>
  <method name="isValidatable" start="418" end="423" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the attribute is validatable."/>
      <param type="string" variable="$rule"/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="presentOrRuleIsImplicit" start="433" end="436" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the field is present, or the rule implies required."/>
      <param type="string" variable="$rule"/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="passesOptionalCheck" start="444" end="453" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the attribute passes any optional check."/>
      <param type="string" variable="$attribute"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
  </method>
  <method name="isImplicit" start="461" end="464" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if a given rule implies the attribute is required."/>
      <param type="string" variable="$rule"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasNotFailedPreviousRuleIfPresenceRule" start="475" end="479" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if it's a necessary presence validation.">This is to avoid possible database type comparison errors.</description>
      <param type="string" variable="$rule"/>
      <param type="string" variable="$attribute"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
  </method>
  <method name="addFailure" start="489" end="494" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Add a failed rule and error message to the collection."/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="addError" start="504" end="511" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Add an error message to the validator's collection of messages."/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateSometimes" start="520" end="523" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="&quot;Validate&quot; optional attributes.">Always returns true, just lets us put sometimes in rules.</description>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="validateRequired" start="532" end="545" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that a required attribute exists."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateFilled" start="554" end="561" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the given attribute is filled if it is present."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="anyFailingRequired" start="569" end="578" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if any of the given attributes fail the required test."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="allFailingRequired" start="586" end="595" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if all of the given attributes fail the required test."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="validateRequiredWith" start="605" end="612" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute exists when any other attribute exists."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="mixed" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateRequiredWithAll" start="622" end="629" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute exists when all other attributes exists."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="mixed" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateRequiredWithout" start="639" end="646" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute exists when another attribute does not."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="mixed" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateRequiredWithoutAll" start="656" end="663" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute exists when all other attributes do not."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="mixed" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateRequiredIf" start="673" end="686" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute exists when another attribute has a given value."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="mixed" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateRequiredUnless" start="696" end="709" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute exists when another attribute does not have a given value."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="mixed" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="getPresentCount" start="717" end="728" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the number of attributes in a list that are present."/>
      <param type="array" variable="$attributes"/>
      <return type="int"/>
    </docblock>
    <parameter name="attributes" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateConfirmed" start="737" end="740" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute has a matching confirmation."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateSame" start="750" end="757" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that two attributes match."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateDifferent" start="767" end="774" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is different from another attribute."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateAccepted" start="785" end="790" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute was &quot;accepted&quot;.">This validation rule implies the attribute is "required".</description>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateArray" start="799" end="802" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is an array."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateBoolean" start="811" end="816" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is a boolean."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateInteger" start="825" end="828" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is an integer."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateNumeric" start="837" end="840" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is numeric."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateString" start="849" end="852" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is a string."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateJson" start="861" end="866" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the attribute is a valid JSON string."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateDigits" start="876" end="882" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute has a given number of digits."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateDigitsBetween" start="892" end="900" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is between a given number of digits."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateSize" start="910" end="915" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the size of an attribute."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateBetween" start="925" end="932" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the size of an attribute is between a set of values."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateMin" start="942" end="947" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the size of an attribute is greater than a minimum value."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateMax" start="957" end="966" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the size of an attribute is less than a maximum value."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="getSize" start="975" end="992" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the size of an attribute."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="This method will determine if the attribute is a number, string, or file and" line="979"/>
      <comment value="return the proper size accordingly. If it is a number, then number itself" line="980"/>
      <comment value="is the size. If it is a file, we take kilobytes, and for a string the" line="981"/>
      <comment value="entire length of the string will be considered the attribute size." line="982"/>
    </inline>
  </method>
  <method name="validateIn" start="1002" end="1009" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate an attribute is contained within a list of values."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateNotIn" start="1019" end="1022" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate an attribute is not contained within a list of values."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateUnique" start="1034" end="1071" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the uniqueness of an attribute value on a given database table.">If a database column is not specified, the attribute will be used.</description>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="The second parameter position holds the name of the column that needs to" line="1040"/>
      <comment value="be verified as unique. If this parameter isn't specified we will just" line="1041"/>
      <comment value="assume that this column to be verified shares the attribute's name." line="1042"/>
      <comment value="The presence verifier is responsible for counting rows within this store" line="1055"/>
      <comment value="mechanism which might be a relational database or any other permanent" line="1056"/>
      <comment value="data store like Redis, etc. We will use it to determine uniqueness." line="1057"/>
    </inline>
  </method>
  <method name="parseTable" start="1079" end="1082" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Parse the connection / table for the unique / exists rules."/>
      <param type="string" variable="$table"/>
      <return type="array"/>
    </docblock>
    <parameter name="table" byreference="false" type="{unknown}"/>
  </method>
  <method name="getUniqueIds" start="1090" end="1095" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the excluded ID column and value for the unique rule."/>
      <param type="array" variable="$parameters"/>
      <return type="array"/>
    </docblock>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="getUniqueExtra" start="1103" end="1110" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the extra conditions for a unique rule."/>
      <param type="array" variable="$parameters"/>
      <return type="array"/>
    </docblock>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateExists" start="1120" end="1134" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the existence of an attribute value in a database table."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="The second parameter position holds the name of the column that should be" line="1126"/>
      <comment value="verified as existing. If this parameter is not specified we will guess" line="1127"/>
      <comment value="that the columns being &quot;verified&quot; shares the given attribute's name." line="1128"/>
    </inline>
  </method>
  <method name="getExistCount" start="1146" end="1161" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the number of records that exist in storage."/>
      <param type="mixed" variable="$connection"/>
      <param type="string" variable="$table"/>
      <param type="string" variable="$column"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="int"/>
    </docblock>
    <parameter name="connection" byreference="false" type="{unknown}"/>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="column" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="getExtraExistConditions" start="1169" end="1172" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the extra exist conditions."/>
      <param type="array" variable="$parameters"/>
      <return type="array"/>
    </docblock>
    <parameter name="parameters" byreference="false" type="array"/>
  </method>
  <method name="getExtraConditions" start="1180" end="1191" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the extra conditions for a unique / exists rule."/>
      <param type="array" variable="$segments"/>
      <return type="array"/>
    </docblock>
    <parameter name="segments" byreference="false" type="array"/>
  </method>
  <method name="validateIp" start="1200" end="1203" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is a valid IP."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateEmail" start="1212" end="1215" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is a valid e-mail address."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateUrl" start="1224" end="1227" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is a valid URL."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateActiveUrl" start="1236" end="1241" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is an active URL."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateImage" start="1250" end="1253" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the MIME type of a file is an image MIME type."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateMimes" start="1263" end="1270" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the guessed extension of a file upload is in a set of file extensions."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateMimetypes" start="1280" end="1287" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the MIME type of a file upload attribute is in a set of MIME types."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="isAValidFileInstance" start="1295" end="1302" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Check that the given value is a valid file instance."/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateAlpha" start="1311" end="1314" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute contains only alphabetic characters."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateAlphaNum" start="1323" end="1330" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute contains only alpha-numeric characters."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateAlphaDash" start="1339" end="1346" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute contains only alpha-numeric characters, dashes, and underscores."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateRegex" start="1356" end="1365" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute passes a regular expression check."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateDate" start="1374" end="1387" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is a valid date."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateDateFormat" start="1397" end="1404" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute matches a date format."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateBefore" start="1414" end="1427" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the date is before a given date."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateBeforeWithFormat" start="1437" end="1442" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the date is before a given date with a given format."/>
      <param type="string" variable="$format"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateAfter" start="1452" end="1465" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the date is after a given date."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateAfterWithFormat" start="1475" end="1480" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate the date is after a given date with a given format."/>
      <param type="string" variable="$format"/>
      <param type="mixed" variable="$value"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="checkDateTimeOrder" start="1490" end="1497" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Given two date/time strings, check that one is after the other."/>
      <param type="string" variable="$format"/>
      <param type="string" variable="$before"/>
      <param type="string" variable="$after"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}"/>
    <parameter name="before" byreference="false" type="{unknown}"/>
    <parameter name="after" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDateTimeWithOptionalFormat" start="1506" end="1519" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get a DateTime instance from a string."/>
      <param type="string" variable="$format"/>
      <param type="string" variable="$value"/>
      <return type="object">
        <type full="\DateTime|null" namespace="" name="DateTime|null"/>
      </return>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="validateTimezone" start="1528" end="1537" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Validate that an attribute is a valid timezone."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDateFormat" start="1545" end="1550" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the date format for an attribute if it has one."/>
      <param type="string" variable="$attribute"/>
      <return type="object">
        <type full="Illuminate\Validation\string|null" namespace="Illuminate\Validation" name="string|null"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
  </method>
  <method name="getMessage" start="1559" end="1602" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the validation message for an attribute and rule."/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <return type="string"/>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="First we will retrieve the custom message for the validation rule if one" line="1565"/>
      <comment value="exists. If a custom validation message is being used we'll return the" line="1566"/>
      <comment value="custom message, otherwise we'll keep searching for a valid message." line="1567"/>
      <comment value="First we check for a custom defined validation message for the attribute" line="1576"/>
      <comment value="and rule. This allows the developer to specify specific messages for" line="1577"/>
      <comment value="only some attributes and rules that need to get specially formed." line="1578"/>
      <comment value="Finally, if no developer specified messages have been set, and no other" line="1590"/>
      <comment value="special messages apply for this rule, we will just pull the default" line="1591"/>
      <comment value="messages out of the translator service for this validation rule." line="1592"/>
    </inline>
  </method>
  <method name="getInlineMessage" start="1612" end="1626" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the inline message for a rule if it exists."/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$lowerRule"/>
      <param type="array" variable="$source"/>
      <return type="object">
        <type full="Illuminate\Validation\string|null" namespace="Illuminate\Validation" name="string|null"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="lowerRule" byreference="false" type="{unknown}"/>
    <parameter name="source" byreference="false" type="{unknown}" default="" constant="null"/>
    <inline>
      <comment value="First we will check for a custom message for an attribute specific rule" line="1618"/>
      <comment value="message for the fields, then we will check for a general custom line" line="1619"/>
      <comment value="that is not attribute specific. If we find either we'll return it." line="1620"/>
    </inline>
  </method>
  <method name="getSizeMessage" start="1635" end="1647" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the proper error message for an attribute and size rule."/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <return type="string"/>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="There are three different types of size validations. The attribute may be" line="1639"/>
      <comment value="either a number, file, or string so we will check a few things to know" line="1640"/>
      <comment value="which type of value it is and return the correct line for that type." line="1641"/>
    </inline>
  </method>
  <method name="getAttributeType" start="1655" end="1669" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the data type of the given attribute."/>
      <param type="string" variable="$attribute"/>
      <return type="string"/>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="We assume that the attributes present in the file array are files so that" line="1657"/>
      <comment value="means that if the attribute does not have a numeric rule and the files" line="1658"/>
      <comment value="list doesn't have it we'll just consider it a string by elimination." line="1659"/>
    </inline>
  </method>
  <method name="doReplacements" start="1680" end="1691" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all error message place-holders with actual values."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="getAttributeList" start="1699" end="1711" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Transform an array of attributes to their displayable form."/>
      <param type="array" variable="$values"/>
      <return type="array"/>
    </docblock>
    <parameter name="values" byreference="false" type="array"/>
    <inline>
      <comment value="For each attribute in the list we will simply get its displayable form as" line="1703"/>
      <comment value="this is convenient when replacing lists of parameters like some of the" line="1704"/>
      <comment value="replacement functions do when formatting out the validation message." line="1705"/>
    </inline>
  </method>
  <method name="getAttribute" start="1719" end="1741" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the displayable name of the attribute."/>
      <param type="string" variable="$attribute"/>
      <return type="string"/>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="The developer may dynamically specify the array of custom attributes" line="1721"/>
      <comment value="on this Validator instance. If the attribute exists in this array" line="1722"/>
      <comment value="it takes precedence over all other ways we can pull attributes." line="1723"/>
      <comment value="We allow for the developer to specify language lines for each of the" line="1730"/>
      <comment value="attributes allowing for more displayable counterparts of each of" line="1731"/>
      <comment value="the attributes. This provides the ability for simple formats." line="1732"/>
      <comment value="If no language line has been specified for the attribute all of the" line="1737"/>
      <comment value="underscores are removed from the attribute name and that will be" line="1738"/>
      <comment value="used as default versions of the attribute's displayable names." line="1739"/>
    </inline>
  </method>
  <method name="getDisplayableValue" start="1750" end="1763" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the displayable name of the value."/>
      <param type="string" variable="$attribute"/>
      <param type="mixed" variable="$value"/>
      <return type="string"/>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceBetween" start="1774" end="1777" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the between rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceDigits" start="1788" end="1791" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the digits rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceDigitsBetween" start="1802" end="1805" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the digits (between) rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceSize" start="1816" end="1819" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the size rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceMin" start="1830" end="1833" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the min rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceMax" start="1844" end="1847" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the max rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceIn" start="1858" end="1865" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the in rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceNotIn" start="1876" end="1879" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the not_in rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceMimes" start="1890" end="1893" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the mimes rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceRequiredWith" start="1904" end="1909" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the required_with rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceRequiredWithAll" start="1920" end="1923" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the required_with_all rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceRequiredWithout" start="1934" end="1937" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the required_without rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceRequiredWithoutAll" start="1948" end="1951" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the required_without_all rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceRequiredIf" start="1962" end="1969" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the required_if rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceRequiredUnless" start="1980" end="1985" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the required_unless rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceSame" start="1996" end="1999" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the same rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceDifferent" start="2010" end="2013" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the different rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceDateFormat" start="2024" end="2027" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the date_format rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceBefore" start="2038" end="2045" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the before rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="replaceAfter" start="2056" end="2059" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace all place-holders for the after rule."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasRule" start="2068" end="2071" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if the given attribute has a rule in the given set."/>
      <param type="string" variable="$attribute"/>
      <param type="object" variable="$rules">
        <type full="Illuminate\Validation\string|array" namespace="Illuminate\Validation" name="string|array"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rules" byreference="false" type="{unknown}"/>
  </method>
  <method name="getRule" start="2080" end="2095" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get a rule and its parameters for a given attribute."/>
      <param type="string" variable="$attribute"/>
      <param type="object" variable="$rules">
        <type full="Illuminate\Validation\string|array" namespace="Illuminate\Validation" name="string|array"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\array|null" namespace="Illuminate\Validation" name="array|null"/>
      </return>
    </docblock>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rules" byreference="false" type="{unknown}"/>
  </method>
  <method name="parseRule" start="2103" end="2114" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Extract the rule name and parameters from a rule."/>
      <param type="object" variable="$rules">
        <type full="Illuminate\Validation\array|string" namespace="Illuminate\Validation" name="array|string"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="rules" byreference="false" type="{unknown}"/>
  </method>
  <method name="parseArrayRule" start="2122" end="2125" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Parse an array based rule."/>
      <param type="array" variable="$rules"/>
      <return type="array"/>
    </docblock>
    <parameter name="rules" byreference="false" type="array"/>
  </method>
  <method name="parseStringRule" start="2133" end="2147" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Parse a string based rule."/>
      <param type="string" variable="$rules"/>
      <return type="array"/>
    </docblock>
    <parameter name="rules" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="The format for specifying validation rules and parameters follows an" line="2137"/>
      <comment value="easy {rule}:{parameters} formatting convention. For instance the" line="2138"/>
      <comment value="rule &quot;Max:3&quot; states that the value may only be three letters." line="2139"/>
    </inline>
  </method>
  <method name="parseParameters" start="2156" end="2163" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Parse a parameter list."/>
      <param type="string" variable="$rule"/>
      <param type="string" variable="$parameter"/>
      <return type="array"/>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameter" byreference="false" type="{unknown}"/>
  </method>
  <method name="normalizeRule" start="2171" end="2181" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Normalizes a rule so that we can accept short types."/>
      <param type="string" variable="$rule"/>
      <return type="string"/>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
  </method>
  <method name="getExtensions" start="2188" end="2191" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the array of custom validator extensions."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="addExtensions" start="2199" end="2208" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register an array of custom validator extensions."/>
      <param type="array" variable="$extensions"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="extensions" byreference="false" type="array"/>
  </method>
  <method name="addImplicitExtensions" start="2216" end="2223" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register an array of custom implicit validator extensions."/>
      <param type="array" variable="$extensions"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="extensions" byreference="false" type="array"/>
  </method>
  <method name="addExtension" start="2232" end="2235" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register a custom validator extension."/>
      <param type="string" variable="$rule"/>
      <param type="object" variable="$extension">
        <type full="\Closure|string" namespace="" name="Closure|string"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="extension" byreference="false" type="{unknown}"/>
  </method>
  <method name="addImplicitExtension" start="2244" end="2249" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register a custom implicit validator extension."/>
      <param type="string" variable="$rule"/>
      <param type="object" variable="$extension">
        <type full="\Closure|string" namespace="" name="Closure|string"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="extension" byreference="false" type="{unknown}"/>
  </method>
  <method name="getReplacers" start="2256" end="2259" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the array of custom validator message replacers."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="addReplacers" start="2267" end="2276" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register an array of custom validator message replacers."/>
      <param type="array" variable="$replacers"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="replacers" byreference="false" type="array"/>
  </method>
  <method name="addReplacer" start="2285" end="2288" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register a custom validator message replacer."/>
      <param type="string" variable="$rule"/>
      <param type="object" variable="$replacer">
        <type full="\Closure|string" namespace="" name="Closure|string"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="replacer" byreference="false" type="{unknown}"/>
  </method>
  <method name="getData" start="2295" end="2298" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the data under validation."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setData" start="2306" end="2309" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the data under validation."/>
      <param type="array" variable="$data"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
  </method>
  <method name="getRules" start="2316" end="2319" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the validation rules."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setRules" start="2327" end="2332" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the validation rules."/>
      <param type="array" variable="$rules"/>
      <return type="object">
        <type full="Illuminate\Validation\$this" namespace="Illuminate\Validation" name="$this"/>
      </return>
    </docblock>
    <parameter name="rules" byreference="false" type="array"/>
  </method>
  <method name="setAttributeNames" start="2340" end="2345" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the custom attributes on the validator."/>
      <param type="array" variable="$attributes"/>
      <return type="object">
        <type full="Illuminate\Validation\$this" namespace="Illuminate\Validation" name="$this"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="setValueNames" start="2353" end="2358" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the custom values on the validator."/>
      <param type="array" variable="$values"/>
      <return type="object">
        <type full="Illuminate\Validation\$this" namespace="Illuminate\Validation" name="$this"/>
      </return>
    </docblock>
    <parameter name="values" byreference="false" type="array"/>
  </method>
  <method name="getFiles" start="2365" end="2368" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the files under validation."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setFiles" start="2376" end="2381" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the files under validation."/>
      <param type="array" variable="$files"/>
      <return type="object">
        <type full="Illuminate\Validation\$this" namespace="Illuminate\Validation" name="$this"/>
      </return>
    </docblock>
    <parameter name="files" byreference="false" type="array"/>
  </method>
  <method name="getPresenceVerifier" start="2390" end="2397" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the Presence Verifier implementation."/>
      <return type="object">
        <type full="\Illuminate\Validation\PresenceVerifierInterface" namespace="\Illuminate\Validation" name="PresenceVerifierInterface"/>
      </return>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
  </method>
  <method name="setPresenceVerifier" start="2405" end="2408" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the Presence Verifier implementation."/>
      <param type="object" variable="$presenceVerifier">
        <type full="\Illuminate\Validation\PresenceVerifierInterface" namespace="\Illuminate\Validation" name="PresenceVerifierInterface"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="presenceVerifier" byreference="false" type="object">
      <type full="Illuminate\Validation\PresenceVerifierInterface" namespace="Illuminate\Validation" name="PresenceVerifierInterface"/>
    </parameter>
  </method>
  <method name="getTranslator" start="2415" end="2418" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the Translator implementation."/>
      <return type="object">
        <type full="\Symfony\Component\Translation\TranslatorInterface" namespace="\Symfony\Component\Translation" name="TranslatorInterface"/>
      </return>
    </docblock>
  </method>
  <method name="setTranslator" start="2426" end="2429" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the Translator implementation."/>
      <param type="object" variable="$translator">
        <type full="\Symfony\Component\Translation\TranslatorInterface" namespace="\Symfony\Component\Translation" name="TranslatorInterface"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="translator" byreference="false" type="object">
      <type full="Symfony\Component\Translation\TranslatorInterface" namespace="Symfony\Component\Translation" name="TranslatorInterface"/>
    </parameter>
  </method>
  <method name="getCustomMessages" start="2436" end="2439" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the custom messages for the validator."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setCustomMessages" start="2447" end="2450" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the custom messages for the validator."/>
      <param type="array" variable="$messages"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="messages" byreference="false" type="array"/>
  </method>
  <method name="getCustomAttributes" start="2457" end="2460" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the custom attributes used by the validator."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="addCustomAttributes" start="2468" end="2473" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add custom attributes to the validator."/>
      <param type="array" variable="$customAttributes"/>
      <return type="object">
        <type full="Illuminate\Validation\$this" namespace="Illuminate\Validation" name="$this"/>
      </return>
    </docblock>
    <parameter name="customAttributes" byreference="false" type="array"/>
  </method>
  <method name="getCustomValues" start="2480" end="2483" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the custom values for the validator."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="addCustomValues" start="2491" end="2496" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add the custom values for the validator."/>
      <param type="array" variable="$customValues"/>
      <return type="object">
        <type full="Illuminate\Validation\$this" namespace="Illuminate\Validation" name="$this"/>
      </return>
    </docblock>
    <parameter name="customValues" byreference="false" type="array"/>
  </method>
  <method name="getFallbackMessages" start="2503" end="2506" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the fallback messages for the validator."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setFallbackMessages" start="2514" end="2517" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the fallback messages for the validator."/>
      <param type="array" variable="$messages"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="messages" byreference="false" type="array"/>
  </method>
  <method name="failed" start="2524" end="2527" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the failed validation rules."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="messages" start="2534" end="2541" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the message container for the validator."/>
      <return type="object">
        <type full="\Illuminate\Support\MessageBag" namespace="\Illuminate\Support" name="MessageBag"/>
      </return>
    </docblock>
  </method>
  <method name="errors" start="2548" end="2551" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="An alternative more semantic shortcut to the message container."/>
      <return type="object">
        <type full="\Illuminate\Support\MessageBag" namespace="\Illuminate\Support" name="MessageBag"/>
      </return>
    </docblock>
  </method>
  <method name="getMessageBag" start="2558" end="2561" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the messages for the instance."/>
      <return type="object">
        <type full="\Illuminate\Support\MessageBag" namespace="\Illuminate\Support" name="MessageBag"/>
      </return>
    </docblock>
  </method>
  <method name="setContainer" start="2569" end="2572" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the IoC container instance."/>
      <param type="object" variable="$container">
        <type full="\Illuminate\Contracts\Container\Container" namespace="\Illuminate\Contracts\Container" name="Container"/>
      </param>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
    </docblock>
    <parameter name="container" byreference="false" type="object">
      <type full="Illuminate\Contracts\Container\Container" namespace="Illuminate\Contracts\Container" name="Container"/>
    </parameter>
  </method>
  <method name="callExtension" start="2581" end="2590" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Call a custom validator extension."/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool|null" namespace="Illuminate\Validation" name="bool|null"/>
      </return>
    </docblock>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="callClassBasedExtension" start="2599" end="2604" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Call a class based validator extension."/>
      <param type="string" variable="$callback"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\bool" namespace="Illuminate\Validation" name="bool"/>
      </return>
    </docblock>
    <parameter name="callback" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="callReplacer" start="2615" end="2624" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Call a custom validator message replacer."/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="object">
        <type full="Illuminate\Validation\string|null" namespace="Illuminate\Validation" name="string|null"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="callClassBasedReplacer" start="2636" end="2641" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Call a class based validator message replacer."/>
      <param type="string" variable="$callback"/>
      <param type="string" variable="$message"/>
      <param type="string" variable="$attribute"/>
      <param type="string" variable="$rule"/>
      <param type="array" variable="$parameters"/>
      <return type="string"/>
    </docblock>
    <parameter name="callback" byreference="false" type="{unknown}"/>
    <parameter name="message" byreference="false" type="{unknown}"/>
    <parameter name="attribute" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
  <method name="requireParameterCount" start="2652" end="2657" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Require a certain number of parameters to be present."/>
      <param type="int" variable="$count"/>
      <param type="array" variable="$parameters"/>
      <param type="string" variable="$rule"/>
      <return type="object">
        <type full="Illuminate\Validation\void" namespace="Illuminate\Validation" name="void"/>
      </return>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="count" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
    <parameter name="rule" byreference="false" type="{unknown}"/>
  </method>
  <method name="__call" start="2668" end="2677" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Handle dynamic calls to class methods."/>
      <param type="string" variable="$method"/>
      <param type="array" variable="$parameters"/>
      <return type="mixed"/>
      <throws type="object">
        <type full="\BadMethodCallException" namespace="" name="BadMethodCallException"/>
      </throws>
    </docblock>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
</class>
