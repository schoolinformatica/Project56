<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Framework_Constraint_TraversableContainsOnly" namespace="" name="PHPUnit_Framework_Constraint_TraversableContainsOnly" abstract="false" final="false" start="17" end="95">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Framework/Constraint" file="TraversableContainsOnly.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Framework/Constraint/TraversableContainsOnly.php" size="2477" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="468e2032a4436f5ea27df340b1e84a2ea498b661" relative="vendor/phpunit/phpunit/src/Framework/Constraint/TraversableContainsOnly.php"/>
  <docblock>
    <description compact="Constraint that asserts that the Traversable it is applied to contains only values of a given type."/>
    <since value="Class available since Release 3.1.4"/>
  </docblock>
  <extends full="PHPUnit_Framework_Constraint" namespace="" name="PHPUnit_Framework_Constraint"/>
  <member name="constraint" visibility="protected" line="22">
    <docblock>
      <description/>
      <var type="object">
        <type full="PHPUnit_Framework_Constraint" namespace="" name="PHPUnit_Framework_Constraint"/>
      </var>
    </docblock>
  </member>
  <member name="type" visibility="protected" line="27">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="33" end="46" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$type"/>
      <param type="object" variable="$isNativeType">
        <type full="bool" namespace="" name="bool"/>
      </param>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="isNativeType" byreference="false" type="boolean" default="true"/>
  </constructor>
  <method name="evaluate" start="66" end="84" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Evaluates the constraint for parameter $other">If $returnResult is set to false (the default), an exception is thrown
in case of a failure. null is returned otherwise.

If $returnResult is true, the result of the evaluation is returned as
a boolean value instead: true in case of success, false in case of a
failure.</description>
      <param description="Value or object to evaluate." type="mixed" variable="$other"/>
      <param description="Additional information about the test" type="string" variable="$description"/>
      <param description="Whether to return a result or throw an exception" type="object" variable="$returnResult">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="mixed"/>
      <throws type="object">
        <type full="PHPUnit_Framework_ExpectationFailedException" namespace="" name="PHPUnit_Framework_ExpectationFailedException"/>
      </throws>
    </docblock>
    <parameter name="other" byreference="false" type="{unknown}"/>
    <parameter name="description" byreference="false" type="string" default="''"/>
    <parameter name="returnResult" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="toString" start="91" end="94" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a string representation of the constraint."/>
      <return type="string"/>
    </docblock>
  </method>
</class>
