<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command" abstract="false" final="false" start="30" end="666">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/console/Command" file="Command.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/console/Command/Command.php" size="19018" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="c9a86626f947c0e3a8279a8204acac98d48fae04" relative="vendor/symfony/console/Command/Command.php"/>
  <docblock>
    <description compact="Base class for all commands."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <member name="application" visibility="private" line="32"/>
  <member name="name" visibility="private" line="33"/>
  <member name="processTitle" visibility="private" line="34"/>
  <member name="aliases" type="array" default="" visibility="private" line="35"/>
  <member name="definition" visibility="private" line="36"/>
  <member name="help" visibility="private" line="37"/>
  <member name="description" visibility="private" line="38"/>
  <member name="ignoreValidationErrors" type="boolean" default="false" visibility="private" line="39"/>
  <member name="applicationDefinitionMerged" type="boolean" default="false" visibility="private" line="40"/>
  <member name="applicationDefinitionMergedWithArgs" type="boolean" default="false" visibility="private" line="41"/>
  <member name="code" visibility="private" line="42"/>
  <member name="synopsis" type="array" default="" visibility="private" line="43"/>
  <member name="usages" type="array" default="" visibility="private" line="44"/>
  <member name="helperSet" visibility="private" line="45"/>
  <constructor name="__construct" start="54" end="67" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="The name of the command; passing null means it must be set in configure()" type="object" variable="$name">
        <type full="Symfony\Component\Console\Command\string|null" namespace="Symfony\Component\Console\Command" name="string|null"/>
      </param>
      <throws description="When the command name is empty" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}" default="" constant="null"/>
  </constructor>
  <method name="ignoreValidationErrors" start="74" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ignores validation errors.">This is mainly useful for the help command.</description>
    </docblock>
  </method>
  <method name="setApplication" start="84" end="92" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the application instance for this command."/>
      <param description="An Application instance" type="object" variable="$application">
        <type full="Symfony\Component\Console\Application" namespace="Symfony\Component\Console" name="Application"/>
      </param>
    </docblock>
    <parameter name="application" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Symfony\Component\Console\Application" namespace="Symfony\Component\Console" name="Application"/>
    </parameter>
  </method>
  <method name="setHelperSet" start="99" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the helper set."/>
      <param description="A HelperSet instance" type="object" variable="$helperSet">
        <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
      </param>
    </docblock>
    <parameter name="helperSet" byreference="false" type="object">
      <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
    </parameter>
  </method>
  <method name="getHelperSet" start="109" end="112" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the helper set."/>
      <return description="A HelperSet instance" type="object">
        <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
      </return>
    </docblock>
  </method>
  <method name="getApplication" start="119" end="122" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the application instance for this command."/>
      <return description="An Application instance" type="object">
        <type full="Symfony\Component\Console\Application" namespace="Symfony\Component\Console" name="Application"/>
      </return>
    </docblock>
  </method>
  <method name="isEnabled" start="132" end="135" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks whether the command is enabled or not in the current environment.">Override this to check for x or y and return false if the command can not
run properly under the current conditions.</description>
      <return type="object">
        <type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="configure" start="140" end="142" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Configures the current command."/>
    </docblock>
  </method>
  <method name="execute" start="161" end="164" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Executes the current command.">This method is not abstract because you can use this class
as a concrete class. In this case, instead of defining the
execute() method, you set the code to execute by passing
a Closure to the setCode() method.</description>
      <param description="An InputInterface instance" type="object" variable="$input">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </param>
      <param description="An OutputInterface instance" type="object" variable="$output">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
      <return description="null or 0 if everything went fine, or an error code" type="object">
        <type full="Symfony\Component\Console\Command\null|int" namespace="Symfony\Component\Console\Command" name="null|int"/>
      </return>
      <throws description="When this abstract method is not implemented" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
      <see value="setCode()"/>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
  </method>
  <method name="interact" start="176" end="178" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Interacts with the user.">This method is executed before the InputDefinition is validated.
This means that this is the only place where the command can
interactively ask for values of missing required arguments.</description>
      <param description="An InputInterface instance" type="object" variable="$input">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </param>
      <param description="An OutputInterface instance" type="object" variable="$output">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
  </method>
  <method name="initialize" start="189" end="191" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Initializes the command just after the input has been validated.">This is mainly useful when a lot of commands extends one main command
where some things need to be initialized based on the input arguments and options.</description>
      <param description="An InputInterface instance" type="object" variable="$input">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </param>
      <param description="An OutputInterface instance" type="object" variable="$output">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
  </method>
  <method name="run" start="210" end="260" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs the command.">The code to execute is either defined directly with the
setCode() method or by overriding the execute() method
in a sub-class.</description>
      <param description="An InputInterface instance" type="object" variable="$input">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </param>
      <param description="An OutputInterface instance" type="object" variable="$output">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
      <return description="The command exit code" type="int"/>
      <throws type="object">
        <type full="\Exception" namespace="" name="Exception"/>
      </throws>
      <see value="setCode()"/>
      <see value="execute()"/>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <inline>
      <comment value="force the creation of the synopsis before the merge with the app definition" line="212"/>
      <comment value="add the application arguments and options" line="216"/>
      <comment value="bind the input against the command specific arguments/options" line="219"/>
      <comment value="The command name argument is often omitted when a command is executed directly with its run() method." line="244"/>
      <comment value="It would fail the validation if we didn't make sure the command argument is present," line="245"/>
      <comment value="since it's required by the application." line="246"/>
    </inline>
  </method>
  <method name="setCode" start="276" end="285" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the code to execute when running this command.">If this method is used, it overrides the code defined
in the execute() method.</description>
      <param description="A callable(InputInterface $input, OutputInterface $output)" type="object" variable="$code">
        <type full="Symfony\Component\Console\Command\callable" namespace="Symfony\Component\Console\Command" name="callable"/>
      </param>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <see value="execute()"/>
    </docblock>
    <parameter name="code" byreference="false" type="{unknown}"/>
  </method>
  <method name="mergeApplicationDefinition" start="294" end="312" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Merges the application definition with the command definition.">This method is not part of public API and should not be used directly.</description>
      <param description="Whether to merge or not the Application definition arguments to Command definition arguments" type="object" variable="$mergeArgs">
        <type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/>
      </param>
    </docblock>
    <parameter name="mergeArgs" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="setDefinition" start="321" end="332" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets an array of argument and option instances."/>
      <param description="An array of argument and option instances or a definition instance" type="object" variable="$definition">
        <type full="Symfony\Component\Console\Command\array|InputDefinition" namespace="Symfony\Component\Console\Command" name="array|InputDefinition"/>
      </param>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
    </docblock>
    <parameter name="definition" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDefinition" start="339" end="342" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the InputDefinition attached to this Command."/>
      <return description="An InputDefinition instance" type="object">
        <type full="Symfony\Component\Console\Input\InputDefinition" namespace="Symfony\Component\Console\Input" name="InputDefinition"/>
      </return>
    </docblock>
  </method>
  <method name="getNativeDefinition" start="354" end="357" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets the InputDefinition to be used to create XML and Text representations of this Command.">Can be overridden to provide the original command representation when it would otherwise
be changed by merging with the application InputDefinition.

This method is not part of public API and should not be used directly.</description>
      <return description="An InputDefinition instance" type="object">
        <type full="Symfony\Component\Console\Input\InputDefinition" namespace="Symfony\Component\Console\Input" name="InputDefinition"/>
      </return>
    </docblock>
  </method>
  <method name="addArgument" start="369" end="374" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds an argument."/>
      <param description="The argument name" type="string" variable="$name"/>
      <param description="The argument mode: InputArgument::REQUIRED or InputArgument::OPTIONAL" type="int" variable="$mode"/>
      <param description="A description text" type="string" variable="$description"/>
      <param description="The default value (for InputArgument::OPTIONAL mode only)" type="mixed" variable="$default"/>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="mode" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="description" byreference="false" type="string" default="''"/>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="addOption" start="387" end="392" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds an option."/>
      <param description="The option name" type="string" variable="$name"/>
      <param description="The shortcut (can be null)" type="string" variable="$shortcut"/>
      <param description="The option mode: One of the InputOption::VALUE_* constants" type="int" variable="$mode"/>
      <param description="A description text" type="string" variable="$description"/>
      <param description="The default value (must be null for InputOption::VALUE_REQUIRED or InputOption::VALUE_NONE)" type="mixed" variable="$default"/>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="shortcut" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="mode" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="description" byreference="false" type="string" default="''"/>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="setName" start="408" end="415" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the name of the command.">This method can set both the namespace and the name if
you separate them by a colon (:)

    $command-&gt;setName('foo:bar');</description>
      <param description="The command name" type="string" variable="$name"/>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
      <throws description="When the name is invalid" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="setProcessTitle" start="429" end="434" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the process title of the command.">This feature should be used only when creating a long process command,
like a daemon.

PHP 5.5+ or the proctitle PECL library is required</description>
      <param description="The process title" type="string" variable="$title"/>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
    </docblock>
    <parameter name="title" byreference="false" type="{unknown}"/>
  </method>
  <method name="getName" start="441" end="444" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the command name."/>
      <return description="The command name" type="string"/>
    </docblock>
  </method>
  <method name="setDescription" start="453" end="458" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the description for the command."/>
      <param description="The description for the command" type="string" variable="$description"/>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
    </docblock>
    <parameter name="description" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDescription" start="465" end="468" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the description for the command."/>
      <return description="The description for the command" type="string"/>
    </docblock>
  </method>
  <method name="setHelp" start="477" end="482" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the help for the command."/>
      <param description="The help for the command" type="string" variable="$help"/>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
    </docblock>
    <parameter name="help" byreference="false" type="{unknown}"/>
  </method>
  <method name="getHelp" start="489" end="492" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the help for the command."/>
      <return description="The help for the command" type="string"/>
    </docblock>
  </method>
  <method name="getProcessedHelp" start="500" end="514" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the processed help for the command replacing the %command.name% and %command.full_name% patterns with the real values dynamically."/>
      <return description="The processed help for the command" type="string"/>
    </docblock>
  </method>
  <method name="setAliases" start="525" end="538" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the aliases for the command."/>
      <param description="An array of aliases for the command" type="array" variable="$aliases" of="object">
        <type full="Symfony\Component\Console\Command\string" namespace="Symfony\Component\Console\Command" name="string"/>
      </param>
      <return description="The current instance" type="object">
        <type full="Symfony\Component\Console\Command\Command" namespace="Symfony\Component\Console\Command" name="Command"/>
      </return>
      <throws description="When an alias is invalid" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="aliases" byreference="false" type="{unknown}"/>
  </method>
  <method name="getAliases" start="545" end="548" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the aliases for the command."/>
      <return description="An array of aliases for the command" type="array"/>
    </docblock>
  </method>
  <method name="getSynopsis" start="557" end="566" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the synopsis for the command."/>
      <param description="Whether to show the short version of the synopsis (with options folded) or not" type="object" variable="$short">
        <type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/>
      </param>
      <return description="The synopsis" type="string"/>
    </docblock>
    <parameter name="short" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="addUsage" start="573" end="582" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add a command usage example."/>
      <param description="The usage, it'll be prefixed with the command name" type="string" variable="$usage"/>
    </docblock>
    <parameter name="usage" byreference="false" type="{unknown}"/>
  </method>
  <method name="getUsages" start="589" end="592" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns alternative usages of the command."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getHelper" start="603" end="606" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets a helper instance by name."/>
      <param description="The helper name" type="string" variable="$name"/>
      <return description="The helper value" type="mixed"/>
      <throws description="if the helper is not defined" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="asText" start="615" end="624" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a text representation of the command."/>
      <return description="A string representing the command" type="string"/>
      <deprecated value="since version 2.3, to be removed in 3.0."/>
    </docblock>
  </method>
  <method name="asXml" start="635" end="649" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an XML representation of the command."/>
      <param description="Whether to return a DOM or an XML string" type="object" variable="$asDom">
        <type full="Symfony\Component\Console\Command\bool" namespace="Symfony\Component\Console\Command" name="bool"/>
      </param>
      <return description="An XML string representing the command" type="object">
        <type full="Symfony\Component\Console\Command\string|\DOMDocument" namespace="Symfony\Component\Console\Command\string|" name="DOMDocument"/>
      </return>
      <deprecated value="since version 2.3, to be removed in 3.0."/>
    </docblock>
    <parameter name="asDom" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="validateName" start="660" end="665" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Validates a command name.">It must be non-empty and parts can optionally be separated by ":".</description>
      <param type="string" variable="$name"/>
      <throws description="When the name is invalid" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
</class>
