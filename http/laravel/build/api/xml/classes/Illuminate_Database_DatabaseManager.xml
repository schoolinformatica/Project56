<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Database\DatabaseManager" namespace="Illuminate\Database" name="DatabaseManager" abstract="false" final="false" start="10" end="298">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database" file="DatabaseManager.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/DatabaseManager.php" size="8265" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="0546ec8eacb732ce92f80c8b459b936372c11f9f" relative="vendor/laravel/framework/src/Illuminate/Database/DatabaseManager.php"/>
  <implements full="Illuminate\Database\ConnectionResolverInterface" namespace="Illuminate\Database" name="ConnectionResolverInterface"/>
  <member name="app" visibility="protected" line="17">
    <docblock>
      <description compact="The application instance."/>
      <var type="object">
        <type full="\Illuminate\Foundation\Application" namespace="\Illuminate\Foundation" name="Application"/>
      </var>
    </docblock>
  </member>
  <member name="factory" visibility="protected" line="24">
    <docblock>
      <description compact="The database connection factory instance."/>
      <var type="object">
        <type full="\Illuminate\Database\Connectors\ConnectionFactory" namespace="\Illuminate\Database\Connectors" name="ConnectionFactory"/>
      </var>
    </docblock>
  </member>
  <member name="connections" type="array" default="" visibility="protected" line="31">
    <docblock>
      <description compact="The active connection instances."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="extensions" type="array" default="" visibility="protected" line="38">
    <docblock>
      <description compact="The custom connection resolvers."/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="47" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new database manager instance."/>
      <param type="object" variable="$app">
        <type full="\Illuminate\Foundation\Application" namespace="\Illuminate\Foundation" name="Application"/>
      </param>
      <param type="object" variable="$factory">
        <type full="\Illuminate\Database\Connectors\ConnectionFactory" namespace="\Illuminate\Database\Connectors" name="ConnectionFactory"/>
      </param>
      <return type="object">
        <type full="Illuminate\Database\void" namespace="Illuminate\Database" name="void"/>
      </return>
    </docblock>
    <parameter name="app" byreference="false" type="{unknown}"/>
    <parameter name="factory" byreference="false" type="object">
      <type full="Illuminate\Database\Connectors\ConnectionFactory" namespace="Illuminate\Database\Connectors" name="ConnectionFactory"/>
    </parameter>
  </constructor>
  <method name="connection" start="59" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a database connection instance."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="\Illuminate\Database\Connection" namespace="\Illuminate\Database" name="Connection"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}" default="" constant="null"/>
    <inline>
      <comment value="If we haven't created this connection, we'll create it based on the config" line="63"/>
      <comment value="provided in the application. Once we've created the connections we will" line="64"/>
      <comment value="set the &quot;fetch mode&quot; for PDO which determines the query return types." line="65"/>
    </inline>
  </method>
  <method name="parseConnectionName" start="83" end="89" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Parse the connection into an array of the name and read / write type."/>
      <param type="string" variable="$name"/>
      <return type="array"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="purge" start="97" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Disconnect from the given database and remove from local cache."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="Illuminate\Database\void" namespace="Illuminate\Database" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="disconnect" start="110" end="115" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Disconnect from the given database."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="Illuminate\Database\void" namespace="Illuminate\Database" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="reconnect" start="123" end="132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Reconnect to the given database."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="\Illuminate\Database\Connection" namespace="\Illuminate\Database" name="Connection"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="refreshPdoConnections" start="140" end="147" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Refresh the PDO connections on a given connection."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="\Illuminate\Database\Connection" namespace="\Illuminate\Database" name="Connection"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="makeConnection" start="155" end="176" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Make the database connection instance."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="\Illuminate\Database\Connection" namespace="\Illuminate\Database" name="Connection"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="First we will check by the connection name to see if an extension has been" line="159"/>
      <comment value="registered specifically for that connection. If it has we will call the" line="160"/>
      <comment value="Closure and pass it the config allowing it to resolve the connection." line="161"/>
      <comment value="Next we will check to see if an extension has been registered for a driver" line="168"/>
      <comment value="and will call the Closure if so, which allows us to have a more generic" line="169"/>
      <comment value="resolver for the drivers themselves which applies to all connections." line="170"/>
    </inline>
  </method>
  <method name="prepare" start="184" end="200" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Prepare the database connection instance."/>
      <param type="object" variable="$connection">
        <type full="\Illuminate\Database\Connection" namespace="\Illuminate\Database" name="Connection"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Database\Connection" namespace="\Illuminate\Database" name="Connection"/>
      </return>
    </docblock>
    <parameter name="connection" byreference="false" type="object">
      <type full="Illuminate\Database\Connection" namespace="Illuminate\Database" name="Connection"/>
    </parameter>
    <inline>
      <comment value="Here we'll set a reconnector callback. This reconnector can be any callable" line="192"/>
      <comment value="so we will set a Closure to reconnect from this manager with the name of" line="193"/>
      <comment value="the connection, which will allow us to reconnect from the connections." line="194"/>
    </inline>
  </method>
  <method name="setPdoForType" start="209" end="218" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Prepare the read write mode for database connection instance."/>
      <param type="object" variable="$connection">
        <type full="\Illuminate\Database\Connection" namespace="\Illuminate\Database" name="Connection"/>
      </param>
      <param type="string" variable="$type"/>
      <return type="object">
        <type full="\Illuminate\Database\Connection" namespace="\Illuminate\Database" name="Connection"/>
      </return>
    </docblock>
    <parameter name="connection" byreference="false" type="object">
      <type full="Illuminate\Database\Connection" namespace="Illuminate\Database" name="Connection"/>
    </parameter>
    <parameter name="type" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getConfig" start="228" end="242" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the configuration for a connection."/>
      <param type="string" variable="$name"/>
      <return type="array"/>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="To get the database connection configuration, we will just pull each of the" line="232"/>
      <comment value="connection configurations and get the configurations for the given name." line="233"/>
      <comment value="If the configuration doesn't exist, we'll throw an exception and bail." line="234"/>
    </inline>
  </method>
  <method name="getDefaultConnection" start="249" end="252" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the default connection name."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setDefaultConnection" start="260" end="263" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the default connection name."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="Illuminate\Database\void" namespace="Illuminate\Database" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="extend" start="272" end="275" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Register an extension connection resolver."/>
      <param type="string" variable="$name"/>
      <param type="object" variable="$resolver">
        <type full="Illuminate\Database\callable" namespace="Illuminate\Database" name="callable"/>
      </param>
      <return type="object">
        <type full="Illuminate\Database\void" namespace="Illuminate\Database" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="resolver" byreference="false" type="object">
      <type full="Illuminate\Database\callable" namespace="Illuminate\Database" name="callable"/>
    </parameter>
  </method>
  <method name="getConnections" start="282" end="285" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return all of the created connections."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="__call" start="294" end="297" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Dynamically pass methods to the default connection."/>
      <param type="string" variable="$method"/>
      <param type="array" variable="$parameters"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
  </method>
</class>
