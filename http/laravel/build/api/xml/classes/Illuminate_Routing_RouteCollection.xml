<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Routing\RouteCollection" namespace="Illuminate\Routing" name="RouteCollection" abstract="false" final="false" start="14" end="314">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Routing" file="RouteCollection.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php" size="8555" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="f6886ae1dc2f066385dc4bb7e54ff9510fedc7c6" relative="vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php"/>
  <implements full="Countable" namespace="" name="Countable"/>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <member name="routes" type="array" default="" visibility="protected" line="21">
    <docblock>
      <description compact="An array of the routes keyed by method."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="allRoutes" type="array" default="" visibility="protected" line="28">
    <docblock>
      <description compact="An flattened array of all of the routes."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="nameList" type="array" default="" visibility="protected" line="35">
    <docblock>
      <description compact="A look-up table of routes by their names."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="actionList" type="array" default="" visibility="protected" line="42">
    <docblock>
      <description compact="A look-up table of routes by controller action."/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="add" start="50" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add a Route instance to the collection."/>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </return>
    </docblock>
    <parameter name="route" byreference="false" type="object">
      <type full="Illuminate\Routing\Route" namespace="Illuminate\Routing" name="Route"/>
    </parameter>
  </method>
  <method name="addToCollections" start="65" end="74" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Add the given route to the arrays of routes."/>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <return type="object">
        <type full="Illuminate\Routing\void" namespace="Illuminate\Routing" name="void"/>
      </return>
    </docblock>
    <parameter name="route" byreference="false" type="{unknown}"/>
  </method>
  <method name="addLookups" start="82" end="99" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Add the route to any look-up tables if necessary."/>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <return type="object">
        <type full="Illuminate\Routing\void" namespace="Illuminate\Routing" name="void"/>
      </return>
    </docblock>
    <parameter name="route" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="If the route has a name, we will add it to the name look-up table so that we" line="84"/>
      <comment value="will quickly be able to find any route associate with a name and not have" line="85"/>
      <comment value="to iterate through every route every time we need to perform a look-up." line="86"/>
      <comment value="When the route is routing to a controller we will also store the action that" line="93"/>
      <comment value="is used by the route. This will let us reverse route to controllers while" line="94"/>
      <comment value="processing a request and easily generate URLs to the given controllers." line="95"/>
    </inline>
  </method>
  <method name="refreshNameLookups" start="108" end="117" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Refresh the name look-up table.">This is done in case any names are fluently defined.</description>
      <return type="object">
        <type full="Illuminate\Routing\void" namespace="Illuminate\Routing" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="addToActionList" start="126" end="129" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Add a route to the controller action dictionary."/>
      <param type="array" variable="$action"/>
      <param type="object" variable="$route">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </param>
      <return type="object">
        <type full="Illuminate\Routing\void" namespace="Illuminate\Routing" name="void"/>
      </return>
    </docblock>
    <parameter name="action" byreference="false" type="{unknown}"/>
    <parameter name="route" byreference="false" type="{unknown}"/>
  </method>
  <method name="match" start="139" end="162" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Find the first route matching a given request."/>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </return>
      <throws type="object">
        <type full="\Symfony\Component\HttpKernel\Exception\NotFoundHttpException" namespace="\Symfony\Component\HttpKernel\Exception" name="NotFoundHttpException"/>
      </throws>
    </docblock>
    <parameter name="request" byreference="false" type="object">
      <type full="Illuminate\Http\Request" namespace="Illuminate\Http" name="Request"/>
    </parameter>
    <inline>
      <comment value="First, we will see if we can find a matching route for this current request" line="143"/>
      <comment value="method. If we can, great, we can just return it so that it can be called" line="144"/>
      <comment value="by the consumer. Otherwise we will check for routes with another verb." line="145"/>
      <comment value="If no route was found we will now check if a matching route is specified by" line="152"/>
      <comment value="another HTTP verb. If it is we will need to throw a MethodNotAllowed and" line="153"/>
      <comment value="inform the user agent of which HTTP verb it should use for this route." line="154"/>
    </inline>
  </method>
  <method name="checkForAlternateVerbs" start="170" end="186" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if any routes match on another HTTP verb."/>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Here we will spin through all verbs except for the current request verb and" line="174"/>
      <comment value="check to see if any routes respond to them. If they do, we will return a" line="175"/>
      <comment value="proper error response with the correct headers on the response string." line="176"/>
    </inline>
  </method>
  <method name="getRouteForMethods" start="197" end="207" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get a route (if necessary) that responds when other available methods are present."/>
      <param type="object" variable="$request">
        <type full="\Illuminate\Http\Request" namespace="\Illuminate\Http" name="Request"/>
      </param>
      <param type="array" variable="$methods"/>
      <return type="object">
        <type full="\Illuminate\Routing\Route" namespace="\Illuminate\Routing" name="Route"/>
      </return>
      <throws type="object">
        <type full="\Symfony\Component\Routing\Exception\MethodNotAllowedHttpException" namespace="\Symfony\Component\Routing\Exception" name="MethodNotAllowedHttpException"/>
      </throws>
    </docblock>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="methods" byreference="false" type="array"/>
  </method>
  <method name="methodNotAllowed" start="217" end="220" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Throw a method not allowed HTTP exception."/>
      <param type="array" variable="$others"/>
      <return type="object">
        <type full="Illuminate\Routing\void" namespace="Illuminate\Routing" name="void"/>
      </return>
      <throws type="object">
        <type full="\Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException" namespace="\Symfony\Component\HttpKernel\Exception" name="MethodNotAllowedHttpException"/>
      </throws>
    </docblock>
    <parameter name="others" byreference="false" type="array"/>
  </method>
  <method name="check" start="230" end="235" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Determine if a route in the array matches the request."/>
      <param type="array" variable="$routes"/>
      <param type="object" variable="$request">
        <type full="\Illuminate\http\Request" namespace="\Illuminate\http" name="Request"/>
      </param>
      <param type="object" variable="$includingMethod">
        <type full="Illuminate\Routing\bool" namespace="Illuminate\Routing" name="bool"/>
      </param>
      <return type="object">
        <type full="\Illuminate\Routing\Route|null" namespace="\Illuminate\Routing" name="Route|null"/>
      </return>
    </docblock>
    <parameter name="routes" byreference="false" type="array"/>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="includingMethod" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="get" start="243" end="250" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get all of the routes in the collection."/>
      <param type="object" variable="$method">
        <type full="Illuminate\Routing\string|null" namespace="Illuminate\Routing" name="string|null"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="method" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="hasNamedRoute" start="258" end="261" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the route collection contains a given named route."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="Illuminate\Routing\bool" namespace="Illuminate\Routing" name="bool"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getByName" start="269" end="272" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a route instance by its name."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="\Illuminate\Routing\Route|null" namespace="\Illuminate\Routing" name="Route|null"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getByAction" start="280" end="283" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a route instance by its controller action."/>
      <param type="string" variable="$action"/>
      <return type="object">
        <type full="\Illuminate\Routing\Route|null" namespace="\Illuminate\Routing" name="Route|null"/>
      </return>
    </docblock>
    <parameter name="action" byreference="false" type="{unknown}"/>
  </method>
  <method name="getRoutes" start="290" end="293" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all of the routes in the collection."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getIterator" start="300" end="303" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get an iterator for the items."/>
      <return type="object">
        <type full="\ArrayIterator" namespace="" name="ArrayIterator"/>
      </return>
    </docblock>
  </method>
  <method name="count" start="310" end="313" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Count the number of items in the collection."/>
      <return type="int"/>
    </docblock>
  </method>
</class>
