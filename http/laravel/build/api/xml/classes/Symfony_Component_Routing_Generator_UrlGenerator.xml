<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Routing\Generator\UrlGenerator" namespace="Symfony\Component\Routing\Generator" name="UrlGenerator" abstract="false" final="false" start="28" end="336">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/routing/Generator" file="UrlGenerator.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/routing/Generator/UrlGenerator.php" size="13527" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="192d78468df899f5b12756b981261f1be696e5d1" relative="vendor/symfony/routing/Generator/UrlGenerator.php"/>
  <docblock>
    <description compact="UrlGenerator can generate a URL or a path for any route in the RouteCollection based on the passed parameters."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
    <author value="Tobias Schultze &lt;http://tobion.de&gt;"/>
  </docblock>
  <implements full="Symfony\Component\Routing\Generator\UrlGeneratorInterface" namespace="Symfony\Component\Routing\Generator" name="UrlGeneratorInterface"/>
  <implements full="Symfony\Component\Routing\Generator\ConfigurableRequirementsInterface" namespace="Symfony\Component\Routing\Generator" name="ConfigurableRequirementsInterface"/>
  <member name="routes" visibility="protected" line="33">
    <docblock>
      <description/>
      <var type="object">
        <type full="Symfony\Component\Routing\RouteCollection" namespace="Symfony\Component\Routing" name="RouteCollection"/>
      </var>
    </docblock>
  </member>
  <member name="context" visibility="protected" line="38">
    <docblock>
      <description/>
      <var type="object">
        <type full="Symfony\Component\Routing\RequestContext" namespace="Symfony\Component\Routing" name="RequestContext"/>
      </var>
    </docblock>
  </member>
  <member name="strictRequirements" type="boolean" default="true" visibility="protected" line="43">
    <docblock>
      <description/>
      <var type="object">
        <type full="Symfony\Component\Routing\Generator\bool|null" namespace="Symfony\Component\Routing\Generator" name="bool|null"/>
      </var>
    </docblock>
  </member>
  <member name="logger" visibility="protected" line="48">
    <docblock>
      <description/>
      <var type="object">
        <type full="Symfony\Component\Routing\Generator\LoggerInterface|null" namespace="Symfony\Component\Routing\Generator" name="LoggerInterface|null"/>
      </var>
    </docblock>
  </member>
  <member name="decodedChars" type="array" default="" visibility="protected" line="58">
    <docblock>
      <description compact="This array defines the characters (besides alphanumeric ones) that will not be percent-encoded in the path segment of the generated URL.">PHP's rawurlencode() encodes all chars except "a-zA-Z0-9-._~" according to RFC 3986. But we want to allow some chars
to be used in their literal form (reasons below). Other chars inside the path must of course be encoded, e.g.
"?" and "#" (would be interpreted wrongly as query and fragment identifier),
"'" and """ (are used as delimiters in HTML).</description>
    </docblock>
  </member>
  <constructor name="__construct" start="85" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="A RouteCollection instance" type="object" variable="$routes">
        <type full="Symfony\Component\Routing\RouteCollection" namespace="Symfony\Component\Routing" name="RouteCollection"/>
      </param>
      <param description="The context" type="object" variable="$context">
        <type full="Symfony\Component\Routing\RequestContext" namespace="Symfony\Component\Routing" name="RequestContext"/>
      </param>
      <param description="A logger instance" type="object" variable="$logger">
        <type full="Symfony\Component\Routing\Generator\LoggerInterface|null" namespace="Symfony\Component\Routing\Generator" name="LoggerInterface|null"/>
      </param>
    </docblock>
    <parameter name="routes" byreference="false" type="object">
      <type full="Symfony\Component\Routing\RouteCollection" namespace="Symfony\Component\Routing" name="RouteCollection"/>
    </parameter>
    <parameter name="context" byreference="false" type="object">
      <type full="Symfony\Component\Routing\RequestContext" namespace="Symfony\Component\Routing" name="RequestContext"/>
    </parameter>
    <parameter name="logger" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface"/>
    </parameter>
  </constructor>
  <method name="setContext" start="95" end="98" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="context" byreference="false" type="object">
      <type full="Symfony\Component\Routing\RequestContext" namespace="Symfony\Component\Routing" name="RequestContext"/>
    </parameter>
  </method>
  <method name="getContext" start="103" end="106" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="setStrictRequirements" start="111" end="114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="enabled" byreference="false" type="{unknown}"/>
  </method>
  <method name="isStrictRequirements" start="119" end="122" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="generate" start="127" end="137" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="array" default=""/>
    <parameter name="referenceType" byreference="false" type="{unknown}" default="" constant="self::ABSOLUTE_PATH"/>
    <inline>
      <comment value="the Route has a cache of its own and is not recompiled as long as it does not get modified" line="133"/>
    </inline>
  </method>
  <method name="doGenerate" start="144" end="284" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <throws description="When some parameters are missing that are mandatory for the route" type="object">
        <type full="Symfony\Component\Routing\Exception\MissingMandatoryParametersException" namespace="Symfony\Component\Routing\Exception" name="MissingMandatoryParametersException"/>
      </throws>
      <throws description="When a parameter value for a placeholder is not correct because" type="object">it does not match the requirement<type full="Symfony\Component\Routing\Exception\InvalidParameterException" namespace="Symfony\Component\Routing\Exception" name="InvalidParameterException"/></throws>
    </docblock>
    <parameter name="variables" byreference="false" type="{unknown}"/>
    <parameter name="defaults" byreference="false" type="{unknown}"/>
    <parameter name="requirements" byreference="false" type="{unknown}"/>
    <parameter name="tokens" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="referenceType" byreference="false" type="{unknown}"/>
    <parameter name="hostTokens" byreference="false" type="{unknown}"/>
    <parameter name="requiredSchemes" byreference="false" type="array" default=""/>
    <inline>
      <comment value="all params must be given" line="149"/>
      <comment value="the contexts base URL is already encoded (see Symfony\Component\HttpFoundation\Request)" line="187"/>
      <comment value="the path segments &quot;.&quot; and &quot;..&quot; are interpreted as relative reference when resolving a URI; see http://tools.ietf.org/html/rfc3986#section-3.3" line="190"/>
      <comment value="so we need to encode them as they are not used for this purpose here" line="191"/>
      <comment value="otherwise we would generate a URI that, when followed by a user agent (e.g. browser), does not match this route" line="192"/>
      <comment value="add a query string if needed" line="275"/>
    </inline>
  </method>
  <method name="getRelativePath" start="306" end="335" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the target path as relative reference from the base path.">Only the URIs path component (no schema, host etc.) is relevant and must be given, starting with a slash.
Both paths must be absolute and not contain relative parts.
Relative URLs from one resource to another are useful when generating self-contained downloadable document archives.
Furthermore, they can be used to reduce the link size in documents.

Example target paths, given a base path of "/a/b/c/d":
- "/a/b/c/d"     -&gt; ""
- "/a/b/c/"      -&gt; "./"
- "/a/b/"        -&gt; "../"
- "/a/b/c/other" -&gt; "other"
- "/a/x/y"       -&gt; "../../x/y"</description>
      <param description="The base path" type="string" variable="$basePath"/>
      <param description="The target path" type="string" variable="$targetPath"/>
      <return description="The relative target path" type="string"/>
    </docblock>
    <parameter name="basePath" byreference="false" type="{unknown}"/>
    <parameter name="targetPath" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="A reference to the same base directory or an empty subdirectory must be prefixed with &quot;./&quot;." line="328"/>
      <comment value="This also applies to a segment with a colon character (e.g., &quot;file:colon&quot;) that cannot be used" line="329"/>
      <comment value="as the first segment of a relative-path reference, as it would be mistaken for a scheme name" line="330"/>
      <comment value="(see http://tools.ietf.org/html/rfc3986#section-4.2)." line="331"/>
    </inline>
  </method>
</class>
