<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Illuminate\Pagination\UrlWindow" namespace="Illuminate\Pagination" name="UrlWindow" abstract="false" final="false" start="7" end="222">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Pagination" file="UrlWindow.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Pagination/UrlWindow.php" size="5715" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="93ccfc4b9887f61f503a00fd61a7f7607e1715c9" relative="vendor/laravel/framework/src/Illuminate/Pagination/UrlWindow.php"/>
  <member name="paginator" visibility="protected" line="14">
    <docblock>
      <description compact="The paginator implementation."/>
      <var type="object">
        <type full="\Illuminate\Contracts\Pagination\LengthAwarePaginator" namespace="\Illuminate\Contracts\Pagination" name="LengthAwarePaginator"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="22" end="25" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new URL window instance."/>
      <param type="object" variable="$paginator">
        <type full="\Illuminate\Contracts\Pagination\LengthAwarePaginator" namespace="\Illuminate\Contracts\Pagination" name="LengthAwarePaginator"/>
      </param>
      <return type="object">
        <type full="Illuminate\Pagination\void" namespace="Illuminate\Pagination" name="void"/>
      </return>
    </docblock>
    <parameter name="paginator" byreference="false" type="object">
      <type full="Illuminate\Contracts\Pagination\LengthAwarePaginator" namespace="Illuminate\Contracts\Pagination" name="LengthAwarePaginator"/>
    </parameter>
  </constructor>
  <method name="make" start="34" end="37" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Create a new URL window instance."/>
      <param type="object" variable="$paginator">
        <type full="\Illuminate\Contracts\Pagination\LengthAwarePaginator" namespace="\Illuminate\Contracts\Pagination" name="LengthAwarePaginator"/>
      </param>
      <param type="int" variable="$onEachSide"/>
      <return type="array"/>
    </docblock>
    <parameter name="paginator" byreference="false" type="object">
      <type full="Illuminate\Contracts\Pagination\LengthAwarePaginator" namespace="Illuminate\Contracts\Pagination" name="LengthAwarePaginator"/>
    </parameter>
    <parameter name="onEachSide" byreference="false" type="integer" default="3"/>
  </method>
  <method name="get" start="45" end="52" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the window of URLs to be shown."/>
      <param type="int" variable="$onEachSide"/>
      <return type="array"/>
    </docblock>
    <parameter name="onEachSide" byreference="false" type="integer" default="3"/>
  </method>
  <method name="getSmallSlider" start="59" end="66" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the slider of URLs there are not enough pages to slide."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getUrlSlider" start="74" end="104" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Create a URL slider links."/>
      <param type="int" variable="$onEachSide"/>
      <return type="array"/>
    </docblock>
    <parameter name="onEachSide" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="If the current page is very close to the beginning of the page range, we will" line="86"/>
      <comment value="just render the beginning of the page range, followed by the last 2 of the" line="87"/>
      <comment value="links in this list, since we will not have room to create a full slider." line="88"/>
      <comment value="If we have enough room on both sides of the current page to build a slider we" line="100"/>
      <comment value="will surround it with both the beginning and ending caps, with this window" line="101"/>
      <comment value="of pages in the middle providing a Google style sliding paginator setup." line="102"/>
    </inline>
  </method>
  <method name="getSliderTooCloseToBeginning" start="112" end="119" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the slider of URLs when too close to beginning of window."/>
      <param type="int" variable="$window"/>
      <return type="array"/>
    </docblock>
    <parameter name="window" byreference="false" type="{unknown}"/>
  </method>
  <method name="getSliderTooCloseToEnding" start="127" end="139" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the slider of URLs when too close to ending of window."/>
      <param type="int" variable="$window"/>
      <return type="array"/>
    </docblock>
    <parameter name="window" byreference="false" type="{unknown}"/>
  </method>
  <method name="getFullSlider" start="147" end="154" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the slider of URLs when a full slider can be made."/>
      <param type="int" variable="$onEachSide"/>
      <return type="array"/>
    </docblock>
    <parameter name="onEachSide" byreference="false" type="{unknown}"/>
  </method>
  <method name="getAdjacentUrlRange" start="162" end="168" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the page range for the current page window."/>
      <param type="int" variable="$onEachSide"/>
      <return type="array"/>
    </docblock>
    <parameter name="onEachSide" byreference="false" type="{unknown}"/>
  </method>
  <method name="getStart" start="175" end="178" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the starting URLs of a pagination slider."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getFinish" start="185" end="191" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the ending URLs of a pagination slider."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="hasPages" start="198" end="201" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the underlying paginator being presented has pages to show."/>
      <return type="object">
        <type full="Illuminate\Pagination\bool" namespace="Illuminate\Pagination" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="currentPage" start="208" end="211" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the current page from the paginator."/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="lastPage" start="218" end="221" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Get the last page from the paginator."/>
      <return type="int"/>
    </docblock>
  </method>
</class>
