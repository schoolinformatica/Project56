<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Console\ConsoleEvents" namespace="Symfony\Component\Console" name="ConsoleEvents" abstract="false" final="true" start="19" end="61">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/console" file="ConsoleEvents.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/console/ConsoleEvents.php" size="1591" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="f19897effc1a5624f047ca762fd13649fef015c4" relative="vendor/symfony/console/ConsoleEvents.php"/>
  <docblock>
    <description compact="Contains all events dispatched by an Application."/>
    <author value="Francesco Levorato &lt;git@flevour.net&gt;"/>
  </docblock>
  <constant type="string" name="COMMAND" value="'console.command'">
    <docblock>
      <description compact="The COMMAND event allows you to attach listeners before any command is executed by the console. It also allows you to modify the command, input and output before they are handled to the command.">The event listener method receives a Symfony\Component\Console\Event\ConsoleCommandEvent
instance.</description>
      <event/>
      <var type="string"/>
    </docblock>
  </constant>
  <constant type="string" name="TERMINATE" value="'console.terminate'">
    <docblock>
      <description compact="The TERMINATE event allows you to attach listeners after a command is executed by the console.">The event listener method receives a Symfony\Component\Console\Event\ConsoleTerminateEvent
instance.</description>
      <event/>
      <var type="string"/>
    </docblock>
  </constant>
  <constant type="string" name="EXCEPTION" value="'console.exception'">
    <docblock>
      <description compact="The EXCEPTION event occurs when an uncaught exception appears.">This event allows you to deal with the exception or
to modify the thrown exception. The event listener method receives
a Symfony\Component\Console\Event\ConsoleExceptionEvent
instance.</description>
      <event/>
      <var type="string"/>
    </docblock>
  </constant>
</class>
