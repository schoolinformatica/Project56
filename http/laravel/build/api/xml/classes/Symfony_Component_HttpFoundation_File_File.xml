<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpFoundation\File\File" namespace="Symfony\Component\HttpFoundation\File" name="File" abstract="false" final="false" start="24" end="136">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation/File" file="File.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation/File/File.php" size="4123" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="3976c2eb774798f6782ef9f593e5088334997ac2" relative="vendor/symfony/http-foundation/File/File.php"/>
  <docblock>
    <description compact="A file in the file system."/>
    <author value="Bernhard Schussek &lt;bschussek@gmail.com&gt;"/>
  </docblock>
  <extends full="SplFileInfo" namespace="" name="SplFileInfo"/>
  <constructor name="__construct" start="34" end="41" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs a new file from the given path."/>
      <param description="The path to the file" type="string" variable="$path"/>
      <param description="Whether to check the path or not" type="object" variable="$checkPath">
        <type full="Symfony\Component\HttpFoundation\File\bool" namespace="Symfony\Component\HttpFoundation\File" name="bool"/>
      </param>
      <throws description="If the given path is not a file" type="object">
        <type full="Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException" namespace="Symfony\Component\HttpFoundation\File\Exception" name="FileNotFoundException"/>
      </throws>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="checkPath" byreference="false" type="boolean" default="true"/>
  </constructor>
  <method name="guessExtension" start="56" end="62" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the extension based on the mime type.">If the mime type is unknown, returns null.

This method uses the mime type as guessed by getMimeType()
to guess the file extension.</description>
      <return description="The guessed extension or null if it cannot be guessed" type="object">
        <type full="Symfony\Component\HttpFoundation\File\string|null" namespace="Symfony\Component\HttpFoundation\File" name="string|null"/>
      </return>
      <see value="ExtensionGuesser"/>
      <see value="getMimeType()"/>
    </docblock>
  </method>
  <method name="getMimeType" start="75" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the mime type of the file.">The mime type is guessed using a MimeTypeGuesser instance, which uses finfo(),
mime_content_type() and the system binary "file" (in this order), depending on
which of those are available.</description>
      <return description="The guessed mime type (i.e. &quot;application/pdf&quot;)" type="object">
        <type full="Symfony\Component\HttpFoundation\File\string|null" namespace="Symfony\Component\HttpFoundation\File" name="string|null"/>
      </return>
      <see value="MimeTypeGuesser"/>
    </docblock>
  </method>
  <method name="move" start="92" end="104" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Moves the file to a new location."/>
      <param description="The destination folder" type="string" variable="$directory"/>
      <param description="The new file name" type="string" variable="$name"/>
      <return description="A File object representing the new file" type="object">
        <type full="Symfony\Component\HttpFoundation\File\File" namespace="Symfony\Component\HttpFoundation\File" name="File"/>
      </return>
      <throws description="if the target file could not be created" type="object">
        <type full="Symfony\Component\HttpFoundation\File\Exception\FileException" namespace="Symfony\Component\HttpFoundation\File\Exception" name="FileException"/>
      </throws>
    </docblock>
    <parameter name="directory" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getTargetFile" start="106" end="119" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="directory" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getName" start="128" end="135" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns locale independent base name of the given path."/>
      <param description="The new file name" type="string" variable="$name"/>
      <return description="containing" type="string"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
</class>
