<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters" namespace="" name="PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters" abstract="false" final="false" start="21" end="123">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher" file="ConsecutiveParameters.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/ConsecutiveParameters.php" size="3752" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="70eaab6b68c5366f8d2a1707991262e6a298e5f8" relative="vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/ConsecutiveParameters.php"/>
  <docblock>
    <description compact="Invocation matcher which looks for sets of specific parameters in the invocations.">Checks the parameters of the incoming invocations, the parameter list is
checked against the defined constraints in $parameters. If the constraint
is met it will return true in matches().

It takes a list of match groups and and increases a call index after each invocation.
So the first invocation uses the first group of constraints, the second the next and so on.</description>
  </docblock>
  <extends full="PHPUnit_Framework_MockObject_Matcher_StatelessInvocation" namespace="" name="PHPUnit_Framework_MockObject_Matcher_StatelessInvocation"/>
  <member name="_parameterGroups" type="array" default="" visibility="private" line="26">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_invocations" type="array" default="" visibility="private" line="31">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="36" end="46" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="array" variable="$parameterGroups"/>
    </docblock>
    <parameter name="parameterGroups" byreference="false" type="array"/>
  </constructor>
  <method name="toString" start="51" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="matches" start="62" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$invocation">
        <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
      </param>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="invocation" byreference="false" type="object">
      <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
    </parameter>
  </method>
  <method name="verify" start="71" end="76" abstract="false" final="false" static="false" visibility="public"/>
  <method name="verifyInvocation" start="85" end="122" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Verify a single invocation"/>
      <param type="object" variable="$invocation">
        <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
      </param>
      <param type="int" variable="$callIndex"/>
      <throws type="object">
        <type full="PHPUnit_Framework_ExpectationFailedException" namespace="" name="PHPUnit_Framework_ExpectationFailedException"/>
      </throws>
    </docblock>
    <parameter name="invocation" byreference="false" type="object">
      <type full="PHPUnit_Framework_MockObject_Invocation" namespace="" name="PHPUnit_Framework_MockObject_Invocation"/>
    </parameter>
    <parameter name="callIndex" byreference="false" type="{unknown}"/>
  </method>
</class>
