<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" namespace="Symfony\Component\HttpFoundation\File\MimeType" name="ExtensionGuesser" abstract="false" final="false" start="26" end="96">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation/File/MimeType" file="ExtensionGuesser.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation/File/MimeType/ExtensionGuesser.php" size="2470" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="5566633eadb78c5205ae117756f01db66c2aab6c" relative="vendor/symfony/http-foundation/File/MimeType/ExtensionGuesser.php"/>
  <docblock>
    <description compact="A singleton mime type to file extension guesser.">A default guesser is provided.
You can register custom guessers by calling the register()
method on the singleton instance:

    $guesser = ExtensionGuesser::getInstance();
    $guesser-&gt;register(new MyCustomExtensionGuesser());

The last registered guesser is preferred over previously registered ones.</description>
  </docblock>
  <implements full="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface" namespace="Symfony\Component\HttpFoundation\File\MimeType" name="ExtensionGuesserInterface"/>
  <member name="instance" type="{unknown}" default="" constant="null" visibility="private" line="33">
    <docblock>
      <description compact="The singleton instance."/>
      <var type="object">
        <type full="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" namespace="Symfony\Component\HttpFoundation\File\MimeType" name="ExtensionGuesser"/>
      </var>
    </docblock>
  </member>
  <member name="guessers" type="array" default="" visibility="protected" line="40">
    <docblock>
      <description compact="All registered ExtensionGuesserInterface instances."/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="getInstance" start="47" end="54" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the singleton instance."/>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" namespace="Symfony\Component\HttpFoundation\File\MimeType" name="ExtensionGuesser"/>
      </return>
    </docblock>
  </method>
  <constructor name="__construct" start="59" end="62" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Registers all natively provided extension guessers."/>
    </docblock>
  </constructor>
  <method name="register" start="71" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers a new extension guesser.">When guessing, this guesser is preferred over previously registered ones.</description>
      <param type="object" variable="$guesser">
        <type full="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface" namespace="Symfony\Component\HttpFoundation\File\MimeType" name="ExtensionGuesserInterface"/>
      </param>
    </docblock>
    <parameter name="guesser" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface" namespace="Symfony\Component\HttpFoundation\File\MimeType" name="ExtensionGuesserInterface"/>
    </parameter>
  </method>
  <method name="guess" start="88" end="95" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Tries to guess the extension.">The mime type is passed to each registered mime type guesser in reverse order
of their registration (last registered is queried first). Once a guesser
returns a value that is not NULL, this method terminates and returns the
value.</description>
      <param description="The mime type" type="string" variable="$mimeType"/>
      <return description="The guessed extension or NULL, if none could be guessed" type="string"/>
    </docblock>
    <parameter name="mimeType" byreference="false" type="{unknown}"/>
  </method>
</class>
