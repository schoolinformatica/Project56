<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\HttpFoundation\JsonResponse" namespace="Symfony\Component\HttpFoundation" name="JsonResponse" abstract="false" final="false" start="25" end="226">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation" file="JsonResponse.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/http-foundation/JsonResponse.php" size="7390" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="e24a42563ed3c32574fc7321910b9bfed7b61bc9" relative="vendor/symfony/http-foundation/JsonResponse.php"/>
  <docblock>
    <description compact="Response represents an HTTP response in JSON format.">Note that this class does not force the returned JSON content to be an
object. It is however recommended that you do return an object as it
protects yourself against XSSI and JSON-JavaScript Hijacking.</description>
    <see value="https://www.owasp.org/index.php/OWASP_AJAX_Security_Guidelines#Always_return_JSON_with_an_Object_on_the_outside"/>
    <author value="Igor Wiedler &lt;igor@wiedler.ch&gt;"/>
  </docblock>
  <extends full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
  <member name="data" visibility="protected" line="27"/>
  <member name="callback" visibility="protected" line="28"/>
  <member name="encodingOptions" type="integer" default="15" visibility="protected" line="32"/>
  <constructor name="__construct" start="41" end="50" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="The response data" type="mixed" variable="$data"/>
      <param description="The response status code" type="int" variable="$status"/>
      <param description="An array of response headers" type="array" variable="$headers"/>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="status" byreference="false" type="integer" default="200"/>
    <parameter name="headers" byreference="false" type="array" default=""/>
  </constructor>
  <method name="create" start="55" end="58" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}" default="" constant="null"/>
    <parameter name="status" byreference="false" type="integer" default="200"/>
    <parameter name="headers" byreference="false" type="array" default=""/>
  </method>
  <method name="setCallback" start="69" end="85" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the JSONP callback."/>
      <param description="The JSONP callback or null to use none" type="object" variable="$callback">
        <type full="Symfony\Component\HttpFoundation\string|null" namespace="Symfony\Component\HttpFoundation" name="string|null"/>
      </param>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\JsonResponse" namespace="Symfony\Component\HttpFoundation" name="JsonResponse"/>
      </return>
      <throws description="When the callback name is not valid" type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="callback" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="setData" start="96" end="151" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the data to be sent as JSON."/>
      <param type="mixed" variable="$data"/>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\JsonResponse" namespace="Symfony\Component\HttpFoundation" name="JsonResponse"/>
      </return>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="data" byreference="false" type="array" default=""/>
  </method>
  <method name="getEncodingOptions" start="158" end="161" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns options used while encoding data to JSON."/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="setEncodingOptions" start="170" end="175" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets options used while encoding data to JSON."/>
      <param type="int" variable="$encodingOptions"/>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\JsonResponse" namespace="Symfony\Component\HttpFoundation" name="JsonResponse"/>
      </return>
    </docblock>
    <parameter name="encodingOptions" byreference="false" type="{unknown}"/>
  </method>
  <method name="update" start="182" end="198" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Updates the content and headers according to the JSON data and callback."/>
      <return type="object">
        <type full="Symfony\Component\HttpFoundation\JsonResponse" namespace="Symfony\Component\HttpFoundation" name="JsonResponse"/>
      </return>
    </docblock>
    <inline>
      <comment value="Only set the header when there is none or when it equals 'text/javascript' (from a previous update with callback)" line="191"/>
      <comment value="in order to not overwrite a custom definition." line="192"/>
    </inline>
  </method>
  <method name="transformJsonError" start="200" end="225" abstract="false" final="false" static="false" visibility="private"/>
</class>
