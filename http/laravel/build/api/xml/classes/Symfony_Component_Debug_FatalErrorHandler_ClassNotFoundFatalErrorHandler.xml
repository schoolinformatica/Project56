<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Symfony\Component\Debug\FatalErrorHandler\ClassNotFoundFatalErrorHandler" namespace="Symfony\Component\Debug\FatalErrorHandler" name="ClassNotFoundFatalErrorHandler" abstract="false" final="false" start="26" end="212">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/debug/FatalErrorHandler" file="ClassNotFoundFatalErrorHandler.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/debug/FatalErrorHandler/ClassNotFoundFatalErrorHandler.php" size="7787" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="503374768a4e70a62be71e4d4537b739994118ee" relative="vendor/symfony/debug/FatalErrorHandler/ClassNotFoundFatalErrorHandler.php"/>
  <docblock>
    <description compact="ErrorHandler for classes that do not exist."/>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
  </docblock>
  <implements full="Symfony\Component\Debug\FatalErrorHandler\FatalErrorHandlerInterface" namespace="Symfony\Component\Debug\FatalErrorHandler" name="FatalErrorHandlerInterface"/>
  <method name="handleError" start="31" end="75" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="error" byreference="false" type="array"/>
    <parameter name="exception" byreference="false" type="object">
      <type full="Symfony\Component\Debug\Exception\FatalErrorException" namespace="Symfony\Component\Debug\Exception" name="FatalErrorException"/>
    </parameter>
  </method>
  <method name="getClassCandidates" start="87" end="131" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Tries to guess the full namespace for a given class name.">By default, it looks for PSR-0 and PSR-4 classes registered via a Symfony or a Composer
autoloader (that should cover all common cases).</description>
      <param description="A class name (without its namespace)" type="string" variable="$class"/>
      <return description="An array of possible fully qualified class names" type="array"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="find Symfony and Composer autoloaders" line="93"/>
    </inline>
  </method>
  <method name="findClassInPath" start="140" end="155" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$path"/>
      <param type="string" variable="$class"/>
      <param type="string" variable="$prefix"/>
      <return type="array"/>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
  </method>
  <method name="convertFileToClass" start="164" end="201" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$path"/>
      <param type="string" variable="$file"/>
      <param type="string" variable="$prefix"/>
      <return type="object">
        <type full="Symfony\Component\Debug\FatalErrorHandler\string|null" namespace="Symfony\Component\Debug\FatalErrorHandler" name="string|null"/>
      </return>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="file" byreference="false" type="{unknown}"/>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="We cannot use the autoloader here as most of them use require; but if the class" line="185"/>
      <comment value="is not found, the new autoloader call will require the file again leading to a" line="186"/>
      <comment value="&quot;cannot redeclare class&quot; error." line="187"/>
    </inline>
  </method>
  <method name="classExists" start="208" end="211" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$class"/>
      <return type="object">
        <type full="Symfony\Component\Debug\FatalErrorHandler\bool" namespace="Symfony\Component\Debug\FatalErrorHandler" name="bool"/>
      </return>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
</class>
