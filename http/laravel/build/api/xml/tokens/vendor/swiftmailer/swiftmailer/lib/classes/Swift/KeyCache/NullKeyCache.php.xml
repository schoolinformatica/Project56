<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/swiftmailer/swiftmailer/lib/classes/Swift/KeyCache" file="NullKeyCache.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/swiftmailer/swiftmailer/lib/classes/Swift/KeyCache/NullKeyCache.php" size="2755" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="1dd84071e8d3f100b32e33e2d626ae11be7c8594" relative="vendor/swiftmailer/swiftmailer/lib/classes/Swift/KeyCache/NullKeyCache.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> * This file is part of SwiftMailer.</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> * (c) 2004-2009 Chris Corbyn</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * file that was distributed with this source code.</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="10"/>
  <line no="11">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * A null KeyCache that does not cache at all.</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * @author Chris Corbyn</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="16">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Swift_KeyCache_NullKeyCache</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Swift_KeyCache</token>
  </line>
  <line no="17">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">     * Set a string into the cache under $itemKey for the namespace $nsKey.</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     * @see MODE_WRITE, MODE_APPEND</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     * @param string $nsKey</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">     * @param string $itemKey</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     * @param string $string</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     * @param int    $mode</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="28">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setString</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nsKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$itemKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$string</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="30">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="31"/>
  <line no="32">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     * Set a ByteStream into the cache under $itemKey for the namespace $nsKey.</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     * @see MODE_WRITE, MODE_APPEND</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     * @param string                 $nsKey</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">     * @param string                 $itemKey</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">     * @param Swift_OutputByteStream $os</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">     * @param int                    $mode</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">importFromByteStream</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nsKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$itemKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Swift_OutputByteStream</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$os</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="45"/>
  <line no="46">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     * Provides a ByteStream which when written to, writes data to $itemKey.</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     * NOTE: The stream will always write in append mode.</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     * @param string                $nsKey</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     * @param string                $itemKey</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">     * @param Swift_InputByteStream $writeThrough</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">     * @return Swift_InputByteStream</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getInputByteStream</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nsKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$itemKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Swift_InputByteStream</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$writeThrough</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="60"/>
  <line no="61">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">     * Get data back out of the cache as a string.</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     * @param string $nsKey</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">     * @param string $itemKey</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getString</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nsKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$itemKey</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="72"/>
  <line no="73">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT">     * Get data back out of the cache as a ByteStream.</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">     * @param string                $nsKey</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">     * @param string                $itemKey</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">     * @param Swift_InputByteStream $is      to write the data to</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">exportToByteStream</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nsKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$itemKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Swift_InputByteStream</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$is</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="83"/>
  <line no="84">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT">     * Check if the given $itemKey exists in the namespace $nsKey.</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">     * @param string $nsKey</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">     * @param string $itemKey</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="91">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">hasKey</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nsKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$itemKey</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="96"/>
  <line no="97">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="98">
    <token name="T_DOC_COMMENT">     * Clear data for $itemKey in the namespace $nsKey if it exists.</token>
  </line>
  <line no="99">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT">     * @param string $nsKey</token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT">     * @param string $itemKey</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">clearKey</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nsKey</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$itemKey</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="106"/>
  <line no="107">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">     * Clear all data in the namespace $nsKey if it exists.</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">     * @param string $nsKey</token>
  </line>
  <line no="111">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">clearAll</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$nsKey</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="113">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="115">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="116"/>
</source>
