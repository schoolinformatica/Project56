<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/var-dumper/Tests" file="HtmlDumperTest.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/symfony/var-dumper/Tests/HtmlDumperTest.php" size="7863" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="5013fd096f5adf16305484821401e147f83a462e" relative="vendor/symfony/var-dumper/Tests/HtmlDumperTest.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> * This file is part of the Symfony package.</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> * (c) Fabien Potencier &lt;fabien@symfony.com&gt;</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> * file that was distributed with this source code.</token>
  </line>
  <line no="10">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="11"/>
  <line no="12">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Symfony</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Component</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">VarDumper</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Tests</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="13"/>
  <line no="14">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Symfony</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Component</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">VarDumper</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Cloner</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">VarCloner</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="15">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Symfony</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Component</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">VarDumper</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Dumper</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">HtmlDumper</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="16"/>
  <line no="17">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * @author Nicolas Grekas &lt;p@tchwork.com&gt;</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="20">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">HtmlDumperTest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">PHPUnit_Framework_TestCase</token>
  </line>
  <line no="21">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testGet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="23">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">        </token>
    <token name="T_REQUIRE">require</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DIR">__DIR__</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/Fixtures/dumb-var.php'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="25"/>
  <line no="26">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">HtmlDumper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'php://output'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumper</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setDumpHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;foo&gt;&lt;/foo&gt;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="28">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumper</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setDumpBoundaries</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;bar&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;/bar&gt;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$cloner</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">VarCloner</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$cloner</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addCasters</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">':stream'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$res</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">                </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'uri'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'wrapper_data'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="33"/>
  <line no="34">
    <token name="T_WHITESPACE">                </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cloner</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">cloneVar</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="38"/>
  <line no="39">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">ob_start</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumper</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">dump</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ob_get_clean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[ \t]+$/m'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">htmlspecialchars</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_QUOTES</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$intMax</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_INT_MAX</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/sf-dump-\d+/'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$res</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'res'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$closure54</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$r</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">defined</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'HHVM_VERSION'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;a class=sf-dump-ref&gt;#%d&lt;/a&gt;'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="50"/>
  <line no="51">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PHP_VERSION_ID</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">50400</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$closure54</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOTXT</token>
  </line>
  <line no="53"/>
  <line no="54">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;class&lt;/span&gt;: "&lt;span class=sf-dump-str title="48 characters"&gt;Symfony\Component\VarDumper\Tests\HtmlDumperTest&lt;/span&gt;"</token>
  </line>
  <line no="55">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;this&lt;/span&gt;: &lt;abbr title="Symfony\Component\VarDumper\Tests\HtmlDumperTest" class=sf-dump-note&gt;HtmlDumperTest&lt;/abbr&gt; {</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$r</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> &amp;#8230;}</token>
  </line>
  <line no="56">
    <token name="T_END_HEREDOC">EOTXT</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="58"/>
  <line no="59">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertStringMatchesFormat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">            </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOTXT</token>
  </line>
  <line no="61">
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;foo&gt;&lt;/foo&gt;&lt;bar&gt;&lt;span class=sf-dump-note&gt;array:24&lt;/span&gt; [&lt;samp&gt;</token>
  </line>
  <line no="62">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;number&lt;/span&gt;" =&gt; &lt;span class=sf-dump-num&gt;1&lt;/span&gt;</token>
  </line>
  <line no="63">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;0&lt;/span&gt; =&gt; &lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref01 title="2 occurrences"&gt;&amp;amp;1&lt;/a&gt; &lt;span class=sf-dump-const&gt;null&lt;/span&gt;</token>
  </line>
  <line no="64">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;const&lt;/span&gt;" =&gt; &lt;span class=sf-dump-num&gt;1.1&lt;/span&gt;</token>
  </line>
  <line no="65">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;1&lt;/span&gt; =&gt; &lt;span class=sf-dump-const&gt;true&lt;/span&gt;</token>
  </line>
  <line no="66">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;2&lt;/span&gt; =&gt; &lt;span class=sf-dump-const&gt;false&lt;/span&gt;</token>
  </line>
  <line no="67">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;3&lt;/span&gt; =&gt; &lt;span class=sf-dump-num&gt;NAN&lt;/span&gt;</token>
  </line>
  <line no="68">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;4&lt;/span&gt; =&gt; &lt;span class=sf-dump-num&gt;INF&lt;/span&gt;</token>
  </line>
  <line no="69">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;5&lt;/span&gt; =&gt; &lt;span class=sf-dump-num&gt;-INF&lt;/span&gt;</token>
  </line>
  <line no="70">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;6&lt;/span&gt; =&gt; &lt;span class=sf-dump-num&gt;</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$intMax</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/span&gt;</token>
  </line>
  <line no="71">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;str&lt;/span&gt;" =&gt; "&lt;span class=sf-dump-str title="5 characters"&gt;d&amp;#233;j&amp;#224;&lt;/span&gt;\\n"</token>
  </line>
  <line no="72">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;7&lt;/span&gt; =&gt; b"&lt;span class=sf-dump-str title="2 binary or non-UTF-8 characters"&gt;&amp;#233;&lt;/span&gt;\\x00"</token>
  </line>
  <line no="73">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;[]&lt;/span&gt;" =&gt; []</token>
  </line>
  <line no="74">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;res&lt;/span&gt;" =&gt; &lt;span class=sf-dump-note&gt;stream resource&lt;/span&gt; &lt;a class=sf-dump-ref&gt;@</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$res</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/a&gt;&lt;samp&gt;</token>
  </line>
  <line no="75">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;wrapper_type&lt;/span&gt;: "&lt;span class=sf-dump-str title="9 characters"&gt;plainfile&lt;/span&gt;"</token>
  </line>
  <line no="76">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;stream_type&lt;/span&gt;: "&lt;span class=sf-dump-str title="5 characters"&gt;STDIO&lt;/span&gt;"</token>
  </line>
  <line no="77">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;mode&lt;/span&gt;: "&lt;span class=sf-dump-str&gt;r&lt;/span&gt;"</token>
  </line>
  <line no="78">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;unread_bytes&lt;/span&gt;: &lt;span class=sf-dump-num&gt;0&lt;/span&gt;</token>
  </line>
  <line no="79">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;seekable&lt;/span&gt;: &lt;span class=sf-dump-const&gt;true&lt;/span&gt;</token>
  </line>
  <line no="80">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;timed_out&lt;/span&gt;: &lt;span class=sf-dump-const&gt;false&lt;/span&gt;</token>
  </line>
  <line no="81">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;blocked&lt;/span&gt;: &lt;span class=sf-dump-const&gt;true&lt;/span&gt;</token>
  </line>
  <line no="82">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;eof&lt;/span&gt;: &lt;span class=sf-dump-const&gt;false&lt;/span&gt;</token>
  </line>
  <line no="83">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;options&lt;/span&gt;: []</token>
  </line>
  <line no="84">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;/samp&gt;}</token>
  </line>
  <line no="85">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;obj&lt;/span&gt;" =&gt; &lt;abbr title="Symfony\Component\VarDumper\Tests\Fixture\DumbFoo" class=sf-dump-note&gt;DumbFoo&lt;/abbr&gt; {&lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref2%d title="2 occurrences"&gt;#%d&lt;/a&gt;&lt;samp id=</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref2%d&gt;</token>
  </line>
  <line no="86">
    <token name="T_ENCAPSED_AND_WHITESPACE">    +&lt;span class=sf-dump-public title="Public property"&gt;foo&lt;/span&gt;: "&lt;span class=sf-dump-str title="3 characters"&gt;foo&lt;/span&gt;"</token>
  </line>
  <line no="87">
    <token name="T_ENCAPSED_AND_WHITESPACE">    +"&lt;span class=sf-dump-public title="Runtime added dynamic property"&gt;bar&lt;/span&gt;": "&lt;span class=sf-dump-str title="3 characters"&gt;bar&lt;/span&gt;"</token>
  </line>
  <line no="88">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;/samp&gt;}</token>
  </line>
  <line no="89">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;closure&lt;/span&gt;" =&gt; &lt;span class=sf-dump-note&gt;Closure&lt;/span&gt; {</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$r</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;samp&gt;</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$closure54</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="90">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;parameters&lt;/span&gt;: &lt;span class=sf-dump-note&gt;array:2&lt;/span&gt; [&lt;samp&gt;</token>
  </line>
  <line no="91">
    <token name="T_ENCAPSED_AND_WHITESPACE">      "&lt;span class=sf-dump-key&gt;\$a&lt;/span&gt;" =&gt; []</token>
  </line>
  <line no="92">
    <token name="T_ENCAPSED_AND_WHITESPACE">      "&lt;span class=sf-dump-key&gt;&amp;amp;\$b&lt;/span&gt;" =&gt; &lt;span class=sf-dump-note&gt;array:2&lt;/span&gt; [&lt;samp&gt;</token>
  </line>
  <line no="93">
    <token name="T_ENCAPSED_AND_WHITESPACE">        "&lt;span class=sf-dump-key&gt;typeHint&lt;/span&gt;" =&gt; "&lt;span class=sf-dump-str title="3 characters"&gt;PDO&lt;/span&gt;"</token>
  </line>
  <line no="94">
    <token name="T_ENCAPSED_AND_WHITESPACE">        "&lt;span class=sf-dump-key&gt;default&lt;/span&gt;" =&gt; &lt;span class=sf-dump-const&gt;null&lt;/span&gt;</token>
  </line>
  <line no="95">
    <token name="T_ENCAPSED_AND_WHITESPACE">      &lt;/samp&gt;]</token>
  </line>
  <line no="96">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;/samp&gt;]</token>
  </line>
  <line no="97">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;file&lt;/span&gt;: "&lt;span class=sf-dump-str title="%d characters"&gt;</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/span&gt;"</token>
  </line>
  <line no="98">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-meta&gt;line&lt;/span&gt;: "&lt;span class=sf-dump-str title="%d characters"&gt;</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> to </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/span&gt;"</token>
  </line>
  <line no="99">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;/samp&gt;}</token>
  </line>
  <line no="100">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;line&lt;/span&gt;" =&gt; &lt;span class=sf-dump-num&gt;</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/span&gt;</token>
  </line>
  <line no="101">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;nobj&lt;/span&gt;" =&gt; &lt;span class=sf-dump-note&gt;array:1&lt;/span&gt; [&lt;samp&gt;</token>
  </line>
  <line no="102">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-index&gt;0&lt;/span&gt; =&gt; &lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref03 title="2 occurrences"&gt;&amp;amp;3&lt;/a&gt; {&lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref2%d title="3 occurrences"&gt;#%d&lt;/a&gt;}</token>
  </line>
  <line no="103">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;/samp&gt;]</token>
  </line>
  <line no="104">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;recurs&lt;/span&gt;" =&gt; &lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref04 title="2 occurrences"&gt;&amp;amp;4&lt;/a&gt; &lt;span class=sf-dump-note&gt;array:1&lt;/span&gt; [&lt;samp id=</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref04&gt;</token>
  </line>
  <line no="105">
    <token name="T_ENCAPSED_AND_WHITESPACE">    &lt;span class=sf-dump-index&gt;0&lt;/span&gt; =&gt; &lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref04 title="2 occurrences"&gt;&amp;amp;4&lt;/a&gt; &lt;span class=sf-dump-note&gt;array:1&lt;/span&gt; [&lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref04 title="2 occurrences"&gt;&amp;amp;4&lt;/a&gt;]</token>
  </line>
  <line no="106">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;/samp&gt;]</token>
  </line>
  <line no="107">
    <token name="T_ENCAPSED_AND_WHITESPACE">  &lt;span class=sf-dump-key&gt;8&lt;/span&gt; =&gt; &lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref01 title="2 occurrences"&gt;&amp;amp;1&lt;/a&gt; &lt;span class=sf-dump-const&gt;null&lt;/span&gt;</token>
  </line>
  <line no="108">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;sobj&lt;/span&gt;" =&gt; &lt;abbr title="Symfony\Component\VarDumper\Tests\Fixture\DumbFoo" class=sf-dump-note&gt;DumbFoo&lt;/abbr&gt; {&lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref2%d title="2 occurrences"&gt;#%d&lt;/a&gt;}</token>
  </line>
  <line no="109">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;snobj&lt;/span&gt;" =&gt; &lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref03 title="2 occurrences"&gt;&amp;amp;3&lt;/a&gt; {&lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref2%d title="3 occurrences"&gt;#%d&lt;/a&gt;}</token>
  </line>
  <line no="110">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;snobj2&lt;/span&gt;" =&gt; {&lt;a class=sf-dump-ref href=#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$dumpId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">-ref2%d title="3 occurrences"&gt;#%d&lt;/a&gt;}</token>
  </line>
  <line no="111">
    <token name="T_ENCAPSED_AND_WHITESPACE">  "&lt;span class=sf-dump-key&gt;file&lt;/span&gt;" =&gt; "&lt;span class=sf-dump-str title="%d characters"&gt;</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/span&gt;"</token>
  </line>
  <line no="112">
    <token name="T_ENCAPSED_AND_WHITESPACE">  b"&lt;span class=sf-dump-key&gt;bin-key-&amp;#233;&lt;/span&gt;" =&gt; ""</token>
  </line>
  <line no="113">
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/samp&gt;]</token>
  </line>
  <line no="114">
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/bar&gt;</token>
  </line>
  <line no="115"/>
  <line no="116">
    <token name="T_END_HEREDOC">EOTXT</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="118"/>
  <line no="119">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$out</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="122"/>
  <line no="123">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="124">
    <token name="T_DOC_COMMENT">     * @requires extension mbstring</token>
  </line>
  <line no="125">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testCharset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">mb_convert_encoding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#x421;&#x43B;&#x43E;&#x432;&#x430;&#x440;&#x44C;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1251'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="129"/>
  <line no="130">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">HtmlDumper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'php://output'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CP1251'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumper</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setDumpHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;foo&gt;&lt;/foo&gt;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumper</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setDumpBoundaries</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;bar&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;/bar&gt;'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$cloner</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">VarCloner</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="134"/>
  <line no="135">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$cloner</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">cloneVar</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">fopen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'php://memory'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'r+b'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$dumper</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">dump</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="138">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">rewind</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">stream_get_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$out</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="140"/>
  <line no="141">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertStringMatchesFormat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">            </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOTXT</token>
  </line>
  <line no="143">
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;foo&gt;&lt;/foo&gt;&lt;bar&gt;b"&lt;span class=sf-dump-str title="7 binary or non-UTF-8 characters"&gt;&amp;#1057;&amp;#1083;&amp;#1086;&amp;#1074;&amp;#1072;&amp;#1088;&amp;#1100;&lt;/span&gt;"</token>
  </line>
  <line no="144">
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/bar&gt;</token>
  </line>
  <line no="145"/>
  <line no="146">
    <token name="T_END_HEREDOC">EOTXT</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="148"/>
  <line no="149">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$out</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="152">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="153"/>
</source>
