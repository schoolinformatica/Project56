<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/fzaninotto/faker/test/Faker/Provider" file="ProviderOverrideTest.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/fzaninotto/faker/test/Faker/Provider/ProviderOverrideTest.php" size="5039" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="666a8beb8c99e7eea2f8d78768a09f1491c68b5b" relative="vendor/fzaninotto/faker/test/Faker/Provider/ProviderOverrideTest.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> * @author Mark van der Velden &lt;mark@dynom.nl&gt;</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="5"/>
  <line no="6">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Test</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Provider</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="7"/>
  <line no="8">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="9"/>
  <line no="10">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * Class ProviderOverrideTest</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> * @package Faker\Test\Provider</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * This class tests a large portion of all locale specific providers. It does not test the entire stack, because each</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * locale specific provider (can) has specific implementations. The goal of this test is to test the common denominator</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * and to try to catch possible invalid multi-byte sequences.</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="19">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ProviderOverrideTest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">PHPUnit_Framework_TestCase</token>
  </line>
  <line no="20">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * Constants with regular expression patterns for testing the output.</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">     * Regular expressions are sensitive for malformed strings (e.g.: strings with incorrect encodings) so by using</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     * PCRE for the tests, even though they seem fairly pointless, we test for incorrect encodings also.</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/.+/u'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     * Slightly more specific for e-mail, the point isn't to properly validate e-mails.</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TEST_EMAIL_REGEX</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/^(.+)@(.+)$/ui'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="33"/>
  <line no="34">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     * @dataProvider localeDataProvider</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * @param string $locale</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testAddress</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="41"/>
  <line no="42">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">city</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">postcode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">address</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">country</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="47"/>
  <line no="48"/>
  <line no="49">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     * @dataProvider localeDataProvider</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     * @param string $locale</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testCompany</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="56"/>
  <line no="57">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">company</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="59"/>
  <line no="60"/>
  <line no="61">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">     * @dataProvider localeDataProvider</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     * @param string $locale</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testDateTime</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="68"/>
  <line no="69">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">century</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">timezone</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="72"/>
  <line no="73"/>
  <line no="74">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">     * @dataProvider localeDataProvider</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">     * @param string $locale</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testInternet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="81"/>
  <line no="82">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">userName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="83"/>
  <line no="84">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_EMAIL_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">email</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_EMAIL_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">safeEmail</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_EMAIL_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">freeEmail</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_EMAIL_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">companyEmail</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="89"/>
  <line no="90"/>
  <line no="91">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="92">
    <token name="T_DOC_COMMENT">     * @dataProvider localeDataProvider</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">     * @param string $locale</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testPerson</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="98"/>
  <line no="99">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">title</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">firstName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">lastName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="104"/>
  <line no="105"/>
  <line no="106">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT">     * @dataProvider localeDataProvider</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">     * @param string $locale</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testPhoneNumber</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="113"/>
  <line no="114">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">phoneNumber</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="116"/>
  <line no="117"/>
  <line no="118">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="119">
    <token name="T_DOC_COMMENT">     * @dataProvider localeDataProvider</token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT">     * @param string $locale</token>
  </line>
  <line no="121">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testUserAgent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="125"/>
  <line no="126">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">userAgent</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="128"/>
  <line no="129"/>
  <line no="130">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="131">
    <token name="T_DOC_COMMENT">     * @dataProvider localeDataProvider</token>
  </line>
  <line no="132">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="133">
    <token name="T_DOC_COMMENT">     * @param null   $locale</token>
  </line>
  <line no="134">
    <token name="T_DOC_COMMENT">     * @param string $locale</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testUuid</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="138">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Faker</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Factory</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="139"/>
  <line no="140">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertRegExp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TEST_STRING_REGEX</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$faker</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">uuid</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="141">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="142"/>
  <line no="143"/>
  <line no="144">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="145">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="146">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">localeDataProvider</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$locales</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAllLocales</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="151"/>
  <line no="152">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locales</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$locale</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$locale</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="157"/>
  <line no="158">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="160"/>
  <line no="161"/>
  <line no="162">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="163">
    <token name="T_DOC_COMMENT">     * Returns all locales as array values</token>
  </line>
  <line no="164">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="165">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="166">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="167">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAllLocales</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$locales</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="170"/>
  <line no="171">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locales</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="172">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$locales</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="173">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="174"/>
  <line no="175">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Finding all PHP files in the xx_XX directories</token>
  </line>
  <line no="176">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$providerDir</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DIR">__DIR__</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/../../../src/Faker/Provider'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="177">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">glob</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$providerDir</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/*_*/*.php'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="178">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$localisation</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">basename</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">dirname</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="179"/>
  <line no="180">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$locales</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$localisation</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="181">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="182">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="183"/>
  <line no="184">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$locales</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$localisation</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$localisation</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="186"/>
  <line no="187">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$locales</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="188">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="189">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="190"/>
</source>
