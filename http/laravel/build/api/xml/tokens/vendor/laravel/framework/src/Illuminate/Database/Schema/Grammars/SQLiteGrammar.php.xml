<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Schema/Grammars" file="SQLiteGrammar.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Schema/Grammars/SQLiteGrammar.php" size="16402" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="2ce839507c2248a19ba03e9c1910aee7683c5130" relative="vendor/laravel/framework/src/Illuminate/Database/Schema/Grammars/SQLiteGrammar.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Illuminate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Database</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Schema</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Grammars</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Illuminate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Support</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Illuminate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Database</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Connection</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="7">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Illuminate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Database</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Schema</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="8"/>
  <line no="9">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SQLiteGrammar</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Grammar</token>
  </line>
  <line no="10">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="11">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT">     * The possible column modifiers.</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">     * @var array</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="16">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$modifiers</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Nullable'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Default'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Increment'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="17"/>
  <line no="18">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">     * The columns available as serials.</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     * @var array</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="23">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$serials</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'bigInteger'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mediumInteger'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'smallInteger'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'tinyInteger'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="24"/>
  <line no="25">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     * Compile the query to determine if a table exists.</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="30">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileTableExists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"select * from sqlite_master where type = 'table' and name = ?"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="34"/>
  <line no="35">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * Compile the query to determine the list of columns.</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">     * @param  string  $table</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileColumnExists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'pragma table_info('</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'__'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="45"/>
  <line no="46">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     * Compile a create table command.</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileCreate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">', '</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getColumns</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="56"/>
  <line no="57">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">temporary</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'create temporary'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'create'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="58"/>
  <line no="59">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' table '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> (</token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60"/>
  <line no="61">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// SQLite forces primary keys to be added when the table is initially created</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// so we will need to check for a primary key commands and add the columns</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// to the table's declaration here so they can be created on the tables.</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addForeignKeys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="65"/>
  <line no="66">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addPrimaryKeys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="67"/>
  <line no="68">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">')'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="70"/>
  <line no="71">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">     * Get the foreign key syntax for a table creation statement.</token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">     * @return string|null</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">addForeignKeys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="80"/>
  <line no="81">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$foreigns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getCommandsByName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'foreign'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="82"/>
  <line no="83">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Once we have all the foreign key commands for the table creation statement</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// we'll loop through each of them and add them to the create table SQL we</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// are building, since SQLite needs foreign keys on the tables creation.</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$foreigns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getForeignKey</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="88"/>
  <line no="89">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_null</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">onDelete</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> on delete </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">onDelete</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="92"/>
  <line no="93">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_null</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">onUpdate</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> on update </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">onUpdate</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="97"/>
  <line no="98">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$sql</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="100"/>
  <line no="101">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">     * Get the SQL for the foreign key.</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="104">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $foreign</token>
  </line>
  <line no="105">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getForeignKey</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$on</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">on</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="110"/>
  <line no="111">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// We need to columnize the columns that the foreign key is being defined for</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// so that it is a properly formatted list. Once we have done this, we can</token>
  </line>
  <line no="113">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// return the foreign key SQL declaration to the calling method for use.</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columnize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columns</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="115"/>
  <line no="116">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$onColumns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columnize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY_CAST">(array)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$foreign</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">references</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="117"/>
  <line no="118">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">, foreign key(</token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">) references </token>
    <token name="T_VARIABLE">$on</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">(</token>
    <token name="T_VARIABLE">$onColumns</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="120"/>
  <line no="121">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="122">
    <token name="T_DOC_COMMENT">     * Get the primary key syntax for a table creation statement.</token>
  </line>
  <line no="123">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="124">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="125">
    <token name="T_DOC_COMMENT">     * @return string|null</token>
  </line>
  <line no="126">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">addPrimaryKeys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$primary</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getCommandByName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'primary'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="130"/>
  <line no="131">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_null</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$primary</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columnize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$primary</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columns</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="133"/>
  <line no="134">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">, primary key (</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="135">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="137"/>
  <line no="138">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="139">
    <token name="T_DOC_COMMENT">     * Compile alter table commands for adding columns.</token>
  </line>
  <line no="140">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="141">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="142">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="143">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="144">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileAdd</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="148"/>
  <line no="149">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">prefixArray</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'add column'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getColumns</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="150"/>
  <line no="151">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$statements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="152"/>
  <line no="153">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$statements</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'alter table '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="156"/>
  <line no="157">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$statements</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="158">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="159"/>
  <line no="160">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="161">
    <token name="T_DOC_COMMENT">     * Compile a unique key command.</token>
  </line>
  <line no="162">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="163">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="164">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="165">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="166">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="167">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileUnique</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columnize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columns</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="170"/>
  <line no="171">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="172"/>
  <line no="173">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">create unique index </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">index</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> on </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> (</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="174">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="175"/>
  <line no="176">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="177">
    <token name="T_DOC_COMMENT">     * Compile a plain index key command.</token>
  </line>
  <line no="178">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="179">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="180">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="181">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="182">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="183">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileIndex</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columnize</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columns</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="186"/>
  <line no="187">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="188"/>
  <line no="189">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">create index </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">index</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> on </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> (</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="190">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="191"/>
  <line no="192">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="193">
    <token name="T_DOC_COMMENT">     * Compile a foreign key command.</token>
  </line>
  <line no="194">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="195">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="196">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="197">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="198">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="199">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileForeign</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="200">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Handled on table creation...</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="203"/>
  <line no="204">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="205">
    <token name="T_DOC_COMMENT">     * Compile a drop table command.</token>
  </line>
  <line no="206">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="207">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="208">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="209">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="210">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileDrop</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="212">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="213">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'drop table '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="215"/>
  <line no="216">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="217">
    <token name="T_DOC_COMMENT">     * Compile a drop table (if exists) command.</token>
  </line>
  <line no="218">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="219">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="220">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="221">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="222">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="223">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileDropIfExists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="224">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="225">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'drop table if exists '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="227"/>
  <line no="228">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="229">
    <token name="T_DOC_COMMENT">     * Compile a drop column command.</token>
  </line>
  <line no="230">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="231">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="232">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="233">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Connection  $connection</token>
  </line>
  <line no="234">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="235">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileDropColumn</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Connection</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$connection</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="237">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$schema</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$connection</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDoctrineSchemaManager</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="239"/>
  <line no="240">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableDiff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDoctrineTableDiff</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$schema</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="241"/>
  <line no="242">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="243">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$connection</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDoctrineColumn</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="244"/>
  <line no="245">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$tableDiff</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">removedColumns</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="246">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="247"/>
  <line no="248">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY_CAST">(array)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$schema</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDatabasePlatform</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAlterTableSQL</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableDiff</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="249">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="250"/>
  <line no="251">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="252">
    <token name="T_DOC_COMMENT">     * Compile a drop unique key command.</token>
  </line>
  <line no="253">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="254">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="255">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="256">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="257">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="258">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileDropUnique</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">drop index </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">index</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="262"/>
  <line no="263">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="264">
    <token name="T_DOC_COMMENT">     * Compile a drop index command.</token>
  </line>
  <line no="265">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="266">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="267">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="268">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="269">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="270">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileDropIndex</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="271">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="272">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">drop index </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">index</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="273">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="274"/>
  <line no="275">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="276">
    <token name="T_DOC_COMMENT">     * Compile a rename table command.</token>
  </line>
  <line no="277">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="278">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="279">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $command</token>
  </line>
  <line no="280">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="281">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="282">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileRename</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="283">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="284">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="285"/>
  <line no="286">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">alter table </token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$from</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> rename to </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">wrapTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$command</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">to</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="287">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="288"/>
  <line no="289">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="290">
    <token name="T_DOC_COMMENT">     * Create the column definition for a char type.</token>
  </line>
  <line no="291">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="292">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="293">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="294">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="295">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeChar</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="296">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="297">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'varchar'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="299"/>
  <line no="300">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="301">
    <token name="T_DOC_COMMENT">     * Create the column definition for a string type.</token>
  </line>
  <line no="302">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="303">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="304">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="305">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="306">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeString</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="307">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="308">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'varchar'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="309">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="310"/>
  <line no="311">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="312">
    <token name="T_DOC_COMMENT">     * Create the column definition for a text type.</token>
  </line>
  <line no="313">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="314">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="315">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="316">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="317">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeText</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="318">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="319">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'text'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="320">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="321"/>
  <line no="322">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="323">
    <token name="T_DOC_COMMENT">     * Create the column definition for a medium text type.</token>
  </line>
  <line no="324">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="325">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="326">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="327">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="328">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeMediumText</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="329">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="330">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'text'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="331">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="332"/>
  <line no="333">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="334">
    <token name="T_DOC_COMMENT">     * Create the column definition for a long text type.</token>
  </line>
  <line no="335">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="336">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="337">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="338">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="339">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeLongText</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="340">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="341">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'text'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="342">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="343"/>
  <line no="344">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="345">
    <token name="T_DOC_COMMENT">     * Create the column definition for a integer type.</token>
  </line>
  <line no="346">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="347">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="348">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="349">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="350">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="351">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="352">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="353">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="354"/>
  <line no="355">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="356">
    <token name="T_DOC_COMMENT">     * Create the column definition for a big integer type.</token>
  </line>
  <line no="357">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="358">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="359">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="360">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="361">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeBigInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="362">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="363">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="364">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="365"/>
  <line no="366">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="367">
    <token name="T_DOC_COMMENT">     * Create the column definition for a medium integer type.</token>
  </line>
  <line no="368">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="369">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="370">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="371">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="372">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeMediumInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="373">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="374">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="375">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="376"/>
  <line no="377">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="378">
    <token name="T_DOC_COMMENT">     * Create the column definition for a tiny integer type.</token>
  </line>
  <line no="379">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="380">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="381">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="382">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="383">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeTinyInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="384">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="385">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="386">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="387"/>
  <line no="388">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="389">
    <token name="T_DOC_COMMENT">     * Create the column definition for a small integer type.</token>
  </line>
  <line no="390">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="391">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="392">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="393">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="394">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeSmallInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="395">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="396">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="397">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="398"/>
  <line no="399">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="400">
    <token name="T_DOC_COMMENT">     * Create the column definition for a float type.</token>
  </line>
  <line no="401">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="402">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="403">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="404">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="405">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeFloat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="406">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="407">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'float'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="408">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="409"/>
  <line no="410">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="411">
    <token name="T_DOC_COMMENT">     * Create the column definition for a double type.</token>
  </line>
  <line no="412">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="413">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="414">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="415">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="416">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeDouble</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="417">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="418">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'float'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="419">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="420"/>
  <line no="421">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="422">
    <token name="T_DOC_COMMENT">     * Create the column definition for a decimal type.</token>
  </line>
  <line no="423">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="424">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="425">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="426">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="427">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeDecimal</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="428">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="429">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'numeric'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="430">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="431"/>
  <line no="432">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="433">
    <token name="T_DOC_COMMENT">     * Create the column definition for a boolean type.</token>
  </line>
  <line no="434">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="435">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="436">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="437">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="438">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="439">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="440">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'tinyint'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="441">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="442"/>
  <line no="443">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="444">
    <token name="T_DOC_COMMENT">     * Create the column definition for an enum type.</token>
  </line>
  <line no="445">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="446">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="447">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="448">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="449">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="450">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="451">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'varchar'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="452">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="453"/>
  <line no="454">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="455">
    <token name="T_DOC_COMMENT">     * Create the column definition for a json type.</token>
  </line>
  <line no="456">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="457">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="458">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="459">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="460">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeJson</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="461">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="462">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'text'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="463">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="464"/>
  <line no="465">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="466">
    <token name="T_DOC_COMMENT">     * Create the column definition for a jsonb type.</token>
  </line>
  <line no="467">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="468">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="469">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="470">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="471">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeJsonb</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="472">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="473">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'text'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="474">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="475"/>
  <line no="476">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="477">
    <token name="T_DOC_COMMENT">     * Create the column definition for a date type.</token>
  </line>
  <line no="478">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="479">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="480">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="481">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="482">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeDate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="483">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="484">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'date'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="485">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="486"/>
  <line no="487">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="488">
    <token name="T_DOC_COMMENT">     * Create the column definition for a date-time type.</token>
  </line>
  <line no="489">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="490">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="491">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="492">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="493">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeDateTime</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="494">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="495">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'datetime'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="496">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="497"/>
  <line no="498">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="499">
    <token name="T_DOC_COMMENT">     * Create the column definition for a date-time type.</token>
  </line>
  <line no="500">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="501">
    <token name="T_DOC_COMMENT">     * Note: "SQLite does not have a storage class set aside for storing dates and/or times."</token>
  </line>
  <line no="502">
    <token name="T_DOC_COMMENT">     * @link https://www.sqlite.org/datatype3.html</token>
  </line>
  <line no="503">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="504">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="505">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="506">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="507">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeDateTimeTz</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="508">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="509">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'datetime'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="510">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="511"/>
  <line no="512">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="513">
    <token name="T_DOC_COMMENT">     * Create the column definition for a time type.</token>
  </line>
  <line no="514">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="515">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="516">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="517">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="518">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeTime</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="519">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="520">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'time'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="521">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="522"/>
  <line no="523">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="524">
    <token name="T_DOC_COMMENT">     * Create the column definition for a time type.</token>
  </line>
  <line no="525">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="526">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="527">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="528">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="529">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeTimeTz</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="530">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="531">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'time'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="532">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="533"/>
  <line no="534">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="535">
    <token name="T_DOC_COMMENT">     * Create the column definition for a timestamp type.</token>
  </line>
  <line no="536">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="537">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="538">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="539">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="540">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeTimestamp</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="541">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="542">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">useCurrent</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="543">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'datetime default CURRENT_TIMESTAMP'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="544">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="545"/>
  <line no="546">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'datetime'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="547">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="548"/>
  <line no="549">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="550">
    <token name="T_DOC_COMMENT">     * Create the column definition for a timestamp type.</token>
  </line>
  <line no="551">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="552">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="553">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="554">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="555">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeTimestampTz</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="556">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="557">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">useCurrent</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="558">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'datetime default CURRENT_TIMESTAMP'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="559">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="560"/>
  <line no="561">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'datetime'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="562">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="563"/>
  <line no="564">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="565">
    <token name="T_DOC_COMMENT">     * Create the column definition for a binary type.</token>
  </line>
  <line no="566">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="567">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="568">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="569">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="570">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeBinary</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="571">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="572">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'blob'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="573">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="574"/>
  <line no="575">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="576">
    <token name="T_DOC_COMMENT">     * Create the column definition for a uuid type.</token>
  </line>
  <line no="577">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="578">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="579">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="580">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="581">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">typeUuid</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="582">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="583">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'varchar'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="584">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="585"/>
  <line no="586">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="587">
    <token name="T_DOC_COMMENT">     * Get the SQL for a nullable column modifier.</token>
  </line>
  <line no="588">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="589">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="590">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="591">
    <token name="T_DOC_COMMENT">     * @return string|null</token>
  </line>
  <line no="592">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="593">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">modifyNullable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="594">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="595">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">nullable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' null'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' not null'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="596">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="597"/>
  <line no="598">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="599">
    <token name="T_DOC_COMMENT">     * Get the SQL for a default column modifier.</token>
  </line>
  <line no="600">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="601">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="602">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="603">
    <token name="T_DOC_COMMENT">     * @return string|null</token>
  </line>
  <line no="604">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="605">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">modifyDefault</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="606">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="607">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_null</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">default</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="608">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' default '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getDefaultValue</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">default</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="609">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="610">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="611"/>
  <line no="612">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="613">
    <token name="T_DOC_COMMENT">     * Get the SQL for an auto-increment column modifier.</token>
  </line>
  <line no="614">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="615">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Database\Schema\Blueprint  $blueprint</token>
  </line>
  <line no="616">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Support\Fluent  $column</token>
  </line>
  <line no="617">
    <token name="T_DOC_COMMENT">     * @return string|null</token>
  </line>
  <line no="618">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="619">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">modifyIncrement</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Blueprint</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$blueprint</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Fluent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="620">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="621">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">type</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">serials</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$column</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">autoIncrement</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="622">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' primary key autoincrement'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="623">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="624">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="625">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="626"/>
</source>
