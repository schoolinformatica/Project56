<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Contracts/Debug" file="ExceptionHandler.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Contracts/Debug/ExceptionHandler.php" size="759" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="353dae024ed1bf8ae4a85ae7ce8a71bbaa16a663" relative="vendor/laravel/framework/src/Illuminate/Contracts/Debug/ExceptionHandler.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Illuminate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Contracts</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Debug</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Exception</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6"/>
  <line no="7">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ExceptionHandler</token>
  </line>
  <line no="8">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="9">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT">     * Report or log an exception.</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT">     * @param  \Exception  $e</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT">     * @return void</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="15">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">report</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Exception</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="16"/>
  <line no="17">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT">     * Render an exception into an HTTP response.</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">     * @param  \Illuminate\Http\Request  $request</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     * @param  \Exception  $e</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * @return \Symfony\Component\HttpFoundation\Response</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">render</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$request</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Exception</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="25"/>
  <line no="26">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     * Render an exception to the console.</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     * @param  \Symfony\Component\Console\Output\OutputInterface  $output</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     * @param  \Exception  $e</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     * @return void</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">renderForConsole</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$output</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Exception</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="34">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="35"/>
</source>
