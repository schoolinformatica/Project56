<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Builder" file="ParametersMatch.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Builder/ParametersMatch.php" size="1536" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="64440b6ce1d36a564e8c21ead366d7edf718e084" relative="vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Builder/ParametersMatch.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="3">
    <token name="T_COMMENT"> * This file is part of the PHPUnit_MockObject package.</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> * (c) Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * file that was distributed with this source code.</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="10"/>
  <line no="11">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * Builder interface for parameter matchers.</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * @since Interface available since Release 1.0.0</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="16">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_MockObject_Builder_ParametersMatch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_MockObject_Builder_Match</token>
  </line>
  <line no="17">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">     * Sets the parameters to match for, each parameter to this funtion will</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">     * be part of match. To perform specific matches or constraints create a</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     * new PHPUnit_Framework_Constraint and use it for the parameter.</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     * If the parameter value is not a constraint it will use the</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     * PHPUnit_Framework_Constraint_IsEqual for the value.</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     * Some examples:</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     * &lt;code&gt;</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     * // match first parameter with value 2</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     * $b-&gt;with(2);</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">     * // match first parameter with value 'smock' and second identical to 42</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     * $b-&gt;with('smock', new PHPUnit_Framework_Constraint_IsEqual(42));</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     * &lt;/code&gt;</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     * @return PHPUnit_Framework_MockObject_Builder_ParametersMatch</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">with</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="36"/>
  <line no="37">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">     * Sets a matcher which allows any kind of parameters.</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">     * Some examples:</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">     * &lt;code&gt;</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">     * // match any number of parameters</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">     * $b-&gt;withAnyParamers();</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">     * &lt;/code&gt;</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">     * @return PHPUnit_Framework_MockObject_Matcher_AnyParameters</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">withAnyParameters</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="49">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="50"/>
</source>
