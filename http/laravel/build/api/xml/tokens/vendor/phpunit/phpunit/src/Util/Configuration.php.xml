<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Util" file="Configuration.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/phpunit/phpunit/src/Util/Configuration.php" size="35651" time="2015-12-17T18:44:10+00:00" unixtime="1450377850" sha1="93b7a1a6574a86948a6e397a782c5e1d4258856b" relative="vendor/phpunit/phpunit/src/Util/Configuration.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="3">
    <token name="T_COMMENT"> * This file is part of PHPUnit.</token>
  </line>
  <line no="4">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="5">
    <token name="T_COMMENT"> * (c) Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</token>
  </line>
  <line no="6">
    <token name="T_COMMENT"> *</token>
  </line>
  <line no="7">
    <token name="T_COMMENT"> * For the full copyright and license information, please view the LICENSE</token>
  </line>
  <line no="8">
    <token name="T_COMMENT"> * file that was distributed with this source code.</token>
  </line>
  <line no="9">
    <token name="T_COMMENT"> */</token>
  </line>
  <line no="10"/>
  <line no="11">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * Wrapper for the PHPUnit XML configuration file.</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * Example XML configuration file:</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * &lt;code&gt;</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * &lt;?xml version="1.0" encoding="utf-8" ?&gt;</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * &lt;phpunit backupGlobals="true"</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> *          backupStaticAttributes="false"</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> *          bootstrap="/path/to/bootstrap.php"</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> *          cacheTokens="false"</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> *          columns="80"</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> *          colors="false"</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> *          stderr="false"</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT"> *          convertErrorsToExceptions="true"</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT"> *          convertNoticesToExceptions="true"</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT"> *          convertWarningsToExceptions="true"</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT"> *          forceCoversAnnotation="false"</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT"> *          mapTestClassNameToCoveredClassName="false"</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT"> *          printerClass="PHPUnit_TextUI_ResultPrinter"</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT"> *          processIsolation="false"</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT"> *          stopOnError="false"</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT"> *          stopOnFailure="false"</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT"> *          stopOnIncomplete="false"</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT"> *          stopOnRisky="false"</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT"> *          stopOnSkipped="false"</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT"> *          testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT"> *          timeoutForSmallTests="1"</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT"> *          timeoutForMediumTests="10"</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT"> *          timeoutForLargeTests="60"</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT"> *          beStrictAboutTestsThatDoNotTestAnything="false"</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT"> *          beStrictAboutOutputDuringTests="false"</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT"> *          beStrictAboutTestSize="false"</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT"> *          beStrictAboutTodoAnnotatedTests="false"</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT"> *          checkForUnintentionallyCoveredCode="false"</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT"> *          disallowChangesToGlobalState="false"</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT"> *          verbose="false"&gt;</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT"> *   &lt;testsuites&gt;</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT"> *     &lt;testsuite name="My Test Suite"&gt;</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT"> *       &lt;directory suffix="Test.php" phpVersion="5.3.0" phpVersionOperator="&gt;="&gt;/path/to/files&lt;/directory&gt;</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT"> *       &lt;file phpVersion="5.3.0" phpVersionOperator="&gt;="&gt;/path/to/MyTest.php&lt;/file&gt;</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT"> *       &lt;exclude&gt;/path/to/files/exclude&lt;/exclude&gt;</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT"> *     &lt;/testsuite&gt;</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT"> *   &lt;/testsuites&gt;</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT"> *   &lt;groups&gt;</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT"> *     &lt;include&gt;</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT"> *       &lt;group&gt;name&lt;/group&gt;</token>
  </line>
  <line no="59">
    <token name="T_DOC_COMMENT"> *     &lt;/include&gt;</token>
  </line>
  <line no="60">
    <token name="T_DOC_COMMENT"> *     &lt;exclude&gt;</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT"> *       &lt;group&gt;name&lt;/group&gt;</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT"> *     &lt;/exclude&gt;</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT"> *   &lt;/groups&gt;</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT"> *   &lt;filter&gt;</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT"> *     &lt;blacklist&gt;</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT"> *       &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT"> *       &lt;file&gt;/path/to/file&lt;/file&gt;</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT"> *       &lt;exclude&gt;</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT"> *         &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT"> *         &lt;file&gt;/path/to/file&lt;/file&gt;</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT"> *       &lt;/exclude&gt;</token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT"> *     &lt;/blacklist&gt;</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT"> *     &lt;whitelist addUncoveredFilesFromWhitelist="true"</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT"> *                processUncoveredFilesFromWhitelist="false"&gt;</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT"> *       &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT"> *       &lt;file&gt;/path/to/file&lt;/file&gt;</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT"> *       &lt;exclude&gt;</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT"> *         &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT"> *         &lt;file&gt;/path/to/file&lt;/file&gt;</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT"> *       &lt;/exclude&gt;</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT"> *     &lt;/whitelist&gt;</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT"> *   &lt;/filter&gt;</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT"> *   &lt;listeners&gt;</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT"> *     &lt;listener class="MyListener" file="/optional/path/to/MyListener.php"&gt;</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT"> *       &lt;arguments&gt;</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT"> *         &lt;array&gt;</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT"> *           &lt;element key="0"&gt;</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT"> *             &lt;string&gt;Sebastian&lt;/string&gt;</token>
  </line>
  <line no="91">
    <token name="T_DOC_COMMENT"> *           &lt;/element&gt;</token>
  </line>
  <line no="92">
    <token name="T_DOC_COMMENT"> *         &lt;/array&gt;</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT"> *         &lt;integer&gt;22&lt;/integer&gt;</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT"> *         &lt;string&gt;April&lt;/string&gt;</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT"> *         &lt;double&gt;19.78&lt;/double&gt;</token>
  </line>
  <line no="96">
    <token name="T_DOC_COMMENT"> *         &lt;null/&gt;</token>
  </line>
  <line no="97">
    <token name="T_DOC_COMMENT"> *         &lt;object class="stdClass"/&gt;</token>
  </line>
  <line no="98">
    <token name="T_DOC_COMMENT"> *         &lt;file&gt;MyRelativeFile.php&lt;/file&gt;</token>
  </line>
  <line no="99">
    <token name="T_DOC_COMMENT"> *         &lt;directory&gt;MyRelativeDir&lt;/directory&gt;</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT"> *       &lt;/arguments&gt;</token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT"> *     &lt;/listener&gt;</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT"> *   &lt;/listeners&gt;</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="104">
    <token name="T_DOC_COMMENT"> *   &lt;logging&gt;</token>
  </line>
  <line no="105">
    <token name="T_DOC_COMMENT"> *     &lt;log type="coverage-html" target="/tmp/report" lowUpperBound="50" highLowerBound="90"/&gt;</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT"> *     &lt;log type="coverage-clover" target="/tmp/clover.xml"/&gt;</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT"> *     &lt;log type="coverage-crap4j" target="/tmp/crap.xml" threshold="30"/&gt;</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT"> *     &lt;log type="json" target="/tmp/logfile.json"/&gt;</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT"> *     &lt;log type="plain" target="/tmp/logfile.txt"/&gt;</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT"> *     &lt;log type="tap" target="/tmp/logfile.tap"/&gt;</token>
  </line>
  <line no="111">
    <token name="T_DOC_COMMENT"> *     &lt;log type="junit" target="/tmp/logfile.xml" logIncompleteSkipped="false"/&gt;</token>
  </line>
  <line no="112">
    <token name="T_DOC_COMMENT"> *     &lt;log type="testdox-html" target="/tmp/testdox.html"/&gt;</token>
  </line>
  <line no="113">
    <token name="T_DOC_COMMENT"> *     &lt;log type="testdox-text" target="/tmp/testdox.txt"/&gt;</token>
  </line>
  <line no="114">
    <token name="T_DOC_COMMENT"> *   &lt;/logging&gt;</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT"> *   &lt;php&gt;</token>
  </line>
  <line no="117">
    <token name="T_DOC_COMMENT"> *     &lt;includePath&gt;.&lt;/includePath&gt;</token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT"> *     &lt;ini name="foo" value="bar"/&gt;</token>
  </line>
  <line no="119">
    <token name="T_DOC_COMMENT"> *     &lt;const name="foo" value="bar"/&gt;</token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT"> *     &lt;var name="foo" value="bar"/&gt;</token>
  </line>
  <line no="121">
    <token name="T_DOC_COMMENT"> *     &lt;env name="foo" value="bar"/&gt;</token>
  </line>
  <line no="122">
    <token name="T_DOC_COMMENT"> *     &lt;post name="foo" value="bar"/&gt;</token>
  </line>
  <line no="123">
    <token name="T_DOC_COMMENT"> *     &lt;get name="foo" value="bar"/&gt;</token>
  </line>
  <line no="124">
    <token name="T_DOC_COMMENT"> *     &lt;cookie name="foo" value="bar"/&gt;</token>
  </line>
  <line no="125">
    <token name="T_DOC_COMMENT"> *     &lt;server name="foo" value="bar"/&gt;</token>
  </line>
  <line no="126">
    <token name="T_DOC_COMMENT"> *     &lt;files name="foo" value="bar"/&gt;</token>
  </line>
  <line no="127">
    <token name="T_DOC_COMMENT"> *     &lt;request name="foo" value="bar"/&gt;</token>
  </line>
  <line no="128">
    <token name="T_DOC_COMMENT"> *   &lt;/php&gt;</token>
  </line>
  <line no="129">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="130">
    <token name="T_DOC_COMMENT"> *   &lt;selenium&gt;</token>
  </line>
  <line no="131">
    <token name="T_DOC_COMMENT"> *     &lt;browser name="Firefox on Linux"</token>
  </line>
  <line no="132">
    <token name="T_DOC_COMMENT"> *              browser="*firefox /usr/lib/firefox/firefox-bin"</token>
  </line>
  <line no="133">
    <token name="T_DOC_COMMENT"> *              host="my.linux.box"</token>
  </line>
  <line no="134">
    <token name="T_DOC_COMMENT"> *              port="4444"</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT"> *              timeout="30000"/&gt;</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT"> *   &lt;/selenium&gt;</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT"> * &lt;/phpunit&gt;</token>
  </line>
  <line no="138">
    <token name="T_DOC_COMMENT"> * &lt;/code&gt;</token>
  </line>
  <line no="139">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="140">
    <token name="T_DOC_COMMENT"> * @since Class available since Release 3.2.0</token>
  </line>
  <line no="141">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="142">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Util_Configuration</token>
  </line>
  <line no="143">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$instances</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="145"/>
  <line no="146">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$document</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$xpath</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="149"/>
  <line no="150">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="151">
    <token name="T_DOC_COMMENT">     * Loads a PHPUnit configuration file.</token>
  </line>
  <line no="152">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="153">
    <token name="T_DOC_COMMENT">     * @param string $filename</token>
  </line>
  <line no="154">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="157">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">filename</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="158">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">document</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Util_XML</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">loadFile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DOMXPath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">document</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="161"/>
  <line no="162">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="163">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.4.0</token>
  </line>
  <line no="164">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="165">
    <token name="T_WHITESPACE">    </token>
    <token name="T_FINAL">final</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__clone</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="166">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="167">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="168"/>
  <line no="169">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="170">
    <token name="T_DOC_COMMENT">     * Returns a PHPUnit configuration object.</token>
  </line>
  <line no="171">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="172">
    <token name="T_DOC_COMMENT">     * @param string $filename</token>
  </line>
  <line no="173">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="174">
    <token name="T_DOC_COMMENT">     * @return PHPUnit_Util_Configuration</token>
  </line>
  <line no="175">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="176">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.4.0</token>
  </line>
  <line no="177">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="178">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getInstance</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="179">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="180">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$realpath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">realpath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="181"/>
  <line no="182">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$realpath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="183">
    <token name="T_WHITESPACE">            </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_Exception</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">sprintf</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Could not read "%s".'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="186">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$filename</token>
  </line>
  <line no="187">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="188">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="189">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="190"/>
  <line no="191">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$instances</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$realpath</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="192">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$instances</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$realpath</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$realpath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="193">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="194"/>
  <line no="195">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$instances</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$realpath</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="196">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="197"/>
  <line no="198">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="199">
    <token name="T_DOC_COMMENT">     * Returns the realpath to the configuration file.</token>
  </line>
  <line no="200">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="201">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="202">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="203">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.6.0</token>
  </line>
  <line no="204">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFilename</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="207">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">filename</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="209"/>
  <line no="210">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="211">
    <token name="T_DOC_COMMENT">     * Returns the configuration for SUT filtering.</token>
  </line>
  <line no="212">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="213">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="214">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="215">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.1</token>
  </line>
  <line no="216">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="217">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFilterConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="218">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="219">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$addUncoveredFilesFromWhitelist</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="220">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$processUncoveredFilesFromWhitelist</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="221"/>
  <line no="222">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/whitelist'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="223"/>
  <line no="224">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="225">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">item</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'addUncoveredFilesFromWhitelist'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$addUncoveredFilesFromWhitelist</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="227">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">item</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="228">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'addUncoveredFilesFromWhitelist'</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="232">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="233"/>
  <line no="234">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">item</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'processUncoveredFilesFromWhitelist'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="235">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$processUncoveredFilesFromWhitelist</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tmp</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">item</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="237">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'processUncoveredFilesFromWhitelist'</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="239">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="240">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="241">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="242">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="243"/>
  <line no="244">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="245">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'blacklist'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="246">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="247">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'directory'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">readFilterDirectories</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="248">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/blacklist/directory'</token>
  </line>
  <line no="249">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="250">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">readFilterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="251">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/blacklist/file'</token>
  </line>
  <line no="252">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="253">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="254">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'exclude'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="255">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'directory'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">readFilterDirectories</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="256">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/blacklist/exclude/directory'</token>
  </line>
  <line no="257">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="258">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">readFilterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/blacklist/exclude/file'</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="262">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="263">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'whitelist'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="264">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'addUncoveredFilesFromWhitelist'</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$addUncoveredFilesFromWhitelist</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="265">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'processUncoveredFilesFromWhitelist'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$processUncoveredFilesFromWhitelist</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="266">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include'</token>
    <token name="T_WHITESPACE">                            </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="267">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'directory'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">readFilterDirectories</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="268">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/whitelist/directory'</token>
  </line>
  <line no="269">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="270">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">readFilterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="271">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/whitelist/file'</token>
  </line>
  <line no="272">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="273">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="274">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'exclude'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="275">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'directory'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">readFilterDirectories</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="276">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/whitelist/exclude/directory'</token>
  </line>
  <line no="277">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="278">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">readFilterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="279">
    <token name="T_WHITESPACE">                  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'filter/whitelist/exclude/file'</token>
  </line>
  <line no="280">
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="281">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="282">
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="283">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="284">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="285"/>
  <line no="286">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="287">
    <token name="T_DOC_COMMENT">     * Returns the configuration for groups.</token>
  </line>
  <line no="288">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="289">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="290">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="291">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.1</token>
  </line>
  <line no="292">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="293">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getGroupConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="294">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="295">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$groups</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="296">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="297">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'exclude'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="299"/>
  <line no="300">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'groups/include/group'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$group</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="301">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$groups</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$group</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="302">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="303"/>
  <line no="304">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'groups/exclude/group'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$group</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="305">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$groups</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'exclude'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$group</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="306">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="307"/>
  <line no="308">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$groups</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="309">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="310"/>
  <line no="311">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="312">
    <token name="T_DOC_COMMENT">     * Returns the configuration for listeners.</token>
  </line>
  <line no="313">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="314">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="315">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="316">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.4.0</token>
  </line>
  <line no="317">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="318">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getListenerConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="319">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="320">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="321"/>
  <line no="322">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'listeners/listener'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$listener</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="323">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$listener</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="324">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE">      </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="325">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$arguments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="326"/>
  <line no="327">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$listener</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="328">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="329">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$listener</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="330">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="331">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="332">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="333"/>
  <line no="334">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$listener</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">childNodes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="335">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INSTANCEOF">instanceof</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DOMElement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">tagName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'arguments'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="336">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">childNodes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="337">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INSTANCEOF">instanceof</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DOMElement</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="338">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">tagName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="339">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">tagName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'directory'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="340">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_VARIABLE">$arguments</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="341">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="342">
    <token name="T_WHITESPACE">                                </token>
    <token name="T_VARIABLE">$arguments</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Util_XML</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">xmlToVariable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$argument</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="343">
    <token name="T_WHITESPACE">                            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="344">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="345">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="346">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="347">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="348"/>
  <line no="349">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="350">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_WHITESPACE">     </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="351">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="352">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'arguments'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$arguments</token>
  </line>
  <line no="353">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="354">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="355"/>
  <line no="356">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="357">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="358"/>
  <line no="359">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="360">
    <token name="T_DOC_COMMENT">     * Returns the logging configuration.</token>
  </line>
  <line no="361">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="362">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="363">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="364">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getLoggingConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="365">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="366">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="367"/>
  <line no="368">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'logging/log'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="369">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="370">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'target'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="371"/>
  <line no="372">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="373">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="374">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="375"/>
  <line no="376">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="377"/>
  <line no="378">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'coverage-html'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="379">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'lowUpperBound'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="380">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'lowUpperBound'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="381">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'lowUpperBound'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="382">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_LNUMBER">50</token>
  </line>
  <line no="383">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="384">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="385"/>
  <line no="386">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'highLowerBound'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="387">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'highLowerBound'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="388">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'highLowerBound'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="389">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_LNUMBER">90</token>
  </line>
  <line no="390">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="391">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="392">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'coverage-crap4j'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="393">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'threshold'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="394">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'crap4jThreshold'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="395">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'threshold'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="396">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_LNUMBER">30</token>
  </line>
  <line no="397">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="398">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="399">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'junit'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="400">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'logIncompleteSkipped'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="401">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'logIncompleteSkipped'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="402">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'logIncompleteSkipped'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="403">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="404">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="405">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="406">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'coverage-text'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="407">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'showUncoveredFiles'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="408">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'coverageTextShowUncoveredFiles'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="409">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'showUncoveredFiles'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="410">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="411">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="412">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="413">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'showOnlySummary'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="414">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'coverageTextShowOnlySummary'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="415">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'showOnlySummary'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="416">
    <token name="T_WHITESPACE">                        </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="417">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="418">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="419">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="420"/>
  <line no="421">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="422">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="423"/>
  <line no="424">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="425">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="426"/>
  <line no="427">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="428">
    <token name="T_DOC_COMMENT">     * Returns the PHP configuration.</token>
  </line>
  <line no="429">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="430">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="431">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="432">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.1</token>
  </line>
  <line no="433">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="434">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getPHPConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="435">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="436">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="437">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include_path'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="438">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ini'</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="439">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'const'</token>
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="440">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'var'</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="441">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'env'</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="442">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'post'</token>
    <token name="T_WHITESPACE">         </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="443">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'get'</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="444">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'cookie'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="445">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'server'</token>
    <token name="T_WHITESPACE">       </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="446">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'files'</token>
    <token name="T_WHITESPACE">        </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="447">
    <token name="T_WHITESPACE">          </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'request'</token>
    <token name="T_WHITESPACE">      </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="448">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="449"/>
  <line no="450">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'php/includePath'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$includePath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="451">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$includePath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="452">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="453">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include_path'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="454">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="455">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="456"/>
  <line no="457">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'php/ini'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ini</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="458">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ini</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="459">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ini</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'value'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="460"/>
  <line no="461">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ini'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="462">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="463"/>
  <line no="464">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'php/const'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$const</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="465">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$const</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="466">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$const</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'value'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="467"/>
  <line no="468">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'const'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="469">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="470"/>
  <line no="471">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'var'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'env'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'post'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'get'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'cookie'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'server'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'files'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'request'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="472">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'php/'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="473">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="474">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'value'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="475"/>
  <line no="476">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="477">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="478">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="479"/>
  <line no="480">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="481">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="482"/>
  <line no="483">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="484">
    <token name="T_DOC_COMMENT">     * Handles the PHP configuration.</token>
  </line>
  <line no="485">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="486">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.20</token>
  </line>
  <line no="487">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="488">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">handlePHPConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="489">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="490">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$configuration</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getPHPConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="491"/>
  <line no="492">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$configuration</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include_path'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="493">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">ini_set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="494">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include_path'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="495">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PATH_SEPARATOR</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$configuration</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include_path'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
  </line>
  <line no="496">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">PATH_SEPARATOR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
  </line>
  <line no="497">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">ini_get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include_path'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="498">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="499">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="500"/>
  <line no="501">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$configuration</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ini'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="502">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">defined</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="503">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">constant</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="504">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="505"/>
  <line no="506">
    <token name="T_WHITESPACE">            </token>
    <token name="T_STRING">ini_set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="507">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="508"/>
  <line no="509">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$configuration</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'const'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="510">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">defined</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="511">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">define</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="512">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="513">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="514"/>
  <line no="515">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'var'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'post'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'get'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'cookie'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'server'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'files'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'request'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="516">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// See https://github.com/sebastianbergmann/phpunit/issues/277</token>
  </line>
  <line no="517">
    <token name="T_WHITESPACE">            </token>
    <token name="T_SWITCH">switch</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="518">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'var'</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="519">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$GLOBALS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="520">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="521"/>
  <line no="522">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'server'</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="523">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="524">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="525"/>
  <line no="526">
    <token name="T_WHITESPACE">                </token>
    <token name="T_DEFAULT">default</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="527">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$GLOBALS</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'_'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strtoupper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="528">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="529">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="530"/>
  <line no="531">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$configuration</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$array</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="532">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$target</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="533">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="534">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="535"/>
  <line no="536">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$configuration</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'env'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="537">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">false</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getenv</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="538">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">putenv</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">=</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="539">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="540">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_ENV</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="541">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$_ENV</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="542">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="543">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="544">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="545"/>
  <line no="546">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="547">
    <token name="T_DOC_COMMENT">     * Returns the PHPUnit configuration.</token>
  </line>
  <line no="548">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="549">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="550">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="551">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.14</token>
  </line>
  <line no="552">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="553">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getPHPUnitConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="554">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="555">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="556">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">document</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">documentElement</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="557"/>
  <line no="558">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'cacheTokens'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="559">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'cacheTokens'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="560">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'cacheTokens'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="561">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="562">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="563">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="564"/>
  <line no="565">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'columns'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="566">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'columns'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="567"/>
  <line no="568">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'max'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="569">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'columns'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'max'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="570">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="571">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'columns'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$columns</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">80</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="572">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="573">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="574"/>
  <line no="575">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'colors'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="576">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">/* only allow boolean for compatibility with previous versions</token>
  </line>
  <line no="577">
    <token name="T_COMMENT">              'always' only allowed from command line */</token>
  </line>
  <line no="578">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'colors'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="579">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'colors'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_TextUI_ResultPrinter</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">COLOR_AUTO</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="580">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="581">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'colors'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_TextUI_ResultPrinter</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">COLOR_NEVER</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="582">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="583">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="584"/>
  <line no="585">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="586">
    <token name="T_COMMENT">         * Issue #657</token>
  </line>
  <line no="587">
    <token name="T_COMMENT">         */</token>
  </line>
  <line no="588">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stderr'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="589">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stderr'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="590">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stderr'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="591">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="592">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="593">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="594"/>
  <line no="595">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'backupGlobals'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="596">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'backupGlobals'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="597">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'backupGlobals'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="598">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="599">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="600">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="601"/>
  <line no="602">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'backupStaticAttributes'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="603">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'backupStaticAttributes'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="604">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'backupStaticAttributes'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="605">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="606">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="607">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="608"/>
  <line no="609">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'bootstrap'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="610">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'bootstrap'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="611">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'bootstrap'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="612">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="613">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="614"/>
  <line no="615">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertErrorsToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="616">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertErrorsToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="617">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertErrorsToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="618">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="619">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="620">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="621"/>
  <line no="622">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertNoticesToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="623">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertNoticesToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="624">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertNoticesToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="625">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="626">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="627">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="628"/>
  <line no="629">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertWarningsToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="630">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertWarningsToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="631">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'convertWarningsToExceptions'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="632">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">true</token>
  </line>
  <line no="633">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="634">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="635"/>
  <line no="636">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'forceCoversAnnotation'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="637">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'forceCoversAnnotation'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="638">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'forceCoversAnnotation'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="639">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="640">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="641">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="642"/>
  <line no="643">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mapTestClassNameToCoveredClassName'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="644">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mapTestClassNameToCoveredClassName'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="645">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'mapTestClassNameToCoveredClassName'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="646">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="647">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="648">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="649"/>
  <line no="650">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'processIsolation'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="651">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'processIsolation'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="652">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'processIsolation'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="653">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="654">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="655">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="656"/>
  <line no="657">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnError'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="658">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnError'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="659">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnError'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="660">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="661">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="662">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="663"/>
  <line no="664">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnFailure'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="665">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnFailure'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="666">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnFailure'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="667">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="668">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="669">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="670"/>
  <line no="671">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnIncomplete'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="672">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnIncomplete'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="673">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnIncomplete'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="674">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="675">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="676">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="677"/>
  <line no="678">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnRisky'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="679">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnRisky'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="680">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnRisky'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="681">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="682">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="683">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="684"/>
  <line no="685">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnSkipped'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="686">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnSkipped'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="687">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'stopOnSkipped'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="688">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="689">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="690">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="691"/>
  <line no="692">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'testSuiteLoaderClass'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="693">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'testSuiteLoaderClass'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="694">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'testSuiteLoaderClass'</token>
  </line>
  <line no="695">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="696">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="697"/>
  <line no="698">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'testSuiteLoaderFile'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="699">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'testSuiteLoaderFile'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="700">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'testSuiteLoaderFile'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="701">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="702">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="703"/>
  <line no="704">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'printerClass'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="705">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'printerClass'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="706">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'printerClass'</token>
  </line>
  <line no="707">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="708">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="709"/>
  <line no="710">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'printerFile'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="711">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'printerFile'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="712">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'printerFile'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="713">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="714">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="715"/>
  <line no="716">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForSmallTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="717">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForSmallTests'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="718">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForSmallTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="719">
    <token name="T_WHITESPACE">                </token>
    <token name="T_LNUMBER">1</token>
  </line>
  <line no="720">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="721">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="722"/>
  <line no="723">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForMediumTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="724">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForMediumTests'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="725">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForMediumTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="726">
    <token name="T_WHITESPACE">                </token>
    <token name="T_LNUMBER">10</token>
  </line>
  <line no="727">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="728">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="729"/>
  <line no="730">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForLargeTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="731">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForLargeTests'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="732">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeoutForLargeTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="733">
    <token name="T_WHITESPACE">                </token>
    <token name="T_LNUMBER">60</token>
  </line>
  <line no="734">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="735">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="736"/>
  <line no="737">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutTestsThatDoNotTestAnything'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="738">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'reportUselessTests'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="739">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutTestsThatDoNotTestAnything'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="740">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="741">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="742">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="743"/>
  <line no="744">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'checkForUnintentionallyCoveredCode'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="745">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'strictCoverage'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="746">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'checkForUnintentionallyCoveredCode'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="747">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="748">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="749">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="750"/>
  <line no="751">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutOutputDuringTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="752">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'disallowTestOutput'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="753">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutOutputDuringTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="754">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="755">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="756">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="757"/>
  <line no="758">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutChangesToGlobalState'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="759">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'disallowChangesToGlobalState'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="760">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutChangesToGlobalState'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="761">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="762">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="763">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="764"/>
  <line no="765">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutTestSize'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="766">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'enforceTimeLimit'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="767">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutTestSize'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="768">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="769">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="770">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="771"/>
  <line no="772">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutTodoAnnotatedTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="773">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'disallowTodoAnnotatedTests'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="774">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'beStrictAboutTodoAnnotatedTests'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="775">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="776">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="777">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="778"/>
  <line no="779">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'strict'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="780">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$flag</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="781">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'strict'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="782">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="783">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="784"/>
  <line no="785">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'reportUselessTests'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flag</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="786">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'strictCoverage'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE">              </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flag</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="787">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'disallowTestOutput'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE">          </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flag</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="788">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'enforceTimeLimit'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flag</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="789">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'disallowTodoAnnotatedTests'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flag</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="790">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'deprecatedStrictModeSetting'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="791">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="792"/>
  <line no="793">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'verbose'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="794">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'verbose'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="795">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$root</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'verbose'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="796">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING">false</token>
  </line>
  <line no="797">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="798">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="799"/>
  <line no="800">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="801">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="802"/>
  <line no="803">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="804">
    <token name="T_DOC_COMMENT">     * Returns the SeleniumTestCase browser configuration.</token>
  </line>
  <line no="805">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="806">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="807">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="808">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.9</token>
  </line>
  <line no="809">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="810">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getSeleniumBrowserConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="811">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="812">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="813"/>
  <line no="814">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'selenium/browser'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="815">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="816">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$browser</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'browser'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="817"/>
  <line no="818">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'host'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="819">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$host</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'host'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="820">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="821">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$host</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'localhost'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="822">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="823"/>
  <line no="824">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'port'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="825">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$port</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="826">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'port'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="827">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_LNUMBER">4444</token>
  </line>
  <line no="828">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="829">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="830">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$port</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">4444</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="831">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="832"/>
  <line no="833">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeout'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="834">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$timeout</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="835">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$config</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeout'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="836">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_LNUMBER">30000</token>
  </line>
  <line no="837">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="838">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="839">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$timeout</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">30000</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="840">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="841"/>
  <line no="842">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="843">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="844">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'browser'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$browser</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="845">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'host'</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$host</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="846">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'port'</token>
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$port</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="847">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'timeout'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$timeout</token>
  </line>
  <line no="848">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="849">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="850"/>
  <line no="851">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="852">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="853"/>
  <line no="854">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="855">
    <token name="T_DOC_COMMENT">     * Returns the test suite configuration.</token>
  </line>
  <line no="856">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="857">
    <token name="T_DOC_COMMENT">     * @return PHPUnit_Framework_TestSuite</token>
  </line>
  <line no="858">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="859">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.1</token>
  </line>
  <line no="860">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="861">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getTestSuiteConfiguration</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteFilter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="862">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="863">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$testSuiteNodes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'testsuites/testsuite'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="864"/>
  <line no="865">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNodes</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="866">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$testSuiteNodes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'testsuite'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="867">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="868"/>
  <line no="869">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNodes</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="870">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTestSuite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNodes</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">item</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testSuiteFilter</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="871">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="872"/>
  <line no="873">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNodes</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">length</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="874">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_TestSuite</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="875"/>
  <line no="876">
    <token name="T_WHITESPACE">            </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNodes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testSuiteNode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="877">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addTestSuite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="878">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTestSuite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNode</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testSuiteFilter</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="879">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="880">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="881"/>
  <line no="882">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="883">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="884">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="885"/>
  <line no="886">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="887">
    <token name="T_DOC_COMMENT">     * @param DOMElement $testSuiteNode</token>
  </line>
  <line no="888">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="889">
    <token name="T_DOC_COMMENT">     * @return PHPUnit_Framework_TestSuite</token>
  </line>
  <line no="890">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="891">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.4.0</token>
  </line>
  <line no="892">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="893">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getTestSuite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">DOMElement</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testSuiteNode</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testSuiteFilter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="894">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="895">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="896">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_TestSuite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="897">
    <token name="T_WHITESPACE">                </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testSuiteNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="898">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="899">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="900">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_TestSuite</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="901">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="902"/>
  <line no="903">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$exclude</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="904"/>
  <line no="905">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getElementsByTagName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'exclude'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$excludeNode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="906">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$excludeFile</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$excludeNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="907">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$excludeFile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="908">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$exclude</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$excludeFile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="909">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="910">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="911"/>
  <line no="912">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$fileIteratorFacade</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">File_Iterator_Facade</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="913"/>
  <line no="914">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getElementsByTagName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'directory'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="915">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteFilter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parentNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_EQUAL">!=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testSuiteFilter</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="916">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="917">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="918"/>
  <line no="919">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="920"/>
  <line no="921">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="922">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="923">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="924"/>
  <line no="925">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpVersion'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="926">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpVersion</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpVersion'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="927">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="928">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpVersion</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_VERSION</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="929">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="930"/>
  <line no="931">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpVersionOperator'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="932">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpVersionOperator</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpVersionOperator'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="933">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="934">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpVersionOperator</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&gt;='</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="935">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="936"/>
  <line no="937">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">version_compare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PHP_VERSION</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpVersion</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpVersionOperator</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="938">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="939">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="940"/>
  <line no="941">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'prefix'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="942">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'prefix'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="943">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="944">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="945">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="946"/>
  <line no="947">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'suffix'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="948">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$suffix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directoryNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'suffix'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="949">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="950">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$suffix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Test.php'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="951">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="952"/>
  <line no="953">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$files</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fileIteratorFacade</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getFilesAsArray</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="954">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="955">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$suffix</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="956">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="957">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$exclude</token>
  </line>
  <line no="958">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="959">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addTestFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$files</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="960">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="961"/>
  <line no="962">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getElementsByTagName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fileNode</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="963">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$testSuiteFilter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fileNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parentNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_EQUAL">!=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$testSuiteFilter</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="964">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="965">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="966"/>
  <line no="967">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fileNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="968"/>
  <line no="969">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="970">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="971">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="972"/>
  <line no="973">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// Get the absolute path to the file</token>
  </line>
  <line no="974">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fileIteratorFacade</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getFilesAsArray</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="975">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="976">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="977"/>
  <line no="978">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="979">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="980">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="981"/>
  <line no="982">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="983"/>
  <line no="984">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fileNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpVersion'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="985">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpVersion</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fileNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpVersion'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="986">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="987">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpVersion</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_VERSION</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="988">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="989"/>
  <line no="990">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fileNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpVersionOperator'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="991">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpVersionOperator</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fileNode</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpVersionOperator'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="992">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="993">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$phpVersionOperator</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&gt;='</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="994">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="995"/>
  <line no="996">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">version_compare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PHP_VERSION</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpVersion</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpVersionOperator</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="997">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="998">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="999"/>
  <line no="1000">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addTestFile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1001">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1002"/>
  <line no="1003">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1004">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1005"/>
  <line no="1006">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1007">
    <token name="T_DOC_COMMENT">     * @param string $value</token>
  </line>
  <line no="1008">
    <token name="T_DOC_COMMENT">     * @param bool   $default</token>
  </line>
  <line no="1009">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1010">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="1011">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1012">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.3</token>
  </line>
  <line no="1013">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="1014">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getBoolean</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$default</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1015">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1016">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'false'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1017">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1018">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strtolower</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'true'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1019">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1020">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1021"/>
  <line no="1022">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$default</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1023">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1024"/>
  <line no="1025">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1026">
    <token name="T_DOC_COMMENT">     * @param string $value</token>
  </line>
  <line no="1027">
    <token name="T_DOC_COMMENT">     * @param bool   $default</token>
  </line>
  <line no="1028">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1029">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="1030">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1031">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.6.0</token>
  </line>
  <line no="1032">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="1033">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$default</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1034">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1035">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_numeric</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1036">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1037">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1038"/>
  <line no="1039">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$default</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1040">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1041"/>
  <line no="1042">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1043">
    <token name="T_DOC_COMMENT">     * @param string $query</token>
  </line>
  <line no="1044">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1045">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="1046">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1047">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.3</token>
  </line>
  <line no="1048">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="1049">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">readFilterDirectories</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$query</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1050">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1051">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$directories</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1052"/>
  <line no="1053">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$query</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1054">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$directoryPath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1055"/>
  <line no="1056">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$directoryPath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1057">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1058">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1059"/>
  <line no="1060">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'prefix'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1061">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'prefix'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1062">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1063">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1064">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1065"/>
  <line no="1066">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'suffix'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1067">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$suffix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'suffix'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1068">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1069">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$suffix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.php'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1070">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1071"/>
  <line no="1072">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'group'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1073">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$group</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directory</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'group'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1074">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1075">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$group</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'DEFAULT'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1076">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1077"/>
  <line no="1078">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$directories</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="1079">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'path'</token>
    <token name="T_WHITESPACE">   </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$directoryPath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1080">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'prefix'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1081">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'suffix'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$suffix</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="1082">
    <token name="T_WHITESPACE">              </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'group'</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$group</token>
  </line>
  <line no="1083">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1084">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1085"/>
  <line no="1086">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$directories</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1087">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1088"/>
  <line no="1089">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1090">
    <token name="T_DOC_COMMENT">     * @param string $query</token>
  </line>
  <line no="1091">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1092">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="1093">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1094">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.2.3</token>
  </line>
  <line no="1095">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="1096">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">readFilterFiles</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$query</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1097">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1098">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$files</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1099"/>
  <line no="1100">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">xpath</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$query</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1101">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$filePath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING_CAST">(string)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">textContent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1102">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filePath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1103">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$files</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filePath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1104">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1105">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1106"/>
  <line no="1107">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$files</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1108">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1109"/>
  <line no="1110">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1111">
    <token name="T_DOC_COMMENT">     * @param string $path</token>
  </line>
  <line no="1112">
    <token name="T_DOC_COMMENT">     * @param bool   $useIncludePath</token>
  </line>
  <line no="1113">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1114">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="1115">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="1116">
    <token name="T_DOC_COMMENT">     * @since  Method available since Release 3.5.0</token>
  </line>
  <line no="1117">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="1118">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">toAbsolutePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$useIncludePath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="1119">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1120">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1121">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1122">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1123"/>
  <line no="1124">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Matches the following on Windows:</token>
  </line>
  <line no="1125">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//  - \\NetworkComputer\Path</token>
  </line>
  <line no="1126">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//  - \\.\D:</token>
  </line>
  <line no="1127">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//  - \\.\c:</token>
  </line>
  <line no="1128">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//  - C:\Windows</token>
  </line>
  <line no="1129">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//  - C:\windows</token>
  </line>
  <line no="1130">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//  - C:/windows</token>
  </line>
  <line no="1131">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">//  - c:/windows</token>
  </line>
  <line no="1132">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">defined</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PHP_WINDOWS_VERSION_BUILD'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
  </line>
  <line no="1133">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'\\'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="1134">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_match</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'#^[A-Z]\:[/\\\]#i'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">3</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1135">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1136">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1137"/>
  <line no="1138">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// Stream</token>
  </line>
  <line no="1139">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strpos</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'://'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1140">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1141">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1142"/>
  <line no="1143">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dirname</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">filename</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DIRECTORY_SEPARATOR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1144"/>
  <line no="1145">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$useIncludePath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">file_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1146">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$includePathFile</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">stream_resolve_include_path</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1147"/>
  <line no="1148">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$includePathFile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1149">
    <token name="T_WHITESPACE">                </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$includePathFile</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1150">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1151">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1152"/>
  <line no="1153">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1154">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1155">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1156"/>
</source>
