<?xml version="1.0" encoding="UTF-8"?>
<trait xmlns="http://xml.phpdox.net/src" full="Illuminate\Database\Eloquent\SoftDeletes" namespace="Illuminate\Database\Eloquent" name="SoftDeletes" abstract="false" final="false" start="5" end="169">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent" file="SoftDeletes.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/SoftDeletes.php" size="4205" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="c18354da2889d4c55fb3c4fec7078670accec058" relative="vendor/laravel/framework/src/Illuminate/Database/Eloquent/SoftDeletes.php"/>
  <member name="forceDeleting" type="boolean" default="false" visibility="protected" line="12">
    <docblock>
      <description compact="Indicates if the model is currently force deleting."/>
      <var type="object">
        <type full="Illuminate\Database\Eloquent\bool" namespace="Illuminate\Database\Eloquent" name="bool"/>
      </var>
    </docblock>
  </member>
  <method name="bootSoftDeletes" start="19" end="22" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Boot the soft deleting trait for a model."/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\void" namespace="Illuminate\Database\Eloquent" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="forceDelete" start="29" end="36" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Force a hard delete on a soft deleted model."/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\void" namespace="Illuminate\Database\Eloquent" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="performDeleteOnModel" start="43" end="50" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Perform the actual delete query on this model instance."/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="runSoftDelete" start="57" end="64" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Perform the actual delete query on this model instance."/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\void" namespace="Illuminate\Database\Eloquent" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="restore" start="71" end="92" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Restore a soft-deleted model instance."/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\bool|null" namespace="Illuminate\Database\Eloquent" name="bool|null"/>
      </return>
    </docblock>
    <inline>
      <comment value="If the restoring event does not return false, we will proceed with this" line="73"/>
      <comment value="restore operation. Otherwise, we bail out so the developer will stop" line="74"/>
      <comment value="the restore totally. We will clear the deleted timestamp and save." line="75"/>
      <comment value="Once we have saved the model, we will fire the &quot;restored&quot; event so this" line="82"/>
      <comment value="developer will do anything they need to after a restore operation is" line="83"/>
      <comment value="totally finished. Then we will return the result of the save call." line="84"/>
    </inline>
  </method>
  <method name="trashed" start="99" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine if the model instance has been soft-deleted."/>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\bool" namespace="Illuminate\Database\Eloquent" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="withTrashed" start="109" end="112" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get a new query builder that includes soft deletes."/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Builder|static" namespace="\Illuminate\Database\Eloquent" name="Builder|static"/>
      </return>
    </docblock>
  </method>
  <method name="onlyTrashed" start="119" end="126" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get a new query builder that only includes soft deletes."/>
      <return type="object">
        <type full="\Illuminate\Database\Eloquent\Builder|static" namespace="\Illuminate\Database\Eloquent" name="Builder|static"/>
      </return>
    </docblock>
  </method>
  <method name="restoring" start="134" end="137" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Register a restoring model event with the dispatcher."/>
      <param type="object" variable="$callback">
        <type full="\Closure|string" namespace="" name="Closure|string"/>
      </param>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\void" namespace="Illuminate\Database\Eloquent" name="void"/>
      </return>
    </docblock>
    <parameter name="callback" byreference="false" type="{unknown}"/>
  </method>
  <method name="restored" start="145" end="148" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Register a restored model event with the dispatcher."/>
      <param type="object" variable="$callback">
        <type full="\Closure|string" namespace="" name="Closure|string"/>
      </param>
      <return type="object">
        <type full="Illuminate\Database\Eloquent\void" namespace="Illuminate\Database\Eloquent" name="void"/>
      </return>
    </docblock>
    <parameter name="callback" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDeletedAtColumn" start="155" end="158" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the name of the &quot;deleted at&quot; column."/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getQualifiedDeletedAtColumn" start="165" end="168" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the fully qualified &quot;deleted at&quot; column."/>
      <return type="string"/>
    </docblock>
  </method>
</trait>
