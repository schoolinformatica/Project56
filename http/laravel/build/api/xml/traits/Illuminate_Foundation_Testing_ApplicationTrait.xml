<?xml version="1.0" encoding="UTF-8"?>
<trait xmlns="http://xml.phpdox.net/src" full="Illuminate\Foundation\Testing\ApplicationTrait" namespace="Illuminate\Foundation\Testing" name="ApplicationTrait" abstract="false" final="false" start="9" end="314">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Testing" file="ApplicationTrait.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Testing/ApplicationTrait.php" size="7875" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="000ed17873d28778d00c784a2192cd4032bcfbca" relative="vendor/laravel/framework/src/Illuminate/Foundation/Testing/ApplicationTrait.php"/>
  <member name="app" visibility="protected" line="16">
    <docblock>
      <description compact="The Illuminate application instance."/>
      <var type="object">
        <type full="\Illuminate\Foundation\Application" namespace="\Illuminate\Foundation" name="Application"/>
      </var>
    </docblock>
  </member>
  <member name="code" visibility="protected" line="23">
    <docblock>
      <description compact="The last code returned by Artisan CLI."/>
      <var type="int"/>
    </docblock>
  </member>
  <method name="refreshApplication" start="30" end="35" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Refresh the application instance."/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="instance" start="44" end="49" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Register an instance of an object in the container."/>
      <param type="string" variable="$abstract"/>
      <param type="object" variable="$instance"/>
      <return type="object"/>
    </docblock>
    <parameter name="abstract" byreference="false" type="{unknown}"/>
    <parameter name="instance" byreference="false" type="{unknown}"/>
  </method>
  <method name="expectsEvents" start="59" end="86" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Specify a list of events that should be fired for the given operation.">These events will be mocked, so that handlers will not actually be executed.</description>
      <param type="object" variable="$events">
        <type full="Illuminate\Foundation\Testing\array|mixed" namespace="Illuminate\Foundation\Testing" name="array|mixed"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
    <parameter name="events" byreference="false" type="{unknown}"/>
  </method>
  <method name="withoutEvents" start="93" end="102" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Mock the event dispatcher so all events are silenced."/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
  </method>
  <method name="expectsJobs" start="112" end="128" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Specify a list of jobs that should be dispatched for the given operation.">These jobs will be mocked, so that handlers will not actually be executed.</description>
      <param type="object" variable="$jobs">
        <type full="Illuminate\Foundation\Testing\array|mixed" namespace="Illuminate\Foundation\Testing" name="array|mixed"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
    <parameter name="jobs" byreference="false" type="{unknown}"/>
  </method>
  <method name="withSession" start="136" end="141" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the session to the given array."/>
      <param type="array" variable="$data"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
  </method>
  <method name="session" start="149" end="156" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the session to the given array."/>
      <param type="array" variable="$data"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="array"/>
  </method>
  <method name="startSession" start="163" end="168" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Start the session for the application."/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="flushSession" start="175" end="180" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Flush all of the current session data."/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="withoutMiddleware" start="187" end="192" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Disable middleware for the test."/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
  </method>
  <method name="actingAs" start="201" end="206" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the currently logged in user for the application."/>
      <param type="object" variable="$user">
        <type full="\Illuminate\Contracts\Auth\Authenticatable" namespace="\Illuminate\Contracts\Auth" name="Authenticatable"/>
      </param>
      <param type="object" variable="$driver">
        <type full="Illuminate\Foundation\Testing\string|null" namespace="Illuminate\Foundation\Testing" name="string|null"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
    <parameter name="user" byreference="false" type="object">
      <type full="Illuminate\Contracts\Auth\Authenticatable" namespace="Illuminate\Contracts\Auth" name="Authenticatable"/>
    </parameter>
    <parameter name="driver" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="be" start="215" end="218" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the currently logged in user for the application."/>
      <param type="object" variable="$user">
        <type full="\Illuminate\Contracts\Auth\Authenticatable" namespace="\Illuminate\Contracts\Auth" name="Authenticatable"/>
      </param>
      <param type="object" variable="$driver">
        <type full="Illuminate\Foundation\Testing\string|null" namespace="Illuminate\Foundation\Testing" name="string|null"/>
      </param>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="user" byreference="false" type="object">
      <type full="Illuminate\Contracts\Auth\Authenticatable" namespace="Illuminate\Contracts\Auth" name="Authenticatable"/>
    </parameter>
    <parameter name="driver" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="seeInDatabase" start="228" end="241" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Assert that a given where condition exists in the database."/>
      <param type="string" variable="$table"/>
      <param type="array" variable="$data"/>
      <param type="string" variable="$connection"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="array"/>
    <parameter name="connection" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="missingFromDatabase" start="251" end="254" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Assert that a given where condition does not exist in the database."/>
      <param type="string" variable="$table"/>
      <param type="array" variable="$data"/>
      <param type="string" variable="$connection"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="array"/>
    <parameter name="connection" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="dontSeeInDatabase" start="264" end="267" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Assert that a given where condition does not exist in the database."/>
      <param type="string" variable="$table"/>
      <param type="array" variable="$data"/>
      <param type="string" variable="$connection"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="array"/>
    <parameter name="connection" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="notSeeInDatabase" start="277" end="290" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Assert that a given where condition does not exist in the database."/>
      <param type="string" variable="$table"/>
      <param type="array" variable="$data"/>
      <param type="string" variable="$connection"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\$this" namespace="Illuminate\Foundation\Testing" name="$this"/>
      </return>
    </docblock>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="array"/>
    <parameter name="connection" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="seed" start="298" end="301" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Seed a given database connection."/>
      <param type="string" variable="$class"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="class" byreference="false" type="string" default="'DatabaseSeeder'"/>
  </method>
  <method name="artisan" start="310" end="313" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Call artisan command and return code."/>
      <param type="string" variable="$command"/>
      <param type="array" variable="$parameters"/>
      <return type="int"/>
    </docblock>
    <parameter name="command" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="array" default=""/>
  </method>
</trait>
