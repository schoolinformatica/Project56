<?xml version="1.0" encoding="UTF-8"?>
<trait xmlns="http://xml.phpdox.net/src" full="Illuminate\Foundation\Testing\AssertionsTrait" namespace="Illuminate\Foundation\Testing" name="AssertionsTrait" abstract="false" final="false" start="8" end="203">
  <file path="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Testing" file="AssertionsTrait.php" realpath="/home/robert/Desktop/Hogeschool/2ejaars Development/DevBOpdrachten/project56/http/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Testing/AssertionsTrait.php" size="5576" time="2015-12-17T18:44:09+00:00" unixtime="1450377849" sha1="449594c60e868500860f1c324858e3f10d736190" relative="vendor/laravel/framework/src/Illuminate/Foundation/Testing/AssertionsTrait.php"/>
  <method name="assertResponseOk" start="15" end="20" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the client response has an OK status code."/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="assertResponseStatus" start="28" end="33" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the client response has a given code."/>
      <param type="int" variable="$code"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="code" byreference="false" type="{unknown}"/>
  </method>
  <method name="assertViewHas" start="42" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the response view has a given piece of bound data."/>
      <param type="object" variable="$key">
        <type full="Illuminate\Foundation\Testing\string|array" namespace="Illuminate\Foundation\Testing" name="string|array"/>
      </param>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="assertViewHasAll" start="65" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the view has a given list of bound data."/>
      <param type="array" variable="$bindings"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="bindings" byreference="false" type="array"/>
  </method>
  <method name="assertViewMissing" start="82" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the response view is missing a piece of bound data."/>
      <param type="string" variable="$key"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="assertRedirectedTo" start="98" end="105" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert whether the client was redirected to a given URI."/>
      <param type="string" variable="$uri"/>
      <param type="array" variable="$with"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="uri" byreference="false" type="{unknown}"/>
    <parameter name="with" byreference="false" type="array" default=""/>
  </method>
  <method name="assertRedirectedToRoute" start="115" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert whether the client was redirected to a given route."/>
      <param type="string" variable="$name"/>
      <param type="array" variable="$parameters"/>
      <param type="array" variable="$with"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="array" default=""/>
    <parameter name="with" byreference="false" type="array" default=""/>
  </method>
  <method name="assertRedirectedToAction" start="128" end="131" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert whether the client was redirected to a given action."/>
      <param type="string" variable="$name"/>
      <param type="array" variable="$parameters"/>
      <param type="array" variable="$with"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="parameters" byreference="false" type="array" default=""/>
    <parameter name="with" byreference="false" type="array" default=""/>
  </method>
  <method name="assertSessionHas" start="140" end="151" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the session has a given value."/>
      <param type="object" variable="$key">
        <type full="Illuminate\Foundation\Testing\string|array" namespace="Illuminate\Foundation\Testing" name="string|array"/>
      </param>
      <param type="mixed" variable="$value"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="assertSessionHasAll" start="159" end="168" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the session has a given list of values."/>
      <param type="array" variable="$bindings"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="bindings" byreference="false" type="array"/>
  </method>
  <method name="assertSessionHasErrors" start="177" end="192" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the session has errors bound."/>
      <param type="object" variable="$bindings">
        <type full="Illuminate\Foundation\Testing\string|array" namespace="Illuminate\Foundation\Testing" name="string|array"/>
      </param>
      <param type="mixed" variable="$format"/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
    <parameter name="bindings" byreference="false" type="array" default=""/>
    <parameter name="format" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="assertHasOldInput" start="199" end="202" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Assert that the session has old input."/>
      <return type="object">
        <type full="Illuminate\Foundation\Testing\void" namespace="Illuminate\Foundation\Testing" name="void"/>
      </return>
    </docblock>
  </method>
</trait>
